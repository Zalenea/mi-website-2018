[{"categories":null,"content":"","tags":null,"title":"Showcase 2017","uri":"https://www.medieninformatik.th-koeln.de/pulse/showcase-2017/"},{"categories":null,"content":"Die nachfolgende Arbeit beschäftigt sich mit der Entwicklung der Webanwendung 25Knots zu einem marktfähigen Produkt, basierend auf bereits im Praxisprojekt erarbeiteten Konzepten und einem Proof of Concept. Ziel ist dabei nicht nur, die Verwendung durch die Community nach Abschluss dieser Arbeit möglich zu machen, sondern diese auch aktiv an der Weiterentwicklung der Anwendung teilhaben zu lassen. Die Anwendung 25Knots zielt darauf ab, die gestalterische Qualität von Artefakten im Hochschulkontext zu verbessern. Dieses Ziel soll durch die Unterstützung von Studierenden während des Entwicklungsprozesses von Artefakten erreicht werden. Die Anwendung soll den Studierenden dabei eine Möglichkeit bieten, interaktiv Ergebnisse zu produzieren, die für ihren aktuellen Entwicklungsprozess hilfreich sind. Wissen soll dabei eher implizit, durch ein Learning by Doing Konzept, vermittelt werden.\n","tags":null,"title":"25knots – Ein Tool zur Verbesserung der gestalterischen Qualität von Artefakten im Hochschulkontext","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/25knots-ein-tool-zur-verbesserung-der-gestalterischen-qualitaet-von-artefakten-im-hochschulkontext/"},{"categories":null,"content":"Die Multimedia in einem Auto wird durch die steigende Entwicklungen der Technologie immer beliebter. Von einfachen CD-Player und Radioempfänger sind mittlerweile Navigationssysteme, Telefonieren oder auch das Internet in einem Auto zu finden. Um die Interaktion mit diesen Entertainmentsystemen zu vereinfachen wurde aus einem einfachen LCD-Bildschirm, Touch-Oberflächen integriert. Die \u0026ldquo;Intuitivität\u0026rdquo; der Interaktionsmöglichkeiten soll durch die Einführung von berührungslosen Gesten erreicht werden. Der Nutzer soll schnell und intuitiv mit dem System interagieren können, doch was bedeutet dies für den Nutzer? Eine Methode, um ein System nach den Bedürfnissen und Wünschen des Nutzers zu entwickeln ist das user-centered-design. Anhand dieser empirischen Studie soll ermittelt werden, ob Nutzer mit ihren Erfahrungen aus dem Bereich der Multi-Touch Gesten ausgewählte Funktionen für die Steuerung von Multimedia, ohne zusätzliche Hilfe mit berührungslosen Gesten ausführen können. Daraus soll am Ende dieser Arbeit ein Gestenset zu den jeweiligen Funktionen erstellt werden.\n","tags":null,"title":"Ableitung von berührungslosen Gesten aus Multi-Touch Gesten für die Steuerung von Multimedia im Automobil","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/ableitung-von-beruehrungslosen-gesten-aus-multi-touch-gesten-fuer-die-steuerung-von-multimedia-im-automobil/"},{"categories":null,"content":"Die Gestaltung und Optimierung von Webseiten auf die unterschiedlichsten Geräte, Bildschirmgrößen und -Auflösungen rückt durch das ständige Wachstum der Anzahl mobiler Internetnutzer immer mehr in den Fokus der Webdesigner und -entwickler und sollte daher bei der Entwicklung von Webseiten berücksichtigt werden. Die vorliegende Arbeit befasst sich damit den Entwurf eines Vorgehensmodells zu vermitteln, welcher in seinen Grundzügen die Aspekte der reaktionsfähigen Webentwicklung sowie der atomaren Gestaltung kombiniert. Basis für das Vorgehensmodell ist der von Stephen Hay und Brad Frost erarbeitete Responsive Design Workflow (kurz RDW) sowie der Atomic Design (kurz AD) Ansatz, da diese bereits die wesentlichen Aspekte, sowie die Grundlagen zur gestalterischen und technischen Umsetzung von Webseiten und die wichtigen Prinzipien der Inhaltsgestaltung beinhalten. Das Ziel dieser Arbeit ist es, die implizierten Herangehensweisen dieser Ansätze aufzuzeigen und diese zu einem neuen Vorgehensmodell zu kombinieren. Deshalb werden zunächst die Grundlagen dieser Ansätze kurz thematisiert und im Zuge dieser Arbeit miteinander kombiniert, sodass die Aspekte beider Verfahren in ein neues Entwicklungsmodell überführt werden. Nach den theoretischen Grundlagen wird die erarbeitete Vorgehensweise mit praktischen Einsatzbeispielen verdeutlicht. Im fortlaufenden Prozess wird so eine Webseite mit realen Anforderungen erstellt, sodass der Leser anhand zahlreicher Beispiele eine konkrete Hilfestellung an die Hand gegeben bekommt, um neue Gestaltungslösungen zu entwerfen und diese bewerten zu können. Dabei werden verwendete Begrifflichkeiten beleuchtet und auf die gestalterische und technische sowie organisatorische Umsetzung eingegangen. So entsteht ein neuartiges Vorgehensmodell, das durch die Berücksichtigung verschiedener Aspekte der Webentwicklung die Entwicklung von Webseiten ermöglichen soll.\n","tags":null,"title":"Atomic Responsive Design Workflow Kombination des Responsive Design Workflows mit dem Atomic Design zu einem neuen Vorgehensmodell","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/atomic-responsive-design-workflow-kombination-des-responsive-design-workflows-mit-dem-atomic-design-zu-einem-neuen-vorgehensmodell/"},{"categories":null,"content":"Das Suchen ist eine der, wenn nicht die am häufigsten durchgeführte Tätigkeit im Internet. Täglich werden Suchmaschinen mit Problemen aus aller Welt und aller Domänen befragt, in der Hoffnung, dass das Internet eine Lösung bereitstellt. Neben dem Web der Dokumente, welches überwiegend die großen Suchmaschinenhersteller wie Google und Microsoft durchsuchen, existiert auch das weniger bekannte Web der Daten. In diesem Teil des Internets werden Daten, keine Dokumente, in einem festen Format kodiert. Dadurch soll die Möglichkeit geschaffen werden, dass nicht nur Menschen, sondern auch Maschinen, diese Daten verarbeiten können. Die Daten enthalten untereinander Verlinkungen, weswegen man auch von Linked Data spricht. Mit der vom W3C standardisierten Abfragesprache SPARQL ist es möglich, diese Daten nach selbst definierten Kriterien abzufragen.\nDiese Arbeit befasst sich mit der Entwicklung einer SPARQL Abfrage zur Ermittlung von Sehenswürdigkeiten in Köln. Anhand dieses Anwendungsbeispiels soll beschrieben werden, inwieweit Linked Data in der Lage ist, mit Problemen und Fragestellungen des Alltags umzugehen. Es wird sich zeigen, dass es grundsätzlich möglich ist, derartige Anwendungsszenarien mit Linked Data zu lösen. Ein umfassendes Suchergebnis, welches beispielsweise Reiseführer geben, konnte jedoch nicht erzielt werden. Grund dafür sind hauptsächlich, wie in dieser Arbeit dargelegt wird, inkonsistente Daten. Um diese Beobachtung aufstellen zu können, wurden präzisere Suchkriterien für Sehenswürdigkeiten spezifiziert. Weitere Auffälligkeiten, die während der Entwicklung bemerkt wurden, wurden entsprechend dokumentiert.\n","tags":null,"title":"Die Ermittlung von Sehenswürdigkeiten mittels Linked Open Data am Beispiel der Stadt Köln","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/die-ermittlung-von-sehenswuerdigkeiten-mittels-linked-open-data-am-beispiel-der-stadt-koeln/"},{"categories":null,"content":"In dieser Bachelorarbeit wird die Auftragsbearbeitung eines kleinen Unternehmens analysiert und auf Grundlage dessen eine Webanwendung entwickelt, welche diese digitalisieren und optimieren soll. Dabei wird eine genaue Betrachtung der Ausgangssituation vorgenommen und eine Stakeholderbetrachtung durchgeführt. Aus den daraus resultierenden Anforderungen an die Webanwendung wird in der Konzeption ein Lösungsansatz entwickelt, welcher die Anforderungen an diese erfüllt. Anschließend wird eine Technologieunabhängige Systemarchitektur entwickelt. Anhand der in der Konzeption erarbeiteten Ergebnisse werden Anforderungen an das System ermittelt. Basierend auf den Anforderungen an die Webanwendung sowie den Anforderungen an das System wird eine Gliederung der Technologieabwägung vorgenommen und abschließend geeignete Technologie abgewägt. Die Bachelorarbeit endet mit der Dokumentation der Implementierung und diskutiert abschließend den Zielerreichungsgrad.\n","tags":null,"title":"Entwicklung einer webbasierten Auftragsbearbeitung für ein Kleinunternehmen in der Lohnfertigung","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/entwicklung-einer-webbasierten-auftragsbearbeitung-fuer-ein-kleinunternehmen-in-der-lohnfertigung/"},{"categories":null,"content":"Ziel des vorliegenden Praxisprojektes war es, relevante Themengebiete für die Konzeption eines Tools zu definieren, das Nutzern dabei hilft, Gestaltungslösungen im Hochschulkontext zu erstellen. Zu diesem Zweck wurden zunächst relevante Themengebiete auf Basis einer Fehleranalyse ermittelt. Anschließend wurde der Versuch unternommen, in den jeweiligen Themengebieten Regeln zu definieren, die bei einer späteren Umsetzung des Tool berücksichtigt werden können. Die Arbeit hält die theoretischen Ergebnisse fest und verweist auf einige praktische Ergebnisse wie etwa einen Proof of Concept oder Wireframes, die erstellt wurden.\n","tags":null,"title":"Ermittlung relevanter Themengebiete für die Entwicklung eines Tools zur Unterstützung beim Erstellen von Gestaltungslösungen im Hochschulkontext","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/ermittlung-relevanter-themengebiete-fuer-die-entwicklung-eines-tools-zur-unterstuetzung-beim-erstellen-von-gestaltungsloesungen-im-hochschulkontext/"},{"categories":null,"content":"Die vorliegende Bachelor-Thesis beschaftigt sich mit der Optimierung der zur Zeit der Ausarbeitung aktuellen Arbeitsweisen und eingesetzten Technologien bei der Firma JAR Media GmbH im Frontend-Editor. Diese werden von dem Autor kritisch uberpruft und auf Grundlage des Atomic Design-Ansatzes optimiert. Dabei werden die angesagten und ausgereiften Werkzeuge auf dem Markt auf eine mogliche Verwendung im besagten Unternehmen evaluiert. Anschlie\u0019end ndet die Entwicklung eines eigenen speziell auf die Firma JAR Media GmbH zugeschnittenen Work ows, unter Berucksichtigung vieler fur die Firma wichtigen Faktoren statt, welches kritisch auf die Optimierungsfaktoren E\u000ezienz, Qualitat und Zuganglichkeit uberpruft wird. Das Fazit inklusive einem Ausblick schlie\u0019t die Bachelor-Thesis ab.\n","tags":null,"title":"Implementierung und Optimierung des Atomic Design-Ansatzes in den Workflow der JAR Media GmbH","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/implementierung-und-optimierung-des-atomic-design-ansatzes-in-den-workflow-der-jar-media-gmbh/"},{"categories":null,"content":"Das folgende Dokument beschreibt die Internationalisierung und Lokalisierung von Webanwendungen. Anhand der bereits aufgezeigten Aspekte im Praxisprojekt, werden diese in der praktischen Umsetzung erfolgen. Dabei wird auf das AngularJS Framework zurückgegriffen, welches einige Möglichkeiten zur Implementierung von mehrsprachigen Webanwendungen bietet. Leider sind die vordefinierten Möglichkeiten limitiert, deshalb werden zusätzliche Module von Drittanbietern in Betracht gezogen. Dabei werden die dortigen Lösungen und Ergänzungen beschrieben und gegeneinander abgewogen. Anschließend werden die einzelnen Funktionen der Module für eine Bewertung ermittelt, die daraus resultierenden Ergebnisse in Abwägung gegenüber gestellt und zu einem Vergleich zusammengefasst. Das Ziel des Projektes ist es, eine Beispiel-Anwendung zu erstellen, welche unter Zuhilfenahme von AngularJS entwickelt wird. Diese Anwendung soll Entwicklern als Beispiel und Gedankenstütze dienen, die wichtigen Aspekte der Internationalisierung sowie Lokalisierung zu berücksichtigen.\n","tags":null,"title":"Internationalisierung und Lokalisierung von Webanwendungen unter Zuhilfenahme von AngularJS","uri":"https://www.medieninformatik.th-koeln.de/papers/2015/internationalisierung-und-lokalisierung-von-webanwendungen-unter-zuhilfenahme-von-angularjs/"},{"categories":null,"content":"Diese Arbeit befasst sich mit der Analyse und Evaluation einer androidbasierten Smartwatch zum Zwecke der Untersuchung der Auswirkungen des User Interface Designs auf die Nutzung von Smartwatches. Hierzu soll die Domäne und all ihre Kontexte detailliert untersucht und beschrieben werden. Daher werden menschzentrierte Gestaltungsaktivitäten auszuführen. Aufbauend darauf soll das User Interface Design der Smartwatch evaluiert werden. In diesem Zusammenhang sollen mögliche Evaluationsmethoden betrachtet und für den möglichen Einsatz abgewägt werden. Anschließend gilt es, entsprechende Evaluationserergebnisse auszuwerten und Thesen bezüglich der Auswirkung des User Interface Designs der vorliegenden Smartwatch auf die Benutzung der gleichen aufzustellen. Weiterhin sollen aufbauend darauf, Gestaltlösungen zur Korrektur der erzielten Ergebnisse der Evaluation erstellt werden.\n","tags":null,"title":"Menschzentrierte Entwicklung einer Benutzungsschnittstelle am Beispiel einer android-basierten Smartwatch","uri":"https://www.medieninformatik.th-koeln.de/papers/2015/menschzentrierte-entwicklung-einer-benutzungsschnittstelle-am-beispiel-einer-android-basierten-smartwatch/"},{"categories":null,"content":"Diese Arbeit beschäftigt sich mit den Möglichkeiten und Grenzen der Plattform Google Cast. Der Nutzungskontext der Plattform beschränkt sich weitestgehend auf kleine Benutzergruppen. Dabei wird der Anwendungsfall der Medienwiedergabe fokussiert. Da die Plattform es ermöglicht HTML5-Anwendungen zu entwickeln, eröffnen sich weitere Anwendungsbereiche. Eine tiefergehende Auseinandersetzung mit der Architektur von Google Cast, sowie das Anfertigen einer Beispielimplementierung bestätigt, dass der Nutzungkontext von Google Cast weitreichender gefasst werden kann. Die Medienwiedergabe wird stark von der Plattform fokussiert, jedoch sind diverse weitere Anwendungsfälle denkbar. Der Einsatz von Google Cast sollte dennoch für einzelne Anwendungsfälle abgewägt werden, da beispielsweise eine laufende Anwendung jederzeit durch andere Netzwerkteilnehmer unbeabsichtigt oder mutwillig unterbrochen werden kann.\n","tags":null,"title":"Möglichkeiten und Grenzen von Google Cast","uri":"https://www.medieninformatik.th-koeln.de/papers/2015/moeglichkeiten-und-grenzen-von-google-cast/"},{"categories":null,"content":"Der Titel diese Bachelorarbeitet lautet: \u0026ldquo;Spielerische Verwendung des semantischen Differentials als Werkzeug zur Schaffung eines einheitlichen Zielbildes in der Produktentwicklung\u0026rdquo;. Zunächst wurde in dieser Arbeit die Motivation erklärt und die Zielsetzung aufgestellt. Anschließend wurden die Grundlagen untersucht, die in dem Titel schon angedeutet wurden. Dazu zählt, dass die Methode des semantischen Differentials mit anderen Methoden verglichen wurde, der Arbeitsablauf in der Produktentwicklung betrachtet, das semantische Differential und dessen Vorgehensweise erklärt und die Gamification kurz betrachtet wurden. Nachdem dieser Grundlagenteil abgeschlossen war, wurde mit den gesammelten Informationen ein Konzept erstellt. Anhand des Konzeptes wurde dann ein Rapid Prototype erstellt, welcher in einem nächsten Schritt für eine Evaluation verwendet wurde. Nachdem die Evaluation abgeschlossen war, wurden die dort herausgefundenen Informationen mit in die Ausarbeitung des Entwurfes übernommen. Nachdem Abwägungen durchgeführt und Entscheidungen getroffen wurden, entstand schlussendlich ein Spiel, welches den folgenden Namen trägt: \u0026ldquo;Design Vision - Zur Herstellung von gemeinsamen Zielbildern in der Produktentwicklung unter Verwendung des semantischen Differentials\u0026rdquo;.\n","tags":null,"title":"Spielerische Verwendung des semantischen Differentials als Werkzeug zur Schaffung eines einheitlichen Zielbildes für eine Produktentwicklung","uri":"https://www.medieninformatik.th-koeln.de/papers/2017/spielerische-verwendung-des-semantischen-differentials-als-werkzeug-zur-schaffung-eines-einheitlichen-zielbildes-fuer-eine-produktentwicklung/"},{"categories":null,"content":"In days that we can do almost anything online, it is crucial for web developers to receive information about the users\u0026rsquo; behavior and devices in order to improve the web service. We make use of cookies to identify / recognize a user and store the required information about them. In this thesis, however, I present a modern, sophisticated way to track users without using cookies as it has become very easy to block them. This technique is called browser Fingerprinting. It works by combining many different characteristics that are available to a website into one unique identifier. I describe the state-of-the-art of this technique and show how it works in a comprehensible way. I characterize use case scenarios, give examples and highlight benefits towards other tracking techniques as well as problems that come along when using Fingerprinting. I spotlight that browser Fingerprinting is already used in many websites by conducting a crawl of the top 5 000 international domains and top 5 000 *.de domains. Lastly, I conclude and give assumptions about the future development and privacy considerations.\n","tags":null,"title":"User Tracking via Browser Fingerprinting","uri":"https://www.medieninformatik.th-koeln.de/papers/2017/user-tracking-via-browser-fingerprinting/"},{"categories":null,"content":"Bei der Visualisierung von Informationen geht es vor allem darum Daten oder Zusammenhänge graphisch darzustellen. Für die graphische Darstellung können verschiedene Mittel verwendet werden, wie z.B. Tabellen, Diagramme oder Bilder. Das Kriterium zur Auswahl der Mittel hängt mit dem Kontext der Information und einer oder mehreren Fragen, die es mit der Visualisierung zu beantworten gilt, zusammen [1, p. 18f]. Wenn die Information z.B. unmittelbar mit Zahlen zusammenhängt, eignet sich für die Visualisierung oft ein Diagramm, da hier geometrische Formen verwendet werden können und die Größe der Formen im Bezug zur zählbaren Information steht. Solche Visualisierungen können sogar ganz automatisch durch Verwendung von Computern und Algorithmen realisiert werden. Allerdings können nicht alle Informationen mit Hilfe von Diagrammen visualisiert werden. Ein Beispiel hierfür wäre eine visuelle Darstellung des Inhalts eines Buchs oder eines Texts. In diesem Fall können sogenannte Wortwolken verwendet werden, um Texte oder Wortmengen zu visualisieren. Bei einer Wortwolke werden Wörter nah aneinander positioniert, sodass sich ein Bild ergibt (siehe ). Dabei steht die Schriftgröße eines Wortes in Relation dazu, wie oft das Wort im Text vorkommt. Wortwolken sind vielfältig einsetzbar und sind in verschiedenen Bereichen zu finden, wie z.B. in der Mode als Aufdruck.\nBei der Erstellung von Wortwolken kann auf Bildbearbeitungsprogramme zurückgegriffen werden. Durch manuelles Einfügen und Positionieren von Worten können hierdurch Wortwolken erstellt werden. Da dieser Vorgang allerdings sehr aufwendig sein kann, werden für die Erstellung von Wortwolken auch Anwendungen verwendet, die den Vorgang der Positionierung der Wörter automatisieren und Wortwolken in Form von Bilder generieren können.\nDiese Arbeit dokumentiert die Entwicklung eines Frameworks zur Generierung von Wortwolken im SVG-Format auf Grundlage des Praxisprojekts „Wortwolken, eine Methode zur textuellen Visualisierung, prototypisch realisiert mittels Webstandards“ von Pascal Schorde. Es gilt zu klären was nötig ist, um den Vorgang zur Erstellung von Wortwolken mittels Algorithmen zu automatisieren.\n","tags":null,"title":"Generierung Von Wortwolken Im Svg Format Mittels Webstandards","uri":"https://www.medieninformatik.th-koeln.de/papers/2018/generierung-von-wortwolken-im-svg-format-mittels-webstandards/"},{"categories":null,"content":"Diese Arbeit baut auf dem Praxisprojekt SS17 mit dem Titel Konzeption eines Tages” workshops zur Vermittlung kreativer Probleml¨osekompetenzen anhand von Technik mit Fokus auf Programmierung - an Jugendliche zwischen 10 und 16 Jahren“ auf. Die Arbeit dient der Erlangung des akademischen Grades Bachelor of Science.\nZiel der Arbeit ist eine Auswahl einer visuellen Programmierumgebung f¨ur ArduinoUno-Mikrocontroller f¨ur das Projekt Jugend hackt - Hello World“. Die Program” mierumgebung soll dazu dienen, Kindern und Jugendlichen, die Programmieren lernen m¨ochten, die Programmierung der Arduino-Uno-Mikrocontroller zu erleichtern. Die Arbeit wird auf Basis von Fachliteratur zur Auswahl von Software in Unternehmen in Kombination mit Methoden der menschzentrierten Entwicklung durchgef¨uhrt. Sie beginnt mit der Beschreibung des aktuellen Zustands und der Problemstellung. Darauf folgt eine Durchleuchtung der Dom¨ane und des ben¨otigten fachlichen Grundwissens durch die Analyse des Nutzungskontextes und des technischen Kontextes des ArduinoUnos. Bei der Auswahl von Software wird zun¨achst empfohlen, Anforderungen zu ermitteln und anhand dieser bestehende Software abzugleichen und auszuw¨ahlen. Dazu wird die Methodik zur Anforderungsanalyse des Usability engineering lifecycles“ ange” wandt. Diese gibt vor, zun¨achst Benutzermodelle zu erstellen, um die Charakteristiken verschiedener Benutzer festzuhalten und einbeziehen zu k¨onnen. Dazu werden User Proﬁles erstellt.\nIm n¨achsten Schritt werden die Aufgaben der Benutzer erarbeitet, wozu Use Cases verwendet werden. Die Use Cases werden anschließend in einer Claim Analyse ausgewertet, woraus sich funktionale Anforderungen ableiten lassen. Neben den funktionalen Anforderungen lassen sich anhand der Informationen aus der Kontextanalyse qualitative Anforderungen aufstellen. Diese ergeben sich aus den Grunds¨atzen der Dialoggestaltung der DIN EN ISO Norm 9241, Teil 110 im Kontext zur Zielgruppe. Zudem k¨onnen technische und organisationale Anforderungen aus der Kontextanalyse abgeleitet werden. Sind alle Anforderungen an die Software aufgestellt, werden diese priorisiert und gewichtet. Anschließend wird eine Marktanalyse durchgef¨uhrt. Die dort ermittelte Software wird ohne praktische Tests mit den Anforderungen abgeglichen. Die Softwarel¨osungen, die am ehesten den Anforderungen entsprechen, werden in einer Testimplementierung in Form von Proof of Concepts genauer untersucht und anschließend anhand einer Nutzwertanalyse unter Ber¨ucksichtigung aller Anforderungen bewertet. Daraus erfolgt eine ﬁnale Softwareauswahl, ein Fazit und ein Ausblick.\n","tags":null,"title":"Ermittlung und prototypische Integration einer visuellen Programmierumgebung zur Programmierung von Arduino-Uno-Mikrocontrollern im Projekt Jugend hackt - Hello World","uri":"https://www.medieninformatik.th-koeln.de/papers/2017/ermittlung-und-prototypische-integration-einer-visuellen-programmierumgebung-zur-programmierung-von-arduino-uno-mikrocontrollern-im-projekt-jugend-hackt-hello-world/"},{"categories":null,"content":"Diese Arbeit befasst sich mit der Frage, durch welche Metriken und Visualisierungen die Navigation in der kommunalen Open Data Landschaft Deutschlands verbessert werden kann.Ziel der Arbeit ist es, benutzerorientierte Metriken und Visualisierungen zu ermitteln, um anschließend einen Prototypen zu erschaffen, der als Werkzeug für die Navigation in der kommunalen Open Data Landschaft dient.\nDie Arbeit untersucht im ersten Teil die Domäne und analysiert Konkurrenzprodukte. Ebenso werden die Stakeholder ermittelt und die Erfordernisse der Benutzer festgehalten. Als besonders bedeutend stellen sich dabei die normalen Bürger als Benutzer des Systems heraus, da sie am meisten Hilfestellung bei der Navigation durch die Open Data Landschaft benötigen. Die Konzeption der Metriken basiert auf den Benutzererfordernissen und Richtlinien die von Hauser und Katz (1998) festgelegt wurden. Es werden ebenfalls die Metriken des Open Data Monitors betrachtet und teilweise in das neue Metriksystem übernommen.\nDer Design-Prozess der Visualisierung basiert auf einem Ansatz von Kirk (2012), der sich auch auf die Hintergründe der Daten bezieht. Als beste Visualisierungsform wird ein Symbol-Kartogramm mit einheitlichen Symbolen identiﬁziert. Die Metriken werden über die Sättigung der visuellen Variable dargestellt. Alle anderen Details können erst durch Interaktion aufgerufen werden, um in der Übersicht einen möglichst emotionalen und weniger wissenschaftlichen Stil zu erschaffen. Ein Problem der Visualisierung ist, dass die Datenmarker in der Übersicht zu klein sind, um vernünftig vom Benutzer erkannt zu werden, eine Lösung muss noch gefunden werden.\nEs wird ein Werkzeug konzipiert, dass Benutzer ohne Open Data Erfahrung an die kommunale Open Data Landschaft heranführt und sie in der Navigation in der Open Data Landschaft unterstützt. Gleichzeitig bietet das Ergebnis viele Ausgangspunkte, um die Navigation zu erweitern und zu verbessern.\n","tags":null,"title":"Metriken und Visualisierungen zur Verbesserung der Navigation in der kommunalen Open Data Landschaft Deutschlands","uri":"https://www.medieninformatik.th-koeln.de/papers/2018/metriken-und-visualisierungen-zur-verbesserung-der-navigation-in-der-kommunalen-open-data-landschaft-deutschlands/"},{"categories":null,"content":"  Sourcemap integration  Coding Styleguide  Wie werden CSS Eigenschaften gestackt?  CSS Maps ","tags":null,"title":"Projektseite","uri":"https://www.medieninformatik.th-koeln.de/todos/projektseite/"},{"categories":null,"content":" Inhalte der Website werden den folgenden Kategorien zugeordnet:\n/home Die Startseite bildet den Einflugschneise für alle. Dementsprechend sollten hier wesentliche Ausschnitte aus allen anderen Kategorien gezeigt werden, um einen Überblick zu geben. In einer späteren Ausbaustufe könnte hier auch eine zielgruppenspezifische Ansprache, z.B. in Form eine Natural-language interface integriert werden.\n/mission /people /projects /pulse /research /study /toolbox ","tags":null,"title":"Kategorien","uri":"https://www.medieninformatik.th-koeln.de/website/categories/"},{"categories":null,"content":" Folgende Inhaltstypen werden unterschieden:\nAnnouncement Review Background Paper Tutorial Statement ","tags":null,"title":"Inhaltstypen","uri":"https://www.medieninformatik.th-koeln.de/website/content-types/"},{"categories":null,"content":"","tags":null,"title":"2015","uri":"https://www.medieninformatik.th-koeln.de/papers/2015/"},{"categories":null,"content":"","tags":null,"title":"2015","uri":"https://www.medieninformatik.th-koeln.de/papers/2017/"},{"categories":null,"content":"","tags":null,"title":"2015","uri":"https://www.medieninformatik.th-koeln.de/papers/2018/"},{"categories":null,"content":"Blogg\n","tags":null,"title":"2016","uri":"https://www.medieninformatik.th-koeln.de/papers/2016/"},{"categories":null,"content":"Alle möglichen Arbeiten.\n","tags":null,"title":"Arbeiten","uri":"https://www.medieninformatik.th-koeln.de/papers/"},{"categories":null,"content":"Mit der Gestaltung der Seite sollen folgende Wirkungen erzielt werden:\n die MI ist Teil der Hochschule, aber wir befinden uns hier nicht auf der Hochschulwebsite, sondern auf eigenem Terrain die MI ist technische orientiert die MI hat eine ausgeprägte ästhetische Komponente die MI ist eigenständig, prägnant und strukturiert die MI bietet Platz die MI ist freundlich, offen und zugewandt hier gibt es was zu entdecken  Das Design ist möglichst einfach, klar, reduziert und großzügig. Sie kommt ohne Effekte und mit möglichst wenigen Hilfselementen wie Rahmen oder Schatten aus. Statt dessen wird mit einer prägnenten und selbstbewussten Typographie und viel Weißraum gearbeitet.\n","tags":null,"title":"Gestaltungsziele","uri":"https://www.medieninformatik.th-koeln.de/website/gestaltungsziele/"},{"categories":null,"content":"Der Bachelor Studiengang Medieninformatik ist ein sogenanntes berufsqualifizierendes grundständiges Studium und führt zum ersten Hochschulabschluss. Die Regelstudienzeit des anwendungsorientierten Informatikstudiengangs beträgt 6 Semester. Die Einschreibung ist ausschließlich zum Wintersemester möglich.\nDer Studiengang besteht im Kern aus zwei parallelen Strängen: einem Informatik und einem Medien-Strang. Die verschiedenen Module lassen sich mehr oder weniger gut diesen beiden Strängen zuordnen. Darüber hinaus gibt es eine Reihe von Modulen, die der Querschnittsqualifikation dienen, z.B. die Studierenden bei der Durchführung von Projekten oder im Umgang mit betriebswirtschaftlichen Frage- und Problemstellungen unterstützen.\nDas Studium verfolgt drei grundlegende Ziele:\n Aufbau von Kommunikations- und Methodenkompetenz Vermittlung eines umfassenden Technologieverständnis kennenlernen von Geschäftsprozessen und Kernaktivitäten der Medienwirtschaft  Der zeitliche Ablauf des Studiums teilt sich in drei Abschnitte: Grundlagen, Vertiefung und Spezialisierung. In den ersten beiden Semestern überwiegen die Module aus dem Informatik Strang. Hier werden die mathematischen, theoretischen und technischen Grundlagen mit Lehrveranstaltungen wie Mathematik, Algorithmen und Programmierung, Theoretische Informatik und Einführung in Betriebssysteme und Rechnerarchitekturen vermittelt. Mit fortschreitender Fachsemesterzahl, nehmen die Module aus dem Medienstrang zunehmend Raum ein.\nIm vierten Semester kann im großen Vertiefungsmodul eine von drei Vertiefungsrichtungen gewählt werden. Zur Auswahl stehen: Visual Computing, Social Computing und Web-Development. Im Vertiefungsmodul ist ein Projektanteil von etwa fünf Creditpoints vorgesehen. Das Entwicklungsprojekt im fünften Semester kann entsprechend der fachlichen Neigung der jeweiligen Studierenden ausgestaltet werden.\nDas vierte Semester eignet sich aus verschiedenen Gründen gut für ein Auslandssemester. Die Studierenden verfügen über ausreichende Qualifikationen und Projekterfahrungen, um in verschiedenen Kontexten handlungsfähig zu sein. Sie stehen aber noch vor dem Spezialisierungsteil des Studiums und verfügen damit idealerweise über die fachliche, mentale und organisatorische Offenheit für ein Austauschsemester. Wegen der wenigen Module im vierten Semester und vor allem wegen des großen Vertiefungsmoduls können im Ausland erworbene Qualifikationen sehr flexibel anerkannt werden. Die Anerkennung erfolgt auf Basis des “Übereinkommen über die Anerkennung von Qualifikationen im Hochschulbereich in der europäischen Region”.\nDen Abschluss des Studiums bildet die Bachelorarbeit. In dieser bearbeiten die Studierenden selbstständig eine praxisorientierte Aufgabe aus einem gewünschten Fachgebiet. Diese können sie in Kooperation mit einem Unternehmen schreiben und somit Kontakte zur Wirtschaft und damit potentiellen Arbeitgebern knüpfen.\n","tags":null,"title":"Medieninformatik Bachelor","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/"},{"categories":null,"content":"Der Master Studiengang ist postgradual, d.h. zur Zulassung ist ein erfolgreich abgeschlossener grundständiger Studiengang erforderlich, z.B. der Medieninformatik Bachelor. Der Medieninformatik Master ist auf vier Fachsemester ausgelegt und schließt mit dem Master of Science ab. Klingt gut, oder?\nDer Masterstudiengang Medieninformatik ist inhaltlich durch seine Studienschwerpunkte Human Computer Interaction, Multi-Perspective Product Development, Social Computing, Visual Computing und Weaving the Web charakterisiert.\n","tags":null,"title":"Medieninformatik Master","uri":"https://www.medieninformatik.th-koeln.de/study/master/"},{"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n","tags":null,"title":"Was geht?","uri":"https://www.medieninformatik.th-koeln.de/pulse/"},{"categories":null,"content":"Strukturell besteht die Site aus Artikeln, die jeweils einer Kategorie zugeordnet sind. Die Kategorien bestehen möglichst aus einem Wort und sind das erste Segment der URL. Über die jeweilige Kategorien-URL wird die Übersichtsseite der Kategorie aufgerufen, z.B.:\n medieninformatik.th-koeln.de/study\n Ein weiteres Stukturierungselement bilden Tags. Einem Artikel können beliebig viele Tags zugeordnet werden. Jeder Tag bildet über eine eigene URL einen Einstiegspunkt in die Artikel zu diesem Tag, z.B.:\n medieninformatik.th-koeln.de/jobs\n ","tags":null,"title":"Struktur","uri":"https://www.medieninformatik.th-koeln.de/website/structure/"},{"categories":null,"content":"Am Campus Gummersbach bieten wir zwei aufeinander aufbauende Studiengänge an: den Medieninformatik Bachelor und den Medieninformatik Master.\n  .Resize \"300x\"    ","tags":null,"title":"Hier kann man studieren!","uri":"https://www.medieninformatik.th-koeln.de/study/"},{"categories":null,"content":"Die Medieninformatik Website ist der Schweizer Taschenmesser für die Kommunikation nach außen und innen. Sie richtet sich an alle Zielgruppen und stellt Informationen und Einblicke in das Forschungs- und Lehrgebiet Medieninformatik für die verschiedenen Zielgruppen bereit. Hier landet im Grunde alles, was in den anderen Kanälen nicht passt, oder was für längere Zeit vorgehalten werden soll.\n","tags":null,"title":"Website","uri":"https://www.medieninformatik.th-koeln.de/website/"},{"categories":null,"content":"","tags":null,"title":"Alexander Miske","uri":"https://www.medieninformatik.th-koeln.de/autoren/alexander-miske/"},{"categories":null,"content":"","tags":null,"title":"Alexander Urbschat B. Eng.","uri":"https://www.medieninformatik.th-koeln.de/betreuer/alexander-urbschat-b.-eng./"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 240h, davon\n 54h Vorlesung 36h Praktikum 18h Übung 132h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen\n formale und algorithmische Kompetenzen im Bereich der Software-Entwicklung erlangen. Hierzu gehören insbesondere die Prinzipien der Objektorientierung und die der prozeduralen Programmierung. die Kompetenz erlangen, strukturierte und unstrukturierte Problemstellungen zu analysieren, Lösungen modellbasiert zu entwickeln sowie prozedural und objektorientiert umzusetzen. Systementwürfe evaluieren und bewerten können, insbesondere sollen sie die Arbeitsweise, die Randbedingungen und den Komplexitätsgrad von einfachen Algorithmen verstehen. die Fähigkeit erlernen, algorithmische Entwurfsmuster zu erkennen und anzuwenden  Inhalt  Prozedurale Programmierung am Beispiel von C. Objektorientierte Programmierung am Beispiel von Java. Kontroll- und Datenstrukturen. Modularisierungskonzepte. Typkonzepte. Grundmuster der objektorientierten Programmierung. Elementare Algorithmen und Aufwandsschätzung. Entwicklungsumgebungen.  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Praktikum an Rechnern des Labors  Literatur  Vorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen, Übungsklausuren mit Lösungen Fachliteratur: Diverse C-Bücher, u.a.: Kernighan, B.W., Ritchie, D.M.: „Programmieren in C“ Diverse Java-Bücher, u.a.: Bishop, J.: „Java Lernen“ Sedgewick, R.: „Algorithmen in Java“  ","tags":null,"title":"Algorithmen und Programmierung 1","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_algorithmenundprogrammierung1/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 240h, davon\n 54h Vorlesung 36h Praktikum 18h Übung 132h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen\n formale und algorithmische Kompetenzen im Bereich der Software-Entwicklung erlangen. Hierzu gehören insbesondere die Prinzipien der Objektorientierung und die der prozeduralen Programmierung. die Kompetenz erlangen, strukturierte und unstrukturierte Problemstellungen zu analysieren, Lösungen modellbasiert zu entwickeln sowie prozedural und objektorientiert umzusetzen. Systementwürfe evaluieren und bewerten können, insbesondere sollen sie die Arbeitsweise, die Randbedingungen und den Komplexitätsgrad von einfachen Algorithmen verstehen. die Fähigkeit erlernen, algorithmische Entwurfsmuster zu erkennen und anzuwenden  Inhalt  Prozedurale Programmierung am Beispiel von C. Objektorientierte Programmierung am Beispiel von Java. Kontroll- und Datenstrukturen. Modularisierungskonzepte. Typkonzepte. Grundmuster der objektorientierten Programmierung. Elementare Algorithmen und Aufwandsschätzung. Entwicklungsumgebungen.  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Praktikum an Rechnern des Labors  Literatur  Vorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen, Übungsklausuren mit Lösungen Fachliteratur: Diverse C-Bücher, u.a.: Kernighan, B.W., Ritchie, D.M.: „Programmieren in C“ Diverse Java-Bücher, u.a.: Bishop, J.: „Java Lernen“ Sedgewick, R.: „Algorithmen in Java“  ","tags":null,"title":"Algorithmen und Programmierung 1","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_algorithmenundprogrammierung1/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 210h, davon\n 54h Vorlesung 36h Praktikum 18h Übung 102h Selbststudium  Angestrebte Lernergebnisse Die Studierende sollen Objektorientierung, die Prinzipien der Algorithmenentwicklung und grundlegende Algorithmen verstehen und die Grundstrukturen der Java-Bibliothek anwenden können.\nInhalt  Basisalgorithmen: Suchen u. Sortieren Datenstrukturen Dictionaries Methodik des objektorientierten Programmierens  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Praktikum an Rechnern des Labors  Literatur  Vorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen Fachliteratur: Bishop, J.: „Java Lernen“ Sedgewick, R.: „Algorithmen in Java“ Barnes, J., Kölling, M.: „Java Lernen mit BlueJ“, Verweise auf Onlinedokumente  ","tags":null,"title":"Algorithmen und Programmierung 2","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_algorithmenundprogrammierung2/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 210h, davon\n 54h Vorlesung 36h Praktikum 18h Übung 102h Selbststudium  Angestrebte Lernergebnisse Die Studierende sollen Objektorientierung, die Prinzipien der Algorithmenentwicklung und grundlegende Algorithmen verstehen und die Grundstrukturen der Java-Bibliothek anwenden können.\nInhalt  Basisalgorithmen: Suchen u. Sortieren Datenstrukturen Dictionaries Methodik des objektorientierten Programmierens  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Praktikum an Rechnern des Labors  Literatur  Vorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen Fachliteratur: Bishop, J.: „Java Lernen“ Sedgewick, R.: „Algorithmen in Java“ Barnes, J., Kölling, M.: „Java Lernen mit BlueJ“, Verweise auf Onlinedokumente  ","tags":null,"title":"Algorithmen und Programmierung 2","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_algorithmenundprogrammierung2/"},{"categories":null,"content":"","tags":null,"title":"Anja Sivakumar","uri":"https://www.medieninformatik.th-koeln.de/autoren/anja-sivakumar/"},{"categories":null,"content":" Kurzbeschreibung Im Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion in den Formaten Porträt- und Dokumentarfilm.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Projekt 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Projektarbeit - 78h Selbststudium\nAngestrebte Lernergebnisse  Die Studierenden kennen die grundlegenden Erzählformen und Formate audiovisueller Medien und können auf der Basis klassischer Erzählmuster eigene audiovisuelle Erzählformen entwickeln.\n Die Studierenden können die in der audiovisuellen Produktion auftretende Problemstellungen selbstständig lösen und die verwendeten Medientechnologien, wie Videokamera, Tonaufnahmegeräte und Schnittsysteme technisch richtig und gestalterisch aussagekräftig einzusetzen.\n Sie sind befähigt zur Analyse, Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\n Die Studierenden können in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content beraten, planen, selbst durchführen und verantworten.\n  Inhalt Im Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion.\nDie praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team und die Präsentation von eigenen Ideen und Projekten sind die Lerninhalte des Moduls „Audiovisuelles Medienprojekt“. Neben der Fachkompetenz und Methodenkompetenz stehen in diesem Modul gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus.\nDie Projektarbeit gliedert sich dabei in die selbstständige Entwicklung, Ausarbeitung und Präsentation eines Filmthemas, in die praktische Umsetzung in einem Filmprojekt und in die Nachbearbeitung und Montage in einer dramaturgischen Erzählform.\nBegleitend zu der Produktion werden folgende fachspezifischen Inhalte thematisiert und in Übungsaufgaben vertieft:\n Video- und Audioaufnahmetechnik Filmsprache Lichtsetzung Tonaufnahme Dokumentarfilm und Interview Dramaturgie Schnitt und Montage  Studien-/Prüfungsleistungen Projektarbeit\nMedienformen  Beamer-gestützte Vorlesungen Beispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos Audiovisuelle Aufnahme- und Wiedergabegeräte  Literatur  James Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717 Syd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X Steven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1 David Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9 Hans Kornacher \u0026amp; Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2 Hans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6 Karel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1 Chris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins  ","tags":null,"title":"Audiovisuelles Medienprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_avm/"},{"categories":null,"content":" Kurzbeschreibung Im Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion in den Formaten Porträt- und Dokumentarfilm.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Projekt 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Projektarbeit - 78h Selbststudium\nAngestrebte Lernergebnisse  Die Studierenden kennen die grundlegenden Erzählformen und Formate audiovisueller Medien und können auf der Basis klassischer Erzählmuster eigene audiovisuelle Erzählformen entwickeln.\n Die Studierenden können die in der audiovisuellen Produktion auftretende Problemstellungen selbstständig lösen und die verwendeten Medientechnologien, wie Videokamera, Tonaufnahmegeräte und Schnittsysteme technisch richtig und gestalterisch aussagekräftig einzusetzen.\n Sie sind befähigt zur Analyse, Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\n Die Studierenden können in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content beraten, planen, selbst durchführen und verantworten.\n  Inhalt Im Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion.\nDie praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team und die Präsentation von eigenen Ideen und Projekten sind die Lerninhalte des Moduls „Audiovisuelles Medienprojekt“. Neben der Fachkompetenz und Methodenkompetenz stehen in diesem Modul gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus.\nDie Projektarbeit gliedert sich dabei in die selbstständige Entwicklung, Ausarbeitung und Präsentation eines Filmthemas, in die praktische Umsetzung in einem Filmprojekt und in die Nachbearbeitung und Montage in einer dramaturgischen Erzählform.\nBegleitend zu der Produktion werden folgende fachspezifischen Inhalte thematisiert und in Übungsaufgaben vertieft:\n Video- und Audioaufnahmetechnik Filmsprache Lichtsetzung Tonaufnahme Dokumentarfilm und Interview Dramaturgie Schnitt und Montage  Studien-/Prüfungsleistungen Projektarbeit\nMedienformen  Beamer-gestützte Vorlesungen Beispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos Audiovisuelle Aufnahme- und Wiedergabegeräte  Literatur  James Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717 Syd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X Steven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1 David Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9 Hans Kornacher \u0026amp; Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2 Hans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6 Karel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1 Chris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins  ","tags":null,"title":"Audiovisuelles Medienprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_avm/"},{"categories":null,"content":"","tags":null,"title":"Autoren","uri":"https://www.medieninformatik.th-koeln.de/autoren/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 30h Vorlesung 30h Übung 90h Selbststudium  Angestrebte Lernergebnisse Die Studierenden verstehen die wichtigsten Entscheidungsbereiche wirtschaftlichen Handeln und können diese anwenden. Sie können grundlegenden Entscheidungen im Rahmen einer Unternehmensgründung, die Aufgaben der Unternehmensführung wie die Konzeption einer tragfähigen Strategie, und die Aufgaben der Teilbereiche Produktion, Absatz und Marketing sowie Investition und Finanzierung beschreiben und beurteilen. Investitionsentscheidungen können die Studierenden informationsgestützt treffen indem sie die Kalkulationsverfahren der Investitionsrechnung anwenden und auswerten. Die Veranstaltung bereitet die Studierenden für weitere BWL-Veranstaltungen ihres Studiums, sowie darauf, in ihrem Berufsleben wirtschaftliche Konzepte im Unternehmenskontext anzuwenden, vor.\nInhalt  Grundlagen Unternehmensführung 1: Ziele, Planung und Entscheidung Investition und Finanzierung Unternehmensführung 2: Ausführung und Kontrolle Konstitutive Entscheidungen Produktion Absatz und Marketing  Studien-/Prüfungsleistungen schriftliche Prüfung\nLiteratur  Wöhe (2016): Einführung in die Allgemeine Betriebswirtschaftslehre, 26. Aufl.  ","tags":null,"title":"BWL I - Grundlagen","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_bwl1/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 30h Vorlesung 30h Übung 90h Selbststudium  Angestrebte Lernergebnisse Die Studierenden verstehen die wichtigsten Entscheidungsbereiche wirtschaftlichen Handeln und können diese anwenden. Sie können grundlegenden Entscheidungen im Rahmen einer Unternehmensgründung, die Aufgaben der Unternehmensführung wie die Konzeption einer tragfähigen Strategie, und die Aufgaben der Teilbereiche Produktion, Absatz und Marketing sowie Investition und Finanzierung beschreiben und beurteilen. Investitionsentscheidungen können die Studierenden informationsgestützt treffen indem sie die Kalkulationsverfahren der Investitionsrechnung anwenden und auswerten. Die Veranstaltung bereitet die Studierenden für weitere BWL-Veranstaltungen ihres Studiums, sowie darauf, in ihrem Berufsleben wirtschaftliche Konzepte im Unternehmenskontext anzuwenden, vor.\nInhalt  Grundlagen Unternehmensführung 1: Ziele, Planung und Entscheidung Investition und Finanzierung Unternehmensführung 2: Ausführung und Kontrolle Konstitutive Entscheidungen Produktion Absatz und Marketing  Studien-/Prüfungsleistungen schriftliche Prüfung\nLiteratur  Wöhe (2016): Einführung in die Allgemeine Betriebswirtschaftslehre, 26. Aufl.  ","tags":null,"title":"BWL I - Grundlagen","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_bwl1/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 90 Stunden\nAngestrebte Lernergebnisse Das Kolloquium dient der Feststellung, ob der Prüfling befähigt ist, die Ergebnisse der Bachelorarbeit, ihre fachlichen Grundlagen, ihre fachübergreifenden Zusammenhänge und ihre außerfachlichen Bezüge mündlich darzustellen und selbständig zu begründen und ihre Bedeutung für die Praxis einzuschätzen. Dabei soll auch die Bearbeitung des Themas der Bachelorarbeit mit dem Prüfling erörtert werden.\nInhalt Vortrag über das Thema der Bachelorarbeit, Fachdiskussion und mündliche Verteidigung der Arbeit im Kontext der Medieninformatik.\nStudien-/Prüfungsleistungen mündliche Prüfung, Vortrag\n","tags":null,"title":"Bachelor Kolloquium","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_bachelorkolloquium/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 90 Stunden\nAngestrebte Lernergebnisse Das Kolloquium dient der Feststellung, ob der Prüfling befähigt ist, die Ergebnisse der Bachelorarbeit, ihre fachlichen Grundlagen, ihre fachübergreifenden Zusammenhänge und ihre außerfachlichen Bezüge mündlich darzustellen und selbständig zu begründen und ihre Bedeutung für die Praxis einzuschätzen. Dabei soll auch die Bearbeitung des Themas der Bachelorarbeit mit dem Prüfling erörtert werden.\nInhalt Vortrag über das Thema der Bachelorarbeit, Fachdiskussion und mündliche Verteidigung der Arbeit im Kontext der Medieninformatik.\nStudien-/Prüfungsleistungen mündliche Prüfung, Vortrag\n","tags":null,"title":"Bachelor Kolloquium","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_bachelorkolloquium/"},{"categories":null,"content":"","tags":null,"title":"Bachelorarbeit","uri":"https://www.medieninformatik.th-koeln.de/module/bachelorarbeit/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 360 Stunden\nAngestrebte Lernergebnisse Die Bachelorarbeit soll zeigen, dass der Prüfling befähigt ist, innerhalb einer vorgegebenen Frist eine praxisorientierte Aufgabe aus seinem Fachgebiet sowohl in ihren fachlichen Einzelheiten als auch in den fachübergreifenden Zusammenhängen nach wissenschaftlichen, fachpraktischen und gestalterischen Methoden selbständig zu bearbeiten. Die Bachelorarbeit ist in der Regel eine eigenständige Untersuchung mit einer Aufgabenstellung aus der Medieninformatik und einer ausführlichen Beschreibung und Erläuterung ihrer Lösung. In fachlich geeigneten Fällen kann sie auch eine schriftliche Hausarbeit mit fachliterarischem Inhalt sein.\nInhalt Selbstständiges wissenschaftliches, fachpraktisches und gestalterisches Bearbeiten einer Aufgabenstellung.\nStudien-/Prüfungsleistungen Schriftliche Ausarbeitung, ggf. Projektarbeit mit entsprechenden Artefakten.\n","tags":null,"title":"Bachelorarbeit","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_bachelorarbeit/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 360 Stunden\nAngestrebte Lernergebnisse Die Bachelorarbeit soll zeigen, dass der Prüfling befähigt ist, innerhalb einer vorgegebenen Frist eine praxisorientierte Aufgabe aus seinem Fachgebiet sowohl in ihren fachlichen Einzelheiten als auch in den fachübergreifenden Zusammenhängen nach wissenschaftlichen, fachpraktischen und gestalterischen Methoden selbständig zu bearbeiten. Die Bachelorarbeit ist in der Regel eine eigenständige Untersuchung mit einer Aufgabenstellung aus der Medieninformatik und einer ausführlichen Beschreibung und Erläuterung ihrer Lösung. In fachlich geeigneten Fällen kann sie auch eine schriftliche Hausarbeit mit fachliterarischem Inhalt sein.\nInhalt Selbstständiges wissenschaftliches, fachpraktisches und gestalterisches Bearbeiten einer Aufgabenstellung.\nStudien-/Prüfungsleistungen Schriftliche Ausarbeitung, ggf. Projektarbeit mit entsprechenden Artefakten.\n","tags":null,"title":"Bachelorarbeit","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_bachelorarbeit/"},{"categories":null,"content":"","tags":null,"title":"Betreuer","uri":"https://www.medieninformatik.th-koeln.de/betreuer/"},{"categories":null,"content":" Kurzbeschreibung Systemprogrammierung am Beispiel von UNIX.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden können den Aufbau von Betriebssystemen am Beispiel UNIX erläutern, indem sie - die Ziele der Entwicklung von UNIX nennen und beschreiben, - die Hauptaufgaben von Betriebssystemen nennen und beschreiben, - den Aufbau von Betriebssystemen darstellen und erklären,\num die verschiedenen Bestandteile und Konzepte von Betriebssystemen nutzen zu können.\nDie Studierenden können eigene C-Programme für verteilte Systeme erstellen, indem sie - einen Computer über die Shell bedienen und dort eigene Programme ausführbar machen, - Daten mittels Systemschnittstellen in Dateien speichern, daraus lesen und diese verwalten, - Sockets für Client- und Serverprogramme nutzen und Daten darüber senden und empfangen, - Prozesse für nebenläufige Programmabläufe erzeugen, - Kommunikation zwischen Prozessen mit Shared Memory, Pipes und Message Queues realisieren, - Race Conditions erkennen, kritische Abschnitte festlegen und Prozesse synchronisieren, - die Lösungen klassischer Synchronisationsprobleme kennen und nutzen,\num später hardware- oder systemnahe Software für verteilte Systeme zu entwickeln oder zu bewerten, bspw. im Bereich »Internet of Things«\nDie Studierenden können theoretische Grundlagen von Betriebssystemen erörtern, indem sie - Programme und Prozesse unterscheiden und letztere mit ihren Zuständen modellieren, - verschiedene Strategien für das Scheduling von Prozessen anwenden und bewerten, - die Organisation des Speichers auf einem Datenträger erklären und darstellen, - die Abbildung von Prozessen im Arbeitsspeicher erklären und verschiedene Ansätze zur Verwaltung erläutern,\num später Auswirkungen von Betriebssystemvorgängen auf eigene Programme zu erkennen und darauf zu reagieren.\nInhalt Systemprogrammierung am Beispiel von UNIX: - Shell-Programmierung - Prozess-Modelle - Prozess-Erzeugung und Synchronisation - UNIX-Prozesse und elementare Synchronisation - Pipes - Shared Memory - Synchronisationsprimitive für den wechselseitigen Ausschluss - Semaphoren - Nachrichtenwarteschlangen - Dateisysteme - TCP/IP - Sockets - Remote Procedure Call - Strategien zum Scheduling und zur Speicherverwaltung - Klassische Synchronisationsprobleme\nStudien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen Foliensammlung, ausformuliertes Skript, Beispiellösungen\nLiteratur  Tanenbaum, A. S.: „Moderne Betriebssysteme“ Brown, C.: „Programmieren verteilter UNIX-Anwendungen“ Kernighan, B. W., Pike, R.: „Der UNIX-Werkzeugkasten“ Ehses, E., Köhler, L., Stenzel, H., Victor, F. „Betriebssysteme: Ein Lehrbuch mit Übungen zur Systemprogrammierung in UNIX/Linux“  ","tags":null,"title":"Betriebssysteme und verteilte Systeme","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_betriebssysteme-und-verteile-systeme/"},{"categories":null,"content":" Kurzbeschreibung Systemprogrammierung am Beispiel von UNIX.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden können den Aufbau von Betriebssystemen am Beispiel UNIX erläutern, indem sie - die Ziele der Entwicklung von UNIX nennen und beschreiben, - die Hauptaufgaben von Betriebssystemen nennen und beschreiben, - den Aufbau von Betriebssystemen darstellen und erklären,\num die verschiedenen Bestandteile und Konzepte von Betriebssystemen nutzen zu können.\nDie Studierenden können eigene C-Programme für verteilte Systeme erstellen, indem sie - einen Computer über die Shell bedienen und dort eigene Programme ausführbar machen, - Daten mittels Systemschnittstellen in Dateien speichern, daraus lesen und diese verwalten, - Sockets für Client- und Serverprogramme nutzen und Daten darüber senden und empfangen, - Prozesse für nebenläufige Programmabläufe erzeugen, - Kommunikation zwischen Prozessen mit Shared Memory, Pipes und Message Queues realisieren, - Race Conditions erkennen, kritische Abschnitte festlegen und Prozesse synchronisieren, - die Lösungen klassischer Synchronisationsprobleme kennen und nutzen,\num später hardware- oder systemnahe Software für verteilte Systeme zu entwickeln oder zu bewerten, bspw. im Bereich »Internet of Things«\nDie Studierenden können theoretische Grundlagen von Betriebssystemen erörtern, indem sie - Programme und Prozesse unterscheiden und letztere mit ihren Zuständen modellieren, - verschiedene Strategien für das Scheduling von Prozessen anwenden und bewerten, - die Organisation des Speichers auf einem Datenträger erklären und darstellen, - die Abbildung von Prozessen im Arbeitsspeicher erklären und verschiedene Ansätze zur Verwaltung erläutern,\num später Auswirkungen von Betriebssystemvorgängen auf eigene Programme zu erkennen und darauf zu reagieren.\nInhalt Systemprogrammierung am Beispiel von UNIX: - Shell-Programmierung - Prozess-Modelle - Prozess-Erzeugung und Synchronisation - UNIX-Prozesse und elementare Synchronisation - Pipes - Shared Memory - Synchronisationsprimitive für den wechselseitigen Ausschluss - Semaphoren - Nachrichtenwarteschlangen - Dateisysteme - TCP/IP - Sockets - Remote Procedure Call - Strategien zum Scheduling und zur Speicherverwaltung - Klassische Synchronisationsprobleme\nStudien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen Foliensammlung, ausformuliertes Skript, Beispiellösungen\nLiteratur  Tanenbaum, A. S.: „Moderne Betriebssysteme“ Brown, C.: „Programmieren verteilter UNIX-Anwendungen“ Kernighan, B. W., Pike, R.: „Der UNIX-Werkzeugkasten“ Ehses, E., Köhler, L., Stenzel, H., Victor, F. „Betriebssysteme: Ein Lehrbuch mit Übungen zur Systemprogrammierung in UNIX/Linux“  ","tags":null,"title":"Betriebssysteme und verteilte Systeme","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_betriebssysteme-und-verteile-systeme/"},{"categories":null,"content":"","tags":null,"title":"Categories","uri":"https://www.medieninformatik.th-koeln.de/categories/"},{"categories":null,"content":"","tags":null,"title":"Christian Alexander Poplawski","uri":"https://www.medieninformatik.th-koeln.de/autoren/christian-alexander-poplawski/"},{"categories":null,"content":"","tags":null,"title":"Daniel Röger","uri":"https://www.medieninformatik.th-koeln.de/autoren/daniel-r%C3%B6ger/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 1 SWS; Praktikum 1 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Praktikum 18h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen\n über ein einheitliches konsistentes Begriffsgebäude bezüglich der Datenbankthematik verfügen, die theoretischen Grundlagen von Datenbanksystemen am Beispiel relationaler und objektrelationaler Datenbanksysteme verstanden haben, insbesondere die relationale Algebra, die Normalisierung sowie funktionale Abhängigkeiten in der Lage sein, diese Erkenntnisse im Rahmen der Modellierung und Implementierung von Datenbankschemata praktisch anzuwenden, komplexere Datenbankanfragen, Datendefinitionen und Datenänderungen über SQL programmieren können ein SQL-Statement tunen können mit dem Transaktionsbegriff, der Mehrbenutzersynchronisation und Verfahren zur Fehlererholung sowie zur Sicherung der Datenintegrität vertraut sein  Inhalt  Grundbegriffe und Architektur von Datenbanken\n Ein Vorgehensmodell zur Erstellung eines Datenbanksystems Grundlagen des relationalen Modells Relationale Algebra Anfrageoptimierung Funktionale Abhängigkeiten Datenintegrität Normalisierung Datenmodellierung (Entity Relationship Modell) und Implementierung am Beispiel eines relationalen Datenbanksystems Datenbanksprache SQL: DDL, DML, DAL, Integritätsbedingungen und Constraints unter dem jeweils aktuellen SQL-Standard, zur Zeit SQL2013 Transaktionskonzepte, Mehrbenutzersynchronisation, Fehlererholung und Datensicherheit  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung. Semesterbegleitende Multiple‐Choice‐Tests mit Punkten für die Klausur.\nMedienformen  Folien gestützer Vortrag - aber nur sehr selten\n I.d.R. erarbeiten der Theorie anhand von überschaubaren Problemstellungen und deren in der Veranstaltung entwickelten Lösungen - hauptsächliches Vorgehen\n Fragen der Studierenden beantworten - sehr erwünscht!\n Ilias zur Bereitstellung aller Informationen (Aktuelles, Links, Folien, Praktikums-/Übungsaufgaben, wie auch Lösungen)\n edb, die DB-eLearning-Plattform der TH Köln\n DB-Wiki, das Online Lexikon für Datenbank-Themen  Literatur  Elmasri, R.; Navathe, S. B.: Grundlagen von Datenbanksystemen. Pearson‐Studium. 2009 Faeskorn‐Woyke, H.; Bertelsmeier, B.; Riemer, P.; Bauer, E.: Datenbanksysteme ‐ Theorie und Praxis mit SQL2003, Oracle und MySQL. Pearson‐Studium. 2. Aufl. 2011 Kemper, A.; Eickler, A.: Datenbanksysteme – Eine Einführung. Oldenbourg‐Verlag, 2015 Saake, G., Sattler, K.‐U.; Heuer, A.: Datenbanken ‐ Konzepte und Sprachen. Mitp/bhv, 2013 Vossen, G.: Datenmodelle, Datenbanksprachen, Datenbankmanagementsysteme. Oldenbourg‐Verlag, 2008  ","tags":null,"title":"Datenbanken 1","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_datenbanken1/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 1 SWS; Praktikum 1 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Praktikum 18h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen\n über ein einheitliches konsistentes Begriffsgebäude bezüglich der Datenbankthematik verfügen, die theoretischen Grundlagen von Datenbanksystemen am Beispiel relationaler und objektrelationaler Datenbanksysteme verstanden haben, insbesondere die relationale Algebra, die Normalisierung sowie funktionale Abhängigkeiten in der Lage sein, diese Erkenntnisse im Rahmen der Modellierung und Implementierung von Datenbankschemata praktisch anzuwenden, komplexere Datenbankanfragen, Datendefinitionen und Datenänderungen über SQL programmieren können ein SQL-Statement tunen können mit dem Transaktionsbegriff, der Mehrbenutzersynchronisation und Verfahren zur Fehlererholung sowie zur Sicherung der Datenintegrität vertraut sein  Inhalt  Grundbegriffe und Architektur von Datenbanken\n Ein Vorgehensmodell zur Erstellung eines Datenbanksystems Grundlagen des relationalen Modells Relationale Algebra Anfrageoptimierung Funktionale Abhängigkeiten Datenintegrität Normalisierung Datenmodellierung (Entity Relationship Modell) und Implementierung am Beispiel eines relationalen Datenbanksystems Datenbanksprache SQL: DDL, DML, DAL, Integritätsbedingungen und Constraints unter dem jeweils aktuellen SQL-Standard, zur Zeit SQL2013 Transaktionskonzepte, Mehrbenutzersynchronisation, Fehlererholung und Datensicherheit  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung. Semesterbegleitende Multiple‐Choice‐Tests mit Punkten für die Klausur.\nMedienformen  Folien gestützer Vortrag - aber nur sehr selten\n I.d.R. erarbeiten der Theorie anhand von überschaubaren Problemstellungen und deren in der Veranstaltung entwickelten Lösungen - hauptsächliches Vorgehen\n Fragen der Studierenden beantworten - sehr erwünscht!\n Ilias zur Bereitstellung aller Informationen (Aktuelles, Links, Folien, Praktikums-/Übungsaufgaben, wie auch Lösungen)\n edb, die DB-eLearning-Plattform der TH Köln\n DB-Wiki, das Online Lexikon für Datenbank-Themen  Literatur  Elmasri, R.; Navathe, S. B.: Grundlagen von Datenbanksystemen. Pearson‐Studium. 2009 Faeskorn‐Woyke, H.; Bertelsmeier, B.; Riemer, P.; Bauer, E.: Datenbanksysteme ‐ Theorie und Praxis mit SQL2003, Oracle und MySQL. Pearson‐Studium. 2. Aufl. 2011 Kemper, A.; Eickler, A.: Datenbanksysteme – Eine Einführung. Oldenbourg‐Verlag, 2015 Saake, G., Sattler, K.‐U.; Heuer, A.: Datenbanken ‐ Konzepte und Sprachen. Mitp/bhv, 2013 Vossen, G.: Datenmodelle, Datenbanksprachen, Datenbankmanagementsysteme. Oldenbourg‐Verlag, 2008  ","tags":null,"title":"Datenbanken 1","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_datenbanken1/"},{"categories":null,"content":"","tags":null,"title":"David F. Petersen","uri":"https://www.medieninformatik.th-koeln.de/autoren/david-f.-petersen/"},{"categories":null,"content":"","tags":null,"title":"Dipl. Des. Liane Kirschner","uri":"https://www.medieninformatik.th-koeln.de/betreuer/dipl.-des.-liane-kirschner/"},{"categories":null,"content":"","tags":null,"title":"Dr. Eduard Maibach","uri":"https://www.medieninformatik.th-koeln.de/betreuer/dr.-eduard-maibach/"},{"categories":null,"content":"","tags":null,"title":"Eduard König","uri":"https://www.medieninformatik.th-koeln.de/autoren/eduard-k%C3%B6nig/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Basiskonzepte und Grundlagen der Betriebssysteme und der Rechnerarchitektur kennen und verstehen, sowie ein einheitliches konsistentes Begriffsgebäude zu, teilweise aus der persönlichen Praxis bekannten, Sachverhalten der IT aufbauen und anwenden können.\nInhalt  Betriebssysteme aus Nutzersicht: Dateisysteme, Parallele Prozesse, Sicherheit in Betriebssystemen bei Rechnerkomponenten: grundlegende Architekturen, Darstellung von Daten, interne Bussysteme, Prozessoren, Festplatten, Peripherieschnittstellen, Parallelrechner  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Vorlesungsunterlagen: kommentierte Foliensammlung Tanenbaum: „Rechnerarchitektur“ Tanenbaum: „Modern Operating Systems“  ","tags":null,"title":"Einführung in Betriebssysteme und Rechnerarchitektur","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_einfhrunginbetriebssystemeundrechnerarchitektur/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Basiskonzepte und Grundlagen der Betriebssysteme und der Rechnerarchitektur kennen und verstehen, sowie ein einheitliches konsistentes Begriffsgebäude zu, teilweise aus der persönlichen Praxis bekannten, Sachverhalten der IT aufbauen und anwenden können.\nInhalt  Betriebssysteme aus Nutzersicht: Dateisysteme, Parallele Prozesse, Sicherheit in Betriebssystemen bei Rechnerkomponenten: grundlegende Architekturen, Darstellung von Daten, interne Bussysteme, Prozessoren, Festplatten, Peripherieschnittstellen, Parallelrechner  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Vorlesungsunterlagen: kommentierte Foliensammlung Tanenbaum: „Rechnerarchitektur“ Tanenbaum: „Modern Operating Systems“  ","tags":null,"title":"Einführung in Betriebssysteme und Rechnerarchitektur","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_einfhrunginbetriebssystemeundrechnerarchitektur/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Seminar 3 SWS; Übung 1 SWS\nSeminar mit eingebetteten Übungselementen und Projektarbeit.\nArbeitsaufwand Gesamtaufwand 150h, davon\n 30h Seminar 10h Übung 40h Projekt 70h Selbststudium  Angestrebte Lernergebnisse Die Studierenden können die inhaltlichen Ausrichtungen und die Zielsetzungen der Lehr- und Anwendungsdisziplin Medieninformatik benennen und gegenüber verwandten oder ähnlichen Disziplinen abgrenzen.\nDie Studierenden kennen Grundkonzepte der Informatik (z.B. Anforderungen) sowie audiovisueller und interaktiver Medientechnologien, kennen architekturelle Alternativen interaktiver Systeme und kennen Gestaltungsdimensionen für deren Informations- und Kommunikationsinhalte und können diese Kenntnisse auf eine gegebene Problemstellung anwenden.\nDie Studierenden sind sensibilisiert für Modellierungs- und Entwicklungsaufgaben von medienbasierten Software-Systemen zur Unterstützung menschlichen Handelns in betrieblichen und privaten Kontexten.\nSie kennen grundlegende Konzepte, Prozesse/Verfahren und Modelle der Medieninformatik und haben erste Projekterfahrungen gesammelt. Sie können Systemkonzeptionen, zugehörige Modellierungen, Abwägungen und Artefakte für ein Fachpublikum angemessen dokumentieren und mittels verschiedener medialer Formen kommunizieren.\nInhalt Workshops zu grundlegenden projektrelevanten Themenfeldern (wie: Datenmodellierung, Pseudo-Code, Kommunikation in verteilen medialen Systeme, Visual Thinking, Storytelling, Anforderungen) und deren Anwendung, illustriert anhand von Fallstudien.\nTeambasiertes Projekt, welches ausgehend von Kontextszenarien eine (oder mehrere) Problemstellung(en) umreist, zu dem Lösungen konzipiert und prototypisch umgesetzt, dokumentiert und einem Fachpublikum präsentiert werden müssen.\nStudien-/Prüfungsleistungen Projektpräsentation(30%) und schriftliche Ausarbeitung(70%).\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Vorträge verschiedene Präsentationsmaterialien (Whiteboard, Poster, etc.) Einsatz von Bild- und Videobearbeitungssoftware Umgang mit Kameras im Projektteil  Literatur  Michael Herczeg: Einführung in die Medieninformatik, Oldenbourg Verlag, 2006, ISBN: 3-486-581-031 Chris Rupp et al: Requirements-Engineering und -Management: Aus der Praxis von klassisch bis agil, Carl Hanser Verlag; 6-te Auflage, 2014, ISBN-10: 3446438939  ","tags":null,"title":"Einführung in die Medieninformatik","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_einfhrungindiemedieninformatik/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Seminar 3 SWS; Übung 1 SWS\nSeminar mit eingebetteten Übungselementen und Projektarbeit.\nArbeitsaufwand Gesamtaufwand 150h, davon\n 30h Seminar 10h Übung 40h Projekt 70h Selbststudium  Angestrebte Lernergebnisse Die Studierenden können die inhaltlichen Ausrichtungen und die Zielsetzungen der Lehr- und Anwendungsdisziplin Medieninformatik benennen und gegenüber verwandten oder ähnlichen Disziplinen abgrenzen.\nDie Studierenden kennen Grundkonzepte der Informatik (z.B. Anforderungen) sowie audiovisueller und interaktiver Medientechnologien, kennen architekturelle Alternativen interaktiver Systeme und kennen Gestaltungsdimensionen für deren Informations- und Kommunikationsinhalte und können diese Kenntnisse auf eine gegebene Problemstellung anwenden.\nDie Studierenden sind sensibilisiert für Modellierungs- und Entwicklungsaufgaben von medienbasierten Software-Systemen zur Unterstützung menschlichen Handelns in betrieblichen und privaten Kontexten.\nSie kennen grundlegende Konzepte, Prozesse/Verfahren und Modelle der Medieninformatik und haben erste Projekterfahrungen gesammelt. Sie können Systemkonzeptionen, zugehörige Modellierungen, Abwägungen und Artefakte für ein Fachpublikum angemessen dokumentieren und mittels verschiedener medialer Formen kommunizieren.\nInhalt Workshops zu grundlegenden projektrelevanten Themenfeldern (wie: Datenmodellierung, Pseudo-Code, Kommunikation in verteilen medialen Systeme, Visual Thinking, Storytelling, Anforderungen) und deren Anwendung, illustriert anhand von Fallstudien.\nTeambasiertes Projekt, welches ausgehend von Kontextszenarien eine (oder mehrere) Problemstellung(en) umreist, zu dem Lösungen konzipiert und prototypisch umgesetzt, dokumentiert und einem Fachpublikum präsentiert werden müssen.\nStudien-/Prüfungsleistungen Projektpräsentation(30%) und schriftliche Ausarbeitung(70%).\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Vorträge verschiedene Präsentationsmaterialien (Whiteboard, Poster, etc.) Einsatz von Bild- und Videobearbeitungssoftware Umgang mit Kameras im Projektteil  Literatur  Michael Herczeg: Einführung in die Medieninformatik, Oldenbourg Verlag, 2006, ISBN: 3-486-581-031 Chris Rupp et al: Requirements-Engineering und -Management: Aus der Praxis von klassisch bis agil, Carl Hanser Verlag; 6-te Auflage, 2014, ISBN-10: 3446438939  ","tags":null,"title":"Einführung in die Medieninformatik","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_einfhrungindiemedieninformatik/"},{"categories":null,"content":" Lehrform/SWS 2 SWS: Seminar 2 SWS; Projektarbeit\nArbeitsaufwand Gesamtaufwand 300h, davon * 36h Seminar * 264h Selbststudium\nAngestrebte Lernergebnisse Die Studierenden sollen vertiefende Kenntnisse in die Methoden und Techniken aus zwei ausgewählten Modulen aus den ersten vier Fachsemestern des Studiums erlangen und diese in der Konzeption und prototypischen Realisierung eines interaktiven Systems oder Mediums anwenden. Dadurch sollen sie eigene Erfahrungen in der Projektabwicklung mit Medieninformatik-spezifischen Fragestellungen und in der Teamarbeit sammeln und eine reflektierend-kritische Haltung zu methodischen Ansätzen und Entwicklungsmodellen entwickeln. Ziel ist es eine, mit eigenen praktischen Erfahrungen fundierte Methodenkompetenz zu erlangen.\nDie Studierenden sollen darüberhinaus lernen, die Vorgehensweise und die Ergebnisse ihres Projektes in einem kritischen Diskurs vor einem Fachpublikum zu vertreten, um in der Berufspraxis ihre Herangehensweise und Projektergebnisse vertreten zu können.\nInhalt Die Projekte werden in Teams durchgeführt. Zunächst werden von den Teams zwei Module aus den ersten vier Fachsemestern gewählt, welche die fachlichen Perspektiven für die Vertiefung bestimmen. In Absprache mit den Lehrenden werden dann Projektziele festgelegt.\nAus dem Methoden- und Technikkatalog (siehe Vorlesungen zu den Lehrbereichen) wird in Absprache mit den Lehrenden eine Auswahl der einzusetzenden Entwicklungstechniken und -methoden sowie der einzuhaltenden Entwicklungsmodelle getroffen und Qualitätssicherungsmaßnahmen und das Prozessmanagement definiert.\nDie Lehrenden bieten dann während der Projektdurchführung Beratung bzgl. des adäquaten Einsatzes der gewählten Methoden und Techniken. Zwischenstände des Projektes werden zu definierten Meilensteinen von den Projektteams präsentiert. Die Präsentation der Projektergebnisse findet in einem Plenum mit kritischer Diskussion der Methoden und Ergebnisse statt.\nStudien-/Prüfungsleistungen Die Projektergebnis, bestehend aus Prototyp und Dokumentation, geht mit 80% in die Projektnote ein, die Kommunikation der Zwischenergebnisse und des Endergebnisses mit 20%.\n","tags":null,"title":"Entwicklungsprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_entwicklungsprojekt/"},{"categories":null,"content":" Lehrform/SWS 2 SWS: Seminar 2 SWS; Projektarbeit\nArbeitsaufwand Gesamtaufwand 300h, davon * 36h Seminar * 264h Selbststudium\nAngestrebte Lernergebnisse Die Studierenden sollen vertiefende Kenntnisse in die Methoden und Techniken aus zwei ausgewählten Modulen aus den ersten vier Fachsemestern des Studiums erlangen und diese in der Konzeption und prototypischen Realisierung eines interaktiven Systems oder Mediums anwenden. Dadurch sollen sie eigene Erfahrungen in der Projektabwicklung mit Medieninformatik-spezifischen Fragestellungen und in der Teamarbeit sammeln und eine reflektierend-kritische Haltung zu methodischen Ansätzen und Entwicklungsmodellen entwickeln. Ziel ist es eine, mit eigenen praktischen Erfahrungen fundierte Methodenkompetenz zu erlangen.\nDie Studierenden sollen darüberhinaus lernen, die Vorgehensweise und die Ergebnisse ihres Projektes in einem kritischen Diskurs vor einem Fachpublikum zu vertreten, um in der Berufspraxis ihre Herangehensweise und Projektergebnisse vertreten zu können.\nInhalt Die Projekte werden in Teams durchgeführt. Zunächst werden von den Teams zwei Module aus den ersten vier Fachsemestern gewählt, welche die fachlichen Perspektiven für die Vertiefung bestimmen. In Absprache mit den Lehrenden werden dann Projektziele festgelegt.\nAus dem Methoden- und Technikkatalog (siehe Vorlesungen zu den Lehrbereichen) wird in Absprache mit den Lehrenden eine Auswahl der einzusetzenden Entwicklungstechniken und -methoden sowie der einzuhaltenden Entwicklungsmodelle getroffen und Qualitätssicherungsmaßnahmen und das Prozessmanagement definiert.\nDie Lehrenden bieten dann während der Projektdurchführung Beratung bzgl. des adäquaten Einsatzes der gewählten Methoden und Techniken. Zwischenstände des Projektes werden zu definierten Meilensteinen von den Projektteams präsentiert. Die Präsentation der Projektergebnisse findet in einem Plenum mit kritischer Diskussion der Methoden und Ergebnisse statt.\nStudien-/Prüfungsleistungen Die Projektergebnis, bestehend aus Prototyp und Dokumentation, geht mit 80% in die Projektnote ein, die Kommunikation der Zwischenergebnisse und des Endergebnisses mit 20%.\n","tags":null,"title":"Entwicklungsprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_entwicklungsprojekt/"},{"categories":null,"content":" Kurzbeschreibung In der Veranstaltung werden wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen eingeführt, die das Web als Medium konstituieren.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Seminar 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Seminar 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden - kennen wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen, die das Web als Medium konstituieren und - können moderne Webanwendungen auf der Basis von Fachbegriffen analysieren und einordnen\num kompetent am fachlichen Diskurs über Eigenschaften, Auswirkungen und Gestaltungsalternativen von Web Anwendungen teilnehmen zu können.\nInhalt  Web Architektur des W3C Offfenheit und Verwendung von Standards als Prinzip Interaktionsformen: Synchrone Interaktion auf der Basis von REST, asynchrone Interaktion mit Publish/Subscribe Fallstudien: Cloudservices für verteilte Anwendungen - z.B. Amazon Web Services, Google Firebase Ausgewählte Sicherheitsmechanismen im Web Inhaltsarchitekturen: XML, JSON, Microformate, RDFa  Die Inhalte werden als Vorlesung vermittelt. In dem begleitenden Seminar werden die Konzepte mittels Fallstudien anwendungsbezogen analysiert und diskutiert.\nStudien-/Prüfungsleistungen Mündliche Prüfung\nMedienformen  Folienpräsentation Auschnitte aus der Literatur als Leseaufgaben und Fallstudien  Literatur  Randy Conolly, Richard Hoar: Fundamentals of Web Development, Pearson Publishing 2015 Hugh Taylor et al.: Event-Driven Architecture - How SOA Enables the Real-Time Enterprise, Addison-Wesley 2009 Webber: REST in Practice, OReilly 2011 Sam Newman: Building Micro Services, OReilly 2015 James Governor et al.: Web 2.0 Architectures, OReilly 2009 Rajkumar Buyya (ed.): Internet of Things: Principles and Paradigms, Morgan Kaufmann 2016  ","tags":null,"title":"Grundlagen des Web","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_grundlagen_des_web/"},{"categories":null,"content":" Kurzbeschreibung In der Veranstaltung werden wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen eingeführt, die das Web als Medium konstituieren.\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Seminar 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Seminar 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden - kennen wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen, die das Web als Medium konstituieren und - können moderne Webanwendungen auf der Basis von Fachbegriffen analysieren und einordnen\num kompetent am fachlichen Diskurs über Eigenschaften, Auswirkungen und Gestaltungsalternativen von Web Anwendungen teilnehmen zu können.\nInhalt  Web Architektur des W3C Offfenheit und Verwendung von Standards als Prinzip Interaktionsformen: Synchrone Interaktion auf der Basis von REST, asynchrone Interaktion mit Publish/Subscribe Fallstudien: Cloudservices für verteilte Anwendungen - z.B. Amazon Web Services, Google Firebase Ausgewählte Sicherheitsmechanismen im Web Inhaltsarchitekturen: XML, JSON, Microformate, RDFa  Die Inhalte werden als Vorlesung vermittelt. In dem begleitenden Seminar werden die Konzepte mittels Fallstudien anwendungsbezogen analysiert und diskutiert.\nStudien-/Prüfungsleistungen Mündliche Prüfung\nMedienformen  Folienpräsentation Auschnitte aus der Literatur als Leseaufgaben und Fallstudien  Literatur  Randy Conolly, Richard Hoar: Fundamentals of Web Development, Pearson Publishing 2015 Hugh Taylor et al.: Event-Driven Architecture - How SOA Enables the Real-Time Enterprise, Addison-Wesley 2009 Webber: REST in Practice, OReilly 2011 Sam Newman: Building Micro Services, OReilly 2015 James Governor et al.: Web 2.0 Architectures, OReilly 2009 Rajkumar Buyya (ed.): Internet of Things: Principles and Paradigms, Morgan Kaufmann 2016  ","tags":null,"title":"Grundlagen des Web","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_grundlagen_des_web/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand: 150h, davon\n 36h Vorlesung 36h Übung 78h Selbststudium  Angestrebte Lernergebnisse Informatikerinnen und Informatiker analysieren und konstruieren sozio-technische Systeme und entwickeln dabei semiotische Artefakte wie z.B. Spezifikationen, Programme und Handbücher. Die entwickelten Systeme bilden einerseits soziale Wirklichkeit in vielfältiger Form ab und ändern andererseits diese Wirklichkeit durch ihren Einsatz.\nDie Studierenden sollen befähigt werden\n ethische und rechtliche Aspekte des Einsatzes von Informatik-Systemen zu charakterisieren und ein kritisches Bewusstsein für die aktuellen Fragen des wechselseitigen Einflusses von Informatik und Gesellschaft zu entwickeln sowie die Grundbegriffe des deutschen Privatrechts zu verstehen und sich im dazugehörigen Gesetzeswerk zu orientieren, um die unterschiedlichen Wechselwirkungen zwischen Informatik-Systemen und ihrem Einsatzumfeld erkennen und bewerten und insbesondere im Bereich des Vertragsrechts selbständige Lösungsvorschläge erarbeiten zu können.  Inhalt Informatik und Gesellschaft Die Wechselwirkungen zwischen den von Informatikern entwickelten Systemen und ihrem Einsatzumfeld werden in drei großen Themenblöcken behandelt:\n Informatik und soziale Kontexte Komplexität und Sicherheit in sozio-technischenen Systemen Systemgestaltung und Verantwortung der Informatik.  Beispielhafte Inhalte: - Geschichte der Informatik - Bildung und Wissenschaft - Wissenschaften und Gesellschaft - Digitale Medien und Internet - Datenschutz und Überwachungstechniken - Informatik und Gestaltung - partizipative Systemgestaltung - Open Source - Ethische Leitlinien für Informatiker - Normen und Standards - philosophische Aspekte der Informatik\nRecht  Einführung in das deutsche Privatrecht, insbesondere in das BGB. Schwerpunkt im Schuldrecht, hier insbesondere im Vertragsrecht. Besondere Aspekte des Verbraucherschutzes und der inhaltlichen Gestaltung von Verträgen. Im Allgemeinen Teil des BGB wird auf den Vertragsschluss, die Willenerklärung als rechtsgeschäftliches Gestaltungsmittel und die allgemeinen Anforderungen an die Vertragspartner eingegangen.  Studien-/Prüfungsleistungen Informatik und Gesellschaft Präsentation im OpenSpace, Klausur (60 Min).\nRecht Klausur (60 Min.)\nMedienformen Beamergestützte Vorträge\nLiteratur IUG  Sara Baase: A Gift of Fire. Social, Legal, and Ethical Issues in Computing. Prentice Hall, Upper Saddle River, 1997 A.F. Chalmers: Wege der Wissenschaft. 5. Aufl., Springer, Heidelberg, 2001 D.M. Hester, P.J. Ford: Computers and Ethics in the Cyberage. Prentice Hall, Upper Saddle River, 2001 P. Gola, C. Klug: Grundzüge des Datenschutzrechts. C.H. Beck, 2003 M. Pierson, D. Seiler: Internet-Recht im Unternehmen. Beck-Rechtsberater im dtv, Deutscher Taschenbuch Verlag, München, 2002 http://www.gi-ev.de Arbeitskreis Informatik und Verantwortung, Ethische Leitlinien der GI http://www.bfd.bund.de Der Bundesbeauftragte für den Datenschutz http://www.aktiv.org/DVD Deutsche Vereinigung für Datenschutz http://www.big-brother-award.org Überwachungsinformationen  Recht  Bürgerliches Gesetzbuch in der aktuellen Taschenbuchausgabe des dtv  Fakultativ  Eugen Klunziger, Einführung in das Bürgerliche Recht, Verlag Vahlen Norbert Ullrich, Wirtschaftsrecht für Betriebswirte, Verlag Neue Wirtschaftsbriefe  ","tags":null,"title":"Informatik, Recht und Gesellschaft","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_mug/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand: 150h, davon\n 36h Vorlesung 36h Übung 78h Selbststudium  Angestrebte Lernergebnisse Informatikerinnen und Informatiker analysieren und konstruieren sozio-technische Systeme und entwickeln dabei semiotische Artefakte wie z.B. Spezifikationen, Programme und Handbücher. Die entwickelten Systeme bilden einerseits soziale Wirklichkeit in vielfältiger Form ab und ändern andererseits diese Wirklichkeit durch ihren Einsatz.\nDie Studierenden sollen befähigt werden\n ethische und rechtliche Aspekte des Einsatzes von Informatik-Systemen zu charakterisieren und ein kritisches Bewusstsein für die aktuellen Fragen des wechselseitigen Einflusses von Informatik und Gesellschaft zu entwickeln sowie die Grundbegriffe des deutschen Privatrechts zu verstehen und sich im dazugehörigen Gesetzeswerk zu orientieren, um die unterschiedlichen Wechselwirkungen zwischen Informatik-Systemen und ihrem Einsatzumfeld erkennen und bewerten und insbesondere im Bereich des Vertragsrechts selbständige Lösungsvorschläge erarbeiten zu können.  Inhalt Informatik und Gesellschaft Die Wechselwirkungen zwischen den von Informatikern entwickelten Systemen und ihrem Einsatzumfeld werden in drei großen Themenblöcken behandelt:\n Informatik und soziale Kontexte Komplexität und Sicherheit in sozio-technischenen Systemen Systemgestaltung und Verantwortung der Informatik.  Beispielhafte Inhalte: - Geschichte der Informatik - Bildung und Wissenschaft - Wissenschaften und Gesellschaft - Digitale Medien und Internet - Datenschutz und Überwachungstechniken - Informatik und Gestaltung - partizipative Systemgestaltung - Open Source - Ethische Leitlinien für Informatiker - Normen und Standards - philosophische Aspekte der Informatik\nRecht  Einführung in das deutsche Privatrecht, insbesondere in das BGB. Schwerpunkt im Schuldrecht, hier insbesondere im Vertragsrecht. Besondere Aspekte des Verbraucherschutzes und der inhaltlichen Gestaltung von Verträgen. Im Allgemeinen Teil des BGB wird auf den Vertragsschluss, die Willenerklärung als rechtsgeschäftliches Gestaltungsmittel und die allgemeinen Anforderungen an die Vertragspartner eingegangen.  Studien-/Prüfungsleistungen Informatik und Gesellschaft Präsentation im OpenSpace, Klausur (60 Min).\nRecht Klausur (60 Min.)\nMedienformen Beamergestützte Vorträge\nLiteratur IUG  Sara Baase: A Gift of Fire. Social, Legal, and Ethical Issues in Computing. Prentice Hall, Upper Saddle River, 1997 A.F. Chalmers: Wege der Wissenschaft. 5. Aufl., Springer, Heidelberg, 2001 D.M. Hester, P.J. Ford: Computers and Ethics in the Cyberage. Prentice Hall, Upper Saddle River, 2001 P. Gola, C. Klug: Grundzüge des Datenschutzrechts. C.H. Beck, 2003 M. Pierson, D. Seiler: Internet-Recht im Unternehmen. Beck-Rechtsberater im dtv, Deutscher Taschenbuch Verlag, München, 2002 http://www.gi-ev.de Arbeitskreis Informatik und Verantwortung, Ethische Leitlinien der GI http://www.bfd.bund.de Der Bundesbeauftragte für den Datenschutz http://www.aktiv.org/DVD Deutsche Vereinigung für Datenschutz http://www.big-brother-award.org Überwachungsinformationen  Recht  Bürgerliches Gesetzbuch in der aktuellen Taschenbuchausgabe des dtv  Fakultativ  Eugen Klunziger, Einführung in das Bürgerliche Recht, Verlag Vahlen Norbert Ullrich, Wirtschaftsrecht für Betriebswirte, Verlag Neue Wirtschaftsbriefe  ","tags":null,"title":"Informatik, Recht und Gesellschaft","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_mug/"},{"categories":null,"content":"","tags":null,"title":"Johannes Kimmeyer","uri":"https://www.medieninformatik.th-koeln.de/autoren/johannes-kimmeyer/"},{"categories":null,"content":"","tags":null,"title":"Julian Alexander Richter B.sc","uri":"https://www.medieninformatik.th-koeln.de/betreuer/julian-alexander-richter-b.sc/"},{"categories":null,"content":"","tags":null,"title":"Keywords","uri":"https://www.medieninformatik.th-koeln.de/keywords/"},{"categories":null,"content":" Lehrform/SWS Vorlesung, Praktikum\nArbeitsaufwand Angestrebte Lernergebnisse Die Studierenden sollen\n Prinzipien und Grundlagen von technischen Kommunikations­vor­gängen kennen lernen, Protokolle als wesentliche Grundlage der Kommunikationstechnik im Detail verstehen (Internet-Protokolle, Multimedia-Protokolle, TK-Protokolle, Dienste) Einsatz und Nutzung von Kommunikations­tech­nik praxistypisch kennen lernen, in der Lage sein, selbstständig Netzstrukturen zu bewerten, Netze zu analysieren und zu konzipieren (unter Anwendung von Netz­analyse­werkzeugen und -methoden).  Inhalt Grundbegriffe und Grundlagen, Kommunikationssysteme (Modelle, Grundbegriffe), Protokolle, Schnittstellen, Dienste, Architekturmodelle (OSI-Referenzmodell, TCP/IP-Protokollfamilie), Standardisierung, TCP/IP-Protokollfamilie als Grundlage des Internet, Schichtenmodell und Protokolle im Detail, Adressierung, ausgewählte Anwendungen, Klassifizierung von Netzen / Topologien / Technologien, Wegewahl / Vermittlung / Routing, Vermittlungsprinzipien, Routing-Verfahren und Protokolle, Internet-spezifische Verfahren, Multimedia-Netze, Dienstgüte, Internet-Telefonie, Realisierung von Multimedia-Netzen, Netzsicherheit, grundlegende Begriffe der „IT-Sicherheit“, typische Bedrohungen in Netzen, Beispielszenarien\nStudien-/Prüfungsleistungen Medienformen  Vorlesung im Hörsaal (PowerPoint und Beamer)\n Praktikum an Rechnern des KTDS-Labors; Ressourcen: Netzanalysesoftware,div. Netzüberwachungssoftware, E-Mail-Server und -Clients, DNS-Server, ggf. weitereServer-Implementierungen  Literatur  Wird in der Veranstaltung bekannt gegeben  ","tags":null,"title":"Kommunikationstechnik und Netze","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_kommunikationstechnikundnetze/"},{"categories":null,"content":" Lehrform/SWS Vorlesung, Praktikum\nArbeitsaufwand Angestrebte Lernergebnisse Die Studierenden sollen\n Prinzipien und Grundlagen von technischen Kommunikations­vor­gängen kennen lernen, Protokolle als wesentliche Grundlage der Kommunikationstechnik im Detail verstehen (Internet-Protokolle, Multimedia-Protokolle, TK-Protokolle, Dienste) Einsatz und Nutzung von Kommunikations­tech­nik praxistypisch kennen lernen, in der Lage sein, selbstständig Netzstrukturen zu bewerten, Netze zu analysieren und zu konzipieren (unter Anwendung von Netz­analyse­werkzeugen und -methoden).  Inhalt Grundbegriffe und Grundlagen, Kommunikationssysteme (Modelle, Grundbegriffe), Protokolle, Schnittstellen, Dienste, Architekturmodelle (OSI-Referenzmodell, TCP/IP-Protokollfamilie), Standardisierung, TCP/IP-Protokollfamilie als Grundlage des Internet, Schichtenmodell und Protokolle im Detail, Adressierung, ausgewählte Anwendungen, Klassifizierung von Netzen / Topologien / Technologien, Wegewahl / Vermittlung / Routing, Vermittlungsprinzipien, Routing-Verfahren und Protokolle, Internet-spezifische Verfahren, Multimedia-Netze, Dienstgüte, Internet-Telefonie, Realisierung von Multimedia-Netzen, Netzsicherheit, grundlegende Begriffe der „IT-Sicherheit“, typische Bedrohungen in Netzen, Beispielszenarien\nStudien-/Prüfungsleistungen Medienformen  Vorlesung im Hörsaal (PowerPoint und Beamer)\n Praktikum an Rechnern des KTDS-Labors; Ressourcen: Netzanalysesoftware,div. Netzüberwachungssoftware, E-Mail-Server und -Clients, DNS-Server, ggf. weitereServer-Implementierungen  Literatur  Wird in der Veranstaltung bekannt gegeben  ","tags":null,"title":"Kommunikationstechnik und Netze","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_kommunikationstechnikundnetze/"},{"categories":null,"content":"","tags":null,"title":"Laura Maria Hermann","uri":"https://www.medieninformatik.th-koeln.de/autoren/laura-maria-hermann/"},{"categories":null,"content":"","tags":null,"title":"Module","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/"},{"categories":null,"content":"","tags":null,"title":"Module","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Praktikum 1 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 210h, davon\n 54h Vorlesung 18h Praktikum 36h Übung 102h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Bedeutung funktionaler Beziehungen für kontinuierliche Zusammenhänge, die lineare Algebra z.B als Grundlage der grafischen Datenverarbeitung und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\nInhalt  Grundlagen Folgen Funktionen Differenzialrechnung (1 Veränderliche) Integralrechnung Lineare Algebra  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nLiteratur  Skript unter www.gm.fh-koeln.de/~konen Teschl, Gerald und Teschl, Susanne: \u0026ldquo;Mathematik für Informatiker\u0026rdquo;, Springer Verlag, 4. Auflage, 2013 Hartmann, Peter: \u0026ldquo;Mathematik für Informatiker-Ein praxisbezogenes Lehrbuch\u0026rdquo; Vieweg Verlag, 475 Seiten, 3. Auflage 2006 Papula, Lothar: \u0026ldquo;Mathematik für Ingenieure und Naturwissenschaftler\u0026rdquo; Vieweg Verlag, 14. Auflage, 2014 Stingl, Mathematik für Fachhochschulen, Hanser 2003  ","tags":null,"title":"Mathematik 1","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_mathematik1/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Praktikum 1 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 210h, davon\n 54h Vorlesung 18h Praktikum 36h Übung 102h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Bedeutung funktionaler Beziehungen für kontinuierliche Zusammenhänge, die lineare Algebra z.B als Grundlage der grafischen Datenverarbeitung und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\nInhalt  Grundlagen Folgen Funktionen Differenzialrechnung (1 Veränderliche) Integralrechnung Lineare Algebra  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nLiteratur  Skript unter www.gm.fh-koeln.de/~konen Teschl, Gerald und Teschl, Susanne: \u0026ldquo;Mathematik für Informatiker\u0026rdquo;, Springer Verlag, 4. Auflage, 2013 Hartmann, Peter: \u0026ldquo;Mathematik für Informatiker-Ein praxisbezogenes Lehrbuch\u0026rdquo; Vieweg Verlag, 475 Seiten, 3. Auflage 2006 Papula, Lothar: \u0026ldquo;Mathematik für Ingenieure und Naturwissenschaftler\u0026rdquo; Vieweg Verlag, 14. Auflage, 2014 Stingl, Mathematik für Fachhochschulen, Hanser 2003  ","tags":null,"title":"Mathematik 1","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_mathematik1/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Praktikum 1 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 240h, davon\n 54h Vorlesung 18h Praktikum 36h Übung 132h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Beziehungen diskreter Strukturen wie der Graphen zu vielfältigen grundlegenden Datenstrukturen, die Statistik zur Deskription und Beurteilung von Beobachtungen und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\nInhalt  Mehrdimensionale Differenzialrechnung, Graphentheorie, Kombinatorik, Wahrscheinlichkeitsrechnung und Statistik, Komplexe Zahlen, Differentialgleichungen.  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nLiteratur  s. Literaturliste auf der Homepage www.gm.fh-koeln.de/~konen Skript unter www.gm.fh-koeln.de/~konen/Mathe2-SS  ","tags":null,"title":"Mathematik 2","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_mathematik2/"},{"categories":null,"content":" Lehrform/SWS 6 SWS: Vorlesung 3 SWS; Praktikum 1 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 240h, davon\n 54h Vorlesung 18h Praktikum 36h Übung 132h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Beziehungen diskreter Strukturen wie der Graphen zu vielfältigen grundlegenden Datenstrukturen, die Statistik zur Deskription und Beurteilung von Beobachtungen und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\nInhalt  Mehrdimensionale Differenzialrechnung, Graphentheorie, Kombinatorik, Wahrscheinlichkeitsrechnung und Statistik, Komplexe Zahlen, Differentialgleichungen.  Studien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nLiteratur  s. Literaturliste auf der Homepage www.gm.fh-koeln.de/~konen Skript unter www.gm.fh-koeln.de/~konen/Mathe2-SS  ","tags":null,"title":"Mathematik 2","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_mathematik2/"},{"categories":null,"content":" Lehrform/SWS Vorlesung und Praktikum/Übung\nArbeitsaufwand Gesamtaufwand 300h, davon\n 65h Vorlesung 65h Praktikum/Übung 170h Selbststudium  Angestrebte Lernergebnisse  Die Studierenden erwerben Grundkenntnisse in kognitions-, arbeits- und organisations-psychologischen Grundkonzepten und können diese auf Problemstellungen, im Kontext der Mensch-Computer Interaktion, anwenden. Die Studierenden kennen Modelle, Methoden, Arbeits- und Dokumentationstechniken der Mensch-Computer Interaktion, können sie anwenden, kritisch diskutieren und für konkrete Aktivitäten in Entwicklungsprojekten unter Abwägung der Alternativen auswählen. Sie kennen relevante internationale Normen und Standards, können sie anwenden und erarbeitete Ergebnisse kritisch diskutieren und einordnen. Sie kennen methodische Ansätze benutzer- oder benutzungsorientierter Entwicklungsprozesse und können diese systematisch und iterativ auf die Konzeption, Realisation, Evaluation und das Redesign von interaktiven Systemen anwenden. Zudem kennen sie Konzepte und Vorgehensmodelle für die Integration von Software- und Usability Engineering in einem Gesamtprozess und können diese in Entwicklungsprojekten anwenden. Die Studierenden erlangen die Fähigkeit zum fachlichen Diskurs.  Inhalt  kognitionspsychologische Grundlagen Benutzermodellierung Tätigkeitsmodellierung Spezifikationsformen für Nutzungskontexte Spezifikation von Nutzungsanforderungen Interaktionsmodelle Interaktionsmodalitäten und –kodalitäten Vorgehensmodelle (human-centered, usability-engineering, usage-centered design) Design-Prinzipien, -Pattern, -Guidelines, -Styleguides Prototyping und Sketching Evaluation  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nMedienformen  Beamergestützte Vorlesung Case Studies Lehrfilme  Literatur  Dix, A.; Finlay, J.; Abowd, G. \u0026amp; Beale, R.: Human-Computer Interaction. Harlow, Pearson, 2004 (3rd ed.), Benyon, D., Turner, S. Turner, P. Designing Interactive Systems: People, Activities, Contexts, Technologies, Addison Wesley, 2005, Anderson, J.R.: Kognitive Psychologie. Heidelberg, Springer, 2001 (3. Auflage). Beyer H. \u0026amp; Holtzblatt K.: Contextual Design: Defining Customer-Centered Systems. San Francisco Morgan Kaufmann, 1997. Cockburn, A.: Writing Effective Use Cases. Boston, Addison-Wesley, 2000. Constantine, L.; Lockwood, L.: Software for Use, ACM Press, 1999. Dumas, J.S. \u0026amp; Redish, J.C.: A Practical Guide to Usability Testing. Exter, Intellect Books, 1999 (rev. edition). Hacker, W.: Allgemeine Arbeitspsychologie. Bern, Huber, 1998. Hackos, J. \u0026amp; Redish, J.: User and Task Analysis for Interface Design. New York, Wiley, 1998. Holtzblatt K.; Wendell, J.B. \u0026amp; Wood, S.: Rapid Contextual Design. A How-to Guide to Key Techniques for User-Centered Design. San Francisco, Morgan Kaufmann, 2005. Johnson, J.: GUI Bloopers. San Francisco, Morgan Kaufmann, 2000. Kulak, D. \u0026amp; Guiney, E.: Use Cases. Requirements in Context. Boston, Addison-Wesley, 2000. Mayhew, D.: The Usability Engineering Lifecycle. A Practitioner´s Handbook for User Interface Design. San Francisco: Morgan Kaufmann, 1999. Nielsen, J. \u0026amp; Mack, R.L. (eds.): Usability Inspection Methods. NewYork, Wiley, 1994. Preece, J; Rogers, Y. \u0026amp; Sharp, H.: Interaction Design. Beyond Human-Computer Interaction. NewYork, Wiley, 2002. Rosson, M.B. \u0026amp; Carroll, J.M.: Usability Engineering. Scenario-Based Development of Human-Computer Interaction. San Francisco, Morgan Kaufmann, 2002. Snyder, C: Paper Prototyping. San Francisco, Morgan Kaufmann, 2003. Ulich, E.: Arbeitspsychologie. Stuttgart, Schäffer-Poeschel, 2001 (5.Auflage).  ","tags":null,"title":"Mensch-Computer Interaktion","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_mensch-computer_interaktion/"},{"categories":null,"content":" Lehrform/SWS Vorlesung und Praktikum/Übung\nArbeitsaufwand Gesamtaufwand 300h, davon\n 65h Vorlesung 65h Praktikum/Übung 170h Selbststudium  Angestrebte Lernergebnisse  Die Studierenden erwerben Grundkenntnisse in kognitions-, arbeits- und organisations-psychologischen Grundkonzepten und können diese auf Problemstellungen, im Kontext der Mensch-Computer Interaktion, anwenden. Die Studierenden kennen Modelle, Methoden, Arbeits- und Dokumentationstechniken der Mensch-Computer Interaktion, können sie anwenden, kritisch diskutieren und für konkrete Aktivitäten in Entwicklungsprojekten unter Abwägung der Alternativen auswählen. Sie kennen relevante internationale Normen und Standards, können sie anwenden und erarbeitete Ergebnisse kritisch diskutieren und einordnen. Sie kennen methodische Ansätze benutzer- oder benutzungsorientierter Entwicklungsprozesse und können diese systematisch und iterativ auf die Konzeption, Realisation, Evaluation und das Redesign von interaktiven Systemen anwenden. Zudem kennen sie Konzepte und Vorgehensmodelle für die Integration von Software- und Usability Engineering in einem Gesamtprozess und können diese in Entwicklungsprojekten anwenden. Die Studierenden erlangen die Fähigkeit zum fachlichen Diskurs.  Inhalt  kognitionspsychologische Grundlagen Benutzermodellierung Tätigkeitsmodellierung Spezifikationsformen für Nutzungskontexte Spezifikation von Nutzungsanforderungen Interaktionsmodelle Interaktionsmodalitäten und –kodalitäten Vorgehensmodelle (human-centered, usability-engineering, usage-centered design) Design-Prinzipien, -Pattern, -Guidelines, -Styleguides Prototyping und Sketching Evaluation  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nMedienformen  Beamergestützte Vorlesung Case Studies Lehrfilme  Literatur  Dix, A.; Finlay, J.; Abowd, G. \u0026amp; Beale, R.: Human-Computer Interaction. Harlow, Pearson, 2004 (3rd ed.), Benyon, D., Turner, S. Turner, P. Designing Interactive Systems: People, Activities, Contexts, Technologies, Addison Wesley, 2005, Anderson, J.R.: Kognitive Psychologie. Heidelberg, Springer, 2001 (3. Auflage). Beyer H. \u0026amp; Holtzblatt K.: Contextual Design: Defining Customer-Centered Systems. San Francisco Morgan Kaufmann, 1997. Cockburn, A.: Writing Effective Use Cases. Boston, Addison-Wesley, 2000. Constantine, L.; Lockwood, L.: Software for Use, ACM Press, 1999. Dumas, J.S. \u0026amp; Redish, J.C.: A Practical Guide to Usability Testing. Exter, Intellect Books, 1999 (rev. edition). Hacker, W.: Allgemeine Arbeitspsychologie. Bern, Huber, 1998. Hackos, J. \u0026amp; Redish, J.: User and Task Analysis for Interface Design. New York, Wiley, 1998. Holtzblatt K.; Wendell, J.B. \u0026amp; Wood, S.: Rapid Contextual Design. A How-to Guide to Key Techniques for User-Centered Design. San Francisco, Morgan Kaufmann, 2005. Johnson, J.: GUI Bloopers. San Francisco, Morgan Kaufmann, 2000. Kulak, D. \u0026amp; Guiney, E.: Use Cases. Requirements in Context. Boston, Addison-Wesley, 2000. Mayhew, D.: The Usability Engineering Lifecycle. A Practitioner´s Handbook for User Interface Design. San Francisco: Morgan Kaufmann, 1999. Nielsen, J. \u0026amp; Mack, R.L. (eds.): Usability Inspection Methods. NewYork, Wiley, 1994. Preece, J; Rogers, Y. \u0026amp; Sharp, H.: Interaction Design. Beyond Human-Computer Interaction. NewYork, Wiley, 2002. Rosson, M.B. \u0026amp; Carroll, J.M.: Usability Engineering. Scenario-Based Development of Human-Computer Interaction. San Francisco, Morgan Kaufmann, 2002. Snyder, C: Paper Prototyping. San Francisco, Morgan Kaufmann, 2003. Ulich, E.: Arbeitspsychologie. Stuttgart, Schäffer-Poeschel, 2001 (5.Auflage).  ","tags":null,"title":"Mensch-Computer Interaktion","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_mensch-computer_interaktion/"},{"categories":null,"content":"","tags":null,"title":"Module","uri":"https://www.medieninformatik.th-koeln.de/module/"},{"categories":null,"content":"","tags":null,"title":"Open Data","uri":"https://www.medieninformatik.th-koeln.de/keywords/open-data/"},{"categories":null,"content":"","tags":null,"title":"Papers","uri":"https://www.medieninformatik.th-koeln.de/papers/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 1 SWS; Übung 1 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Praktikum 18h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen unterschiedliche Programmierparadigmen verstehen und anwenden können. Weiterhin sollen sie die Angemessenheit der verschiedenen Programmierparadigmen für eine Aufgabenstellung einordnen und bewerten können. Studierende sollen mithilfe von etablierten Paradigmen und Entwurfsmustern in der Lage sein, synchrone und asynchrone Programme zu konzipieren und ablaufsicher zu gestalten.\nInhalt  Grundlagen von Programmiersprachen Vergleich imperativer und deklarativer Paradigmen prozedurale und objektorientierte Programmierung funktionale Programmierung Logikprogrammierung Nebenläufigkeit Entwurfsmuster  Studien-/Prüfungsleistungen Klausur sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Foliensammlung Screencasts Skript Beispiellösungen  Literatur  Abelson, Sussman, Struktur und Interpretation von Computer Programmen,Springer-Verlag 2001 W.F. Clocksin, C.S. Mellish, Programming in Prolog, Springer-Verlag 2003 Gamma, E., Helm, R., Johnson, R., \u0026amp; Vlissides, J. (2015). Design patterns: Entwurfsmuster als Elemente wiederverwendbarer objektorientierter Software. Frechen: Mitp. Odersky, Spoon, Venners, Programming in Scala, Artima Press 2011 Goetz, B., Peierls, T., Bloch, J., Bowbeer, J., Holmes, D., Lea, D. (2006). Java-Concurrency in Practise. Addison Wesley. Tate, B. A., \u0026amp; Klicman, P. (2011). Sieben Wochen, sieben Sprachen: Verstehen Sie die modernen Sprachkonzepte. Sebastopol: O\u0026rsquo;Reilly.  ","tags":null,"title":"Paradigmen der Programmierung","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_paradigmen-der-programmierung/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 1 SWS; Übung 1 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Praktikum 18h Übung 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen unterschiedliche Programmierparadigmen verstehen und anwenden können. Weiterhin sollen sie die Angemessenheit der verschiedenen Programmierparadigmen für eine Aufgabenstellung einordnen und bewerten können. Studierende sollen mithilfe von etablierten Paradigmen und Entwurfsmustern in der Lage sein, synchrone und asynchrone Programme zu konzipieren und ablaufsicher zu gestalten.\nInhalt  Grundlagen von Programmiersprachen Vergleich imperativer und deklarativer Paradigmen prozedurale und objektorientierte Programmierung funktionale Programmierung Logikprogrammierung Nebenläufigkeit Entwurfsmuster  Studien-/Prüfungsleistungen Klausur sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Foliensammlung Screencasts Skript Beispiellösungen  Literatur  Abelson, Sussman, Struktur und Interpretation von Computer Programmen,Springer-Verlag 2001 W.F. Clocksin, C.S. Mellish, Programming in Prolog, Springer-Verlag 2003 Gamma, E., Helm, R., Johnson, R., \u0026amp; Vlissides, J. (2015). Design patterns: Entwurfsmuster als Elemente wiederverwendbarer objektorientierter Software. Frechen: Mitp. Odersky, Spoon, Venners, Programming in Scala, Artima Press 2011 Goetz, B., Peierls, T., Bloch, J., Bowbeer, J., Holmes, D., Lea, D. (2006). Java-Concurrency in Practise. Addison Wesley. Tate, B. A., \u0026amp; Klicman, P. (2011). Sieben Wochen, sieben Sprachen: Verstehen Sie die modernen Sprachkonzepte. Sebastopol: O\u0026rsquo;Reilly.  ","tags":null,"title":"Paradigmen der Programmierung","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_paradigmen-der-programmierung/"},{"categories":null,"content":"","tags":null,"title":"Praxisprojekt","uri":"https://www.medieninformatik.th-koeln.de/module/praxisprojekt/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 300 h Projektarbeit\nAngestrebte Lernergebnisse Die Studierenden\n können Methoden und Techniken, die sie im Studium erlernt haben, in realitätsnahen Projekten weitgehend selbstständig anwenden\n haben erste Erfahrungen mit der Selbststeuerung und proaktiven Kommunikation in einem Projekt mittlerer Größe und der Einordnung von Projektarbeit in betriebliche, gesellschaftliche und rechtliche Rahmenbedingungen gesammelt\n  Inhalt Modulinhalte des ersten bis fünften Semesters anhand von realen Anforderungen in einem praxisrelevanten Kontext anwenden und den Studierenden durch die Betreuung des Dozenten an eine selbstständige Projektdurchführung und Kommunikation heranführen. Das Praxisprojekt kann entweder in einem Unternehmen oder in der Hochschule - dann eingebettet in Forschungsprojekte - erfolgen.\nStudien-/Prüfungsleistungen Schriftliche Ausarbeitung, Projektdokumentation\n","tags":null,"title":"Praxisprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_praxisprojektarbeit/"},{"categories":null,"content":" Lehrform/SWS Angeleitetes, eigenverantwortliches Arbeiten\nArbeitsaufwand 300 h Projektarbeit\nAngestrebte Lernergebnisse Die Studierenden\n können Methoden und Techniken, die sie im Studium erlernt haben, in realitätsnahen Projekten weitgehend selbstständig anwenden\n haben erste Erfahrungen mit der Selbststeuerung und proaktiven Kommunikation in einem Projekt mittlerer Größe und der Einordnung von Projektarbeit in betriebliche, gesellschaftliche und rechtliche Rahmenbedingungen gesammelt\n  Inhalt Modulinhalte des ersten bis fünften Semesters anhand von realen Anforderungen in einem praxisrelevanten Kontext anwenden und den Studierenden durch die Betreuung des Dozenten an eine selbstständige Projektdurchführung und Kommunikation heranführen. Das Praxisprojekt kann entweder in einem Unternehmen oder in der Hochschule - dann eingebettet in Forschungsprojekte - erfolgen.\nStudien-/Prüfungsleistungen Schriftliche Ausarbeitung, Projektdokumentation\n","tags":null,"title":"Praxisprojekt","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_praxisprojektarbeit/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Seminar\nArbeitsaufwand Gesamtaufwand 150h, davon\n 32h Seminar 118h Selbststudium  Angestrebte Lernergebnisse Die Studierenden\n kennen Techniken wissenschaftlichen Arbeitens und können diese anwenden haben erste Erfahrungen mit aktiver Fachkommunikation gesammelt gewinnen einen ersten Überblick über das Spektrum von aktuellen Themen in der Medieninformatik können eigene Projektergebnisse vor einem Fachpublikum in Vortrag und Diskussion darstellen und verteidigen  Inhalt Das Praxisprojektseminar besteht aus\n Veranstaltungen in denen Techniken wissenschaftlichen Arbeitens vermittelt werden, Audits über den aktuellen Stand ihres Projektes, Fachvorträgen von Studierenden über ihre Projektergebnisse.  Studien-/Prüfungsleistungen Seminarvortrag zur Praxisprojektarbeit\nLiteratur  Rechenberg: Technisches Schreiben (nicht nur) für Informatiker, 2. Aufl, Hanser Verlag 2003 M. Karmasin, R. Ribing: Die Gestaltung wissenschaftlicher Arbeiten, 2. Auflage WUV 2007  ","tags":null,"title":"Praxisprojektseminar","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_praxisprojektseminar/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Seminar\nArbeitsaufwand Gesamtaufwand 150h, davon\n 32h Seminar 118h Selbststudium  Angestrebte Lernergebnisse Die Studierenden\n kennen Techniken wissenschaftlichen Arbeitens und können diese anwenden haben erste Erfahrungen mit aktiver Fachkommunikation gesammelt gewinnen einen ersten Überblick über das Spektrum von aktuellen Themen in der Medieninformatik können eigene Projektergebnisse vor einem Fachpublikum in Vortrag und Diskussion darstellen und verteidigen  Inhalt Das Praxisprojektseminar besteht aus\n Veranstaltungen in denen Techniken wissenschaftlichen Arbeitens vermittelt werden, Audits über den aktuellen Stand ihres Projektes, Fachvorträgen von Studierenden über ihre Projektergebnisse.  Studien-/Prüfungsleistungen Seminarvortrag zur Praxisprojektarbeit\nLiteratur  Rechenberg: Technisches Schreiben (nicht nur) für Informatiker, 2. Aufl, Hanser Verlag 2003 M. Karmasin, R. Ribing: Die Gestaltung wissenschaftlicher Arbeiten, 2. Auflage WUV 2007  ","tags":null,"title":"Praxisprojektseminar","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_praxisprojektseminar/"},{"categories":null,"content":"","tags":null,"title":"Prof. Christian Noss","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-christian-noss/"},{"categories":null,"content":"","tags":null,"title":"Prof. Dr. Christian Kohls","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-dr.-christian-kohls/"},{"categories":null,"content":"","tags":null,"title":"Prof. Dr. Gerhard Hartmann","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-dr.-gerhard-hartmann/"},{"categories":null,"content":"","tags":null,"title":"Prof. Dr. Kristian Fischer","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-dr.-kristian-fischer/"},{"categories":null,"content":"","tags":null,"title":"Prof. Dr. Martin Eisemann","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-dr.-martin-eisemann/"},{"categories":null,"content":"","tags":null,"title":"Prof. Hans Kornacher","uri":"https://www.medieninformatik.th-koeln.de/betreuer/prof.-hans-kornacher/"},{"categories":null,"content":" Kurzbeschreibung Managementaspekte der professionellen Entwicklung großer Softwaresysteme\nLehrform/SWS 4 SWS: Vorlesung 2 SWS, Übung 1 SWS, Praktikum 1 SWS; max. 6 Studierende pro Praktikumsteam;\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Übung 18h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen befähigt werden,\n die grundlegenden Aufgaben des Projektmanagements, insbesondere in IT-Projekten, zu charakterisieren und durchzuführen die Projektmanagement-Methoden, -Techniken und -Werkzeuge zielgerichtet einzusetzen die erforderlichen soziologischen und kommunikativen Aspekte zu berücksichtigen, um, mit dem Ziel einer menschengerechten und soziologisch fundierten Menschenführung, eine wirkliche und optimale Produktivität bei komplexen Projekten erreichen zu können.  Inhalt Das Modul befasst sich mit den Managementaspekten der professionellen Entwicklung großer Softwaresysteme. Der Vorlesungsteil des Moduls gliedert sich in folgende Kapitel:\n Überblick – Warum Projektmanagement? Teamarbeit und Menschenführung (Kommunikation und Führung) Kosten/Nutzen-Analysen und Entscheidungstechniken Projektorganisation und Projektplanung (Aufbauorganisation, Ablauforganisation, Prozessmodellierung, iterative und agile Vorgehensmodelle, Netzplantechnik) detaillierte Aufwandsschätzung und Projektcontrolling (Function Point Analysis, COCOMO, Risikomanagement, Projektpräsentationen) Inhalte von PM-BOK (Project Management - Body of Knowledge) Zusammenfassung und Prüfungsvorbereitung;  Damit die Studierenden die vorgestellten Methoden und Techniken zum Management von Softwareprojekten anwenden, sowie besser analysieren und bewerten können, werden in Projekt-Teams die in der Vorlesung vermittelten Inhalte anhand eines Fallbeispiels eingesetzt. Dazu bilden die Teilnehmenden Teams zu jeweils 6 Studierenden. Im Projekt werden folgende Bereiche vertieft:\n Kosten- Nutzenrechnung, Entscheidungstechniken Aufbauorganisation Aufwandsschätzung (Function-Point-Analyse, COCOMO); Risikomanagement Ablauf- und Ressourcenplanung (Netzplantechnik, Einsatz von PM-Software wie z.B. MS-Project)  Studien-/Prüfungsleistungen  Projekt-Ausarbeitung (30%) Vortrag (30%) Schriftliche Prüfung (40%).  Medienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form im Netz); Vertiefende Unterlagen sowie aktuelle Artikel (in elektronischer Form im Netz); Projektarbeit in Kleingruppen, um die erlernten Methoden und Techniken einzuüben und zu vertiefen (Seminarraum, Rechnerlabor);  Literatur  A. Buhl: Grundkurs Projektmanagement. Carl Hanser Verlag, München, 2004 H.W. Wieczorrek, P. Mertens: Management von IT-Projekten Von der Planung zur Realisierung. 4. Aufl., Springer, Heidelberg, 2011 C. Aichele, M. Schönberger: IT-Projektmanagement. Springer Vieweg, 2014 A. Henrich: Management von Softwareprojekten. Oldenbourg Verlag, München, 2002 H. Kerzner: Projektmanagement – Ein systemorientierter Ansatz. mitp-Verlag, Bonn, 2003 T. DeMarco: Der Termin. Hanser, München, 1998  ","tags":null,"title":"Projektmanagement","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_projektmanagement/"},{"categories":null,"content":" Kurzbeschreibung Managementaspekte der professionellen Entwicklung großer Softwaresysteme\nLehrform/SWS 4 SWS: Vorlesung 2 SWS, Übung 1 SWS, Praktikum 1 SWS; max. 6 Studierende pro Praktikumsteam;\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 18h Übung 18h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen befähigt werden,\n die grundlegenden Aufgaben des Projektmanagements, insbesondere in IT-Projekten, zu charakterisieren und durchzuführen die Projektmanagement-Methoden, -Techniken und -Werkzeuge zielgerichtet einzusetzen die erforderlichen soziologischen und kommunikativen Aspekte zu berücksichtigen, um, mit dem Ziel einer menschengerechten und soziologisch fundierten Menschenführung, eine wirkliche und optimale Produktivität bei komplexen Projekten erreichen zu können.  Inhalt Das Modul befasst sich mit den Managementaspekten der professionellen Entwicklung großer Softwaresysteme. Der Vorlesungsteil des Moduls gliedert sich in folgende Kapitel:\n Überblick – Warum Projektmanagement? Teamarbeit und Menschenführung (Kommunikation und Führung) Kosten/Nutzen-Analysen und Entscheidungstechniken Projektorganisation und Projektplanung (Aufbauorganisation, Ablauforganisation, Prozessmodellierung, iterative und agile Vorgehensmodelle, Netzplantechnik) detaillierte Aufwandsschätzung und Projektcontrolling (Function Point Analysis, COCOMO, Risikomanagement, Projektpräsentationen) Inhalte von PM-BOK (Project Management - Body of Knowledge) Zusammenfassung und Prüfungsvorbereitung;  Damit die Studierenden die vorgestellten Methoden und Techniken zum Management von Softwareprojekten anwenden, sowie besser analysieren und bewerten können, werden in Projekt-Teams die in der Vorlesung vermittelten Inhalte anhand eines Fallbeispiels eingesetzt. Dazu bilden die Teilnehmenden Teams zu jeweils 6 Studierenden. Im Projekt werden folgende Bereiche vertieft:\n Kosten- Nutzenrechnung, Entscheidungstechniken Aufbauorganisation Aufwandsschätzung (Function-Point-Analyse, COCOMO); Risikomanagement Ablauf- und Ressourcenplanung (Netzplantechnik, Einsatz von PM-Software wie z.B. MS-Project)  Studien-/Prüfungsleistungen  Projekt-Ausarbeitung (30%) Vortrag (30%) Schriftliche Prüfung (40%).  Medienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form im Netz); Vertiefende Unterlagen sowie aktuelle Artikel (in elektronischer Form im Netz); Projektarbeit in Kleingruppen, um die erlernten Methoden und Techniken einzuüben und zu vertiefen (Seminarraum, Rechnerlabor);  Literatur  A. Buhl: Grundkurs Projektmanagement. Carl Hanser Verlag, München, 2004 H.W. Wieczorrek, P. Mertens: Management von IT-Projekten Von der Planung zur Realisierung. 4. Aufl., Springer, Heidelberg, 2011 C. Aichele, M. Schönberger: IT-Projektmanagement. Springer Vieweg, 2014 A. Henrich: Management von Softwareprojekten. Oldenbourg Verlag, München, 2002 H. Kerzner: Projektmanagement – Ein systemorientierter Ansatz. mitp-Verlag, Bonn, 2003 T. DeMarco: Der Termin. Hanser, München, 1998  ","tags":null,"title":"Projektmanagement","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_projektmanagement/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 1 SWS; Seminar 3 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 15h Vorlesung 45h Seminar 80h Projektarbeit\n 10h Selbststudium  Angestrebte Lernergebnisse Die Studierenden kennen wesentliche Begriffe der visuellen Kommunikation und können diese anwenden um Briefings, Angebote oder Korrekturwünsche im Design-Kontext zu verstehen oder zu verfassen.\nDie Studierenden können Gestaltungslösungen und -kontexte analysieren, argumentieren, diskutieren, dokumentieren und bewerten, um eigene Lösungen innerhalb eines Gestaltungskontextes generieren zu können.\nDie Studierenden können in einem gegebenen Gestaltungskontext, unter Berücksichtigung von Gestaltungsregeln (Raster, Layout, Typographie, etc.), eigene Gestaltungslösungen entwickeln, systematisch variieren und argumentieren um gegebene funktionale und/oder kommunikative Ziele zu adressieren.\nInhalt Vorlesung  Design Basics Axis Map \u0026amp; Semantisches Differential Kommunikationsmodelle Visuelle Wahrnehmung Benutzerziele Corporate Identity Orientierung, Hierarchisierung, Reduktion Räumlichkeit Gestaltgesetze Farbe, Kontraste Typographie, Textsatz Proportion Ordnung, visuelle Struktur, Flow \u0026amp; Transistion Gestaltungsziele, Gestaltungsprozess  Seminar  Designprojekte strukturieren Layoutentwicklung mit Wireframes Layoutentwicklung für verschiedene Endgeräte Flow \u0026amp; Transition Typographie \u0026amp; Textsatz Designkonzepte analysieren \u0026amp; bewerten Variantenbildung Modularisierung, Interface Inventar aufbauen \u0026amp; visualisieren  Studien-/Prüfungsleistungen Projekt und Projektpräsentationsprüfung.\nMedienformen Beamergestützte Vorträge, Rechnergestützte Workshops\nLiteratur  Stapelkamp, Torsten: Informationsvisualisierung Joachim Böhringer, Peter Bühler \u0026amp; Patrick Schlaich: Kompendium der Mediengestaltung - Konzeption und Gestaltung für Digital- und Printmedien Stapelkamp, Torsten: Screen- und Interfacedesign Max Bollwage: Typografie kompakt Kerstin Alexander: Kompendium der visuellen Information und Kommunikation Maeda, John:Simplicity!: Die zehn Gesetze der Einfachheit Lidwell, William; Holden, Kristina; Butler, Jill: Design: Die 100 Prinzipien für erfolgreiche Gestaltung Lewandowsky, Pina; Zeischegg, Francis: Visuelles Gestalten mit dem Computer Koschembar, Frank: Grafik für Nicht-Grafiker  ","tags":null,"title":"Screendesign","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_screendesign/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 1 SWS; Seminar 3 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon\n 15h Vorlesung 45h Seminar 80h Projektarbeit\n 10h Selbststudium  Angestrebte Lernergebnisse Die Studierenden kennen wesentliche Begriffe der visuellen Kommunikation und können diese anwenden um Briefings, Angebote oder Korrekturwünsche im Design-Kontext zu verstehen oder zu verfassen.\nDie Studierenden können Gestaltungslösungen und -kontexte analysieren, argumentieren, diskutieren, dokumentieren und bewerten, um eigene Lösungen innerhalb eines Gestaltungskontextes generieren zu können.\nDie Studierenden können in einem gegebenen Gestaltungskontext, unter Berücksichtigung von Gestaltungsregeln (Raster, Layout, Typographie, etc.), eigene Gestaltungslösungen entwickeln, systematisch variieren und argumentieren um gegebene funktionale und/oder kommunikative Ziele zu adressieren.\nInhalt Vorlesung  Design Basics Axis Map \u0026amp; Semantisches Differential Kommunikationsmodelle Visuelle Wahrnehmung Benutzerziele Corporate Identity Orientierung, Hierarchisierung, Reduktion Räumlichkeit Gestaltgesetze Farbe, Kontraste Typographie, Textsatz Proportion Ordnung, visuelle Struktur, Flow \u0026amp; Transistion Gestaltungsziele, Gestaltungsprozess  Seminar  Designprojekte strukturieren Layoutentwicklung mit Wireframes Layoutentwicklung für verschiedene Endgeräte Flow \u0026amp; Transition Typographie \u0026amp; Textsatz Designkonzepte analysieren \u0026amp; bewerten Variantenbildung Modularisierung, Interface Inventar aufbauen \u0026amp; visualisieren  Studien-/Prüfungsleistungen Projekt und Projektpräsentationsprüfung.\nMedienformen Beamergestützte Vorträge, Rechnergestützte Workshops\nLiteratur  Stapelkamp, Torsten: Informationsvisualisierung Joachim Böhringer, Peter Bühler \u0026amp; Patrick Schlaich: Kompendium der Mediengestaltung - Konzeption und Gestaltung für Digital- und Printmedien Stapelkamp, Torsten: Screen- und Interfacedesign Max Bollwage: Typografie kompakt Kerstin Alexander: Kompendium der visuellen Information und Kommunikation Maeda, John:Simplicity!: Die zehn Gesetze der Einfachheit Lidwell, William; Holden, Kristina; Butler, Jill: Design: Die 100 Prinzipien für erfolgreiche Gestaltung Lewandowsky, Pina; Zeischegg, Francis: Visuelles Gestalten mit dem Computer Koschembar, Frank: Grafik für Nicht-Grafiker  ","tags":null,"title":"Screendesign","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_screendesign/"},{"categories":null,"content":"","tags":null,"title":"Sebastian Leuer","uri":"https://www.medieninformatik.th-koeln.de/autoren/sebastian-leuer/"},{"categories":null,"content":" Kurzbeschreibung In der Vertiefung „Social Computing” werden die Wechselwirkungen zwischen Gesellschaft und Informatik in den Mittelpunkt gestellt. Rechnersysteme und Netzwerke werden von Menschen intentional gestaltet, ausgerichtet an gesellschaftlichen Normen, Prozessen und Bedürfnissen. Gleichzeitig beeinflussen IT-Systeme diese gesellschaftlichen Normen und verändern Prozesse in allen Lebensbereichen. Die verantwortungsbewusste Konzeption und Realisierung von soziotechnischen Systemen (z.B. Social Software, Online Communities, e-Health, e-Government und e-Learning Angebote) sowie die empirische Evaluation existierender Systeme sind zentrale Ziele. Lösungen sollen unter ganzheitlichen Gesichtspunkten entwickelt werden. Verschiedene Wertvorstellungen und Interessen unterschiedlicher Stakeholder müssen identifiziert und berücksichtig werden.\nDas Modul verbindet daher Theorien, Modelle und Methodik der Human- und Sozialwissenschaften mit anwendungsorientierter Informatik.\nLehrform/SWS 16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\nLehrveranstaltungen  Soziotechnische Systeme Empirische Forschungsmethoden Gamification Social Computing Projekt  Arbeitsaufwand 600h Gesamtaufwand\nSoziotechnische Systeme 50h Vorlesung, Seminar; 100h Selbstlernphase\nEmpirische Forschungsmethoden 50h Vorlesung, Seminar; 100h Selbstlernphase\nGamification 50h Vorlesung, Seminar; 100h Selbstlernphase\nSocial Computing Projekt 150h Projekt\nAngestrebte Lernergebnisse Studierende sollen in der Lage sein, computergestützte Systeme nach ethischen, politischen, sozialen und psychologischen Kriterien zu bewerten, zu planen und umsetzen zu können. Ziel ist es, soziale Innovation durch digitale Anwendungen entstehen zu lassen. Neben den empirischen Methoden werden Designmethoden vermittelt, sowohl auf der konzeptionellen als auch auf der softwaretechnischen Implementierungsebene, um robuste, sichere und flexible Systeme zu gestalten.\nSoziotechnische Systeme Die Studierenden sollen das komplexe Wechselspiel zwischen informationstechnischen Systemen und gesellschaftlichen Normen und Prozessen verstehen, analysieren und einordnen können. Sie sollen in der Lage sein, Systeme nach ethischen, psychologischen und soziologischen Kriterien zu gestalten und die Auswirkungen einschätzen zu können. Die grundlegenden Modelle der verschiedenen Disziplinen sollen bekannt und verstanden werden.\nEmpirische Forschungsmethoden Die Studierenden sollen die unterschiedlichen Herangehensweisen quantitativer und qualitativer Forschungsmethoden verstehen. Darüber hinaus sollen ausgewählte quantitative und qualitative Methoden angewendet werden können. Die Studierenden sollen in der Lage sein, einfache Forschungsdesigns zu entwickeln und nach wissenschaftlichen Standards durchzuführen.\nGamification Die Studierenden sollen in der Lage sein, die Möglichkeiten und Grenzen des Gamification-Ansatzes, sowohl für die analoge als auch die digitale Welt, einordnen zu können. Die verschiedenen Stufen der Gamification sollen verstanden und die Maßnahmen in Gestaltungsprozessen eingesetzt werden. Die Studierenden sollen die psychologischen Grundlagen verstehen und die gesellschaftlichen Implikationen bewerten können. Die Analyse von Regeln und Prozessen und daraus abgeleitete Gamification-Maßnahmen sowie die Entwicklung von Serious Games sollen praktisch umgesetzt werden, z.B. für Lernanwendungen, Online-Communities oder soziale Dienste.\nInhalt Soziotechnische Systeme  Modelle der Sozioinformatik E-Learning Gestaltungsprinzipien für soziotechnische Systeme Technikgenese und Ko-Evolution Computerethische Grundlagen Psychologische Grundlagen Soziologische Grundlagen Digitale Technologien für soziale Dienste Digitale Technologien in Organisationen Digitale Technologien in der Gesellschaft E-Goverment  Empirische Forschungsmethoden  Wissenschaftstheoretische Grundlagen Induktion, Deduktion, Abduktion Unterschied zwischen quantitativer und qualitativer Forschung Interviews gestalten, durchführen und auswerten Beobachtungsmethoden Ethnographische Methoden Hypothesengewinnung und Theoriebildung Experimental-Designs Statistische Verfahren für quantitative Forschung Aussagekraft der Ergebnisse (statistische Signifikanz, interne und externe Valididät)  Gamification  Grundelemente der Gamification Stufen der Gamification Ludifikation Historische Grundlagen Psychologische Grundlagen Gesellschaftliche Einordnung Einsatzgebiete verstehen und einordnen Planung und Realisierung von Gamification Gestaltungregeln Serious Games  Studien-/Prüfungsleistungen Projektarbeit mit Projektpräsentationsprüfung und Fachgespräch, sowie schriftliche Ausarbeitung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Screencasts und Handouts Beispielmedien Arbeit im Innovationsraum mit digitalen Whiteboards, Spiel-Arcarde, Tablets und Gestaltungsmaterialien  Literatur  DeKoven, B., \u0026amp; MIT Press. (2013). The well-played game: A player\u0026rsquo;s philosophy. Cambridge: The MIT Press. Döring, N. \u0026amp; Bortz, J. (2015). Forschungsmethoden und Evaluation: Für Human- und Sozialwissenschaftler. Berlin [u.a.]: Springer. Flick, U. (2011). Qualitative Sozialforschung: Eine Einführung. Reinbek bei Hamburg: Rowohlt-Taschenbuch-Verl. Fullerton, T., Swain, C., \u0026amp; Hoffman, S. (2008). Game design workshop: A playcentric approach to creating innovative games. Amsterdam: Elsevier Morgan Kaufmann. Kienle, A., Kunau, G. (2014). Informatik und Gesellschaft. Eine sozio-technische Perspektive. München: Oldenbourg Wissenschaftsverlag. Koster, R. (2013). Theory of Fun for Game Design. Sebastopol: O\u0026rsquo;Reilly. Popper, K. R. (1972). The logic of scientific discovery. London: Hutchinson. Salen, K., \u0026amp; Zimmerman, E. (2007). Rules of play: Game design fundamentals. Cambridge, Mass. [u.a.: The MIT Press. Schnädelbach, H. (2002). Erkenntnistheorie zur Einführung. Zur Einführung, 268. Hamburg: Junius. Westermann, R. (2000). Wissenschaftstheorie und Experimentalmethodik: Ein Lehrbuch zur psychologischen Methodenlehre. Göttingen [u.a.]: Hogrefe, Verl. für Psychologie. Zweig, K. A., In Neuser, W., In Pipek, V., In Rohde, M., \u0026amp; In Scholtes, I. (2014). Socioinformatics: The social impact of interactions between humans and IT.  ","tags":null,"title":"Social Computing","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_vertiefung_socialcomputing/"},{"categories":null,"content":" Kurzbeschreibung In der Vertiefung „Social Computing” werden die Wechselwirkungen zwischen Gesellschaft und Informatik in den Mittelpunkt gestellt. Rechnersysteme und Netzwerke werden von Menschen intentional gestaltet, ausgerichtet an gesellschaftlichen Normen, Prozessen und Bedürfnissen. Gleichzeitig beeinflussen IT-Systeme diese gesellschaftlichen Normen und verändern Prozesse in allen Lebensbereichen. Die verantwortungsbewusste Konzeption und Realisierung von soziotechnischen Systemen (z.B. Social Software, Online Communities, e-Health, e-Government und e-Learning Angebote) sowie die empirische Evaluation existierender Systeme sind zentrale Ziele. Lösungen sollen unter ganzheitlichen Gesichtspunkten entwickelt werden. Verschiedene Wertvorstellungen und Interessen unterschiedlicher Stakeholder müssen identifiziert und berücksichtig werden.\nDas Modul verbindet daher Theorien, Modelle und Methodik der Human- und Sozialwissenschaften mit anwendungsorientierter Informatik.\nLehrform/SWS 16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\nLehrveranstaltungen  Soziotechnische Systeme Empirische Forschungsmethoden Gamification Social Computing Projekt  Arbeitsaufwand 600h Gesamtaufwand\nSoziotechnische Systeme 50h Vorlesung, Seminar; 100h Selbstlernphase\nEmpirische Forschungsmethoden 50h Vorlesung, Seminar; 100h Selbstlernphase\nGamification 50h Vorlesung, Seminar; 100h Selbstlernphase\nSocial Computing Projekt 150h Projekt\nAngestrebte Lernergebnisse Studierende sollen in der Lage sein, computergestützte Systeme nach ethischen, politischen, sozialen und psychologischen Kriterien zu bewerten, zu planen und umsetzen zu können. Ziel ist es, soziale Innovation durch digitale Anwendungen entstehen zu lassen. Neben den empirischen Methoden werden Designmethoden vermittelt, sowohl auf der konzeptionellen als auch auf der softwaretechnischen Implementierungsebene, um robuste, sichere und flexible Systeme zu gestalten.\nSoziotechnische Systeme Die Studierenden sollen das komplexe Wechselspiel zwischen informationstechnischen Systemen und gesellschaftlichen Normen und Prozessen verstehen, analysieren und einordnen können. Sie sollen in der Lage sein, Systeme nach ethischen, psychologischen und soziologischen Kriterien zu gestalten und die Auswirkungen einschätzen zu können. Die grundlegenden Modelle der verschiedenen Disziplinen sollen bekannt und verstanden werden.\nEmpirische Forschungsmethoden Die Studierenden sollen die unterschiedlichen Herangehensweisen quantitativer und qualitativer Forschungsmethoden verstehen. Darüber hinaus sollen ausgewählte quantitative und qualitative Methoden angewendet werden können. Die Studierenden sollen in der Lage sein, einfache Forschungsdesigns zu entwickeln und nach wissenschaftlichen Standards durchzuführen.\nGamification Die Studierenden sollen in der Lage sein, die Möglichkeiten und Grenzen des Gamification-Ansatzes, sowohl für die analoge als auch die digitale Welt, einordnen zu können. Die verschiedenen Stufen der Gamification sollen verstanden und die Maßnahmen in Gestaltungsprozessen eingesetzt werden. Die Studierenden sollen die psychologischen Grundlagen verstehen und die gesellschaftlichen Implikationen bewerten können. Die Analyse von Regeln und Prozessen und daraus abgeleitete Gamification-Maßnahmen sowie die Entwicklung von Serious Games sollen praktisch umgesetzt werden, z.B. für Lernanwendungen, Online-Communities oder soziale Dienste.\nInhalt Soziotechnische Systeme  Modelle der Sozioinformatik E-Learning Gestaltungsprinzipien für soziotechnische Systeme Technikgenese und Ko-Evolution Computerethische Grundlagen Psychologische Grundlagen Soziologische Grundlagen Digitale Technologien für soziale Dienste Digitale Technologien in Organisationen Digitale Technologien in der Gesellschaft E-Goverment  Empirische Forschungsmethoden  Wissenschaftstheoretische Grundlagen Induktion, Deduktion, Abduktion Unterschied zwischen quantitativer und qualitativer Forschung Interviews gestalten, durchführen und auswerten Beobachtungsmethoden Ethnographische Methoden Hypothesengewinnung und Theoriebildung Experimental-Designs Statistische Verfahren für quantitative Forschung Aussagekraft der Ergebnisse (statistische Signifikanz, interne und externe Valididät)  Gamification  Grundelemente der Gamification Stufen der Gamification Ludifikation Historische Grundlagen Psychologische Grundlagen Gesellschaftliche Einordnung Einsatzgebiete verstehen und einordnen Planung und Realisierung von Gamification Gestaltungregeln Serious Games  Studien-/Prüfungsleistungen Projektarbeit mit Projektpräsentationsprüfung und Fachgespräch, sowie schriftliche Ausarbeitung.\nMedienformen  Beamer-gestützte Vorlesungen (Folien in elektronischer Form) Screencasts und Handouts Beispielmedien Arbeit im Innovationsraum mit digitalen Whiteboards, Spiel-Arcarde, Tablets und Gestaltungsmaterialien  Literatur  DeKoven, B., \u0026amp; MIT Press. (2013). The well-played game: A player\u0026rsquo;s philosophy. Cambridge: The MIT Press. Döring, N. \u0026amp; Bortz, J. (2015). Forschungsmethoden und Evaluation: Für Human- und Sozialwissenschaftler. Berlin [u.a.]: Springer. Flick, U. (2011). Qualitative Sozialforschung: Eine Einführung. Reinbek bei Hamburg: Rowohlt-Taschenbuch-Verl. Fullerton, T., Swain, C., \u0026amp; Hoffman, S. (2008). Game design workshop: A playcentric approach to creating innovative games. Amsterdam: Elsevier Morgan Kaufmann. Kienle, A., Kunau, G. (2014). Informatik und Gesellschaft. Eine sozio-technische Perspektive. München: Oldenbourg Wissenschaftsverlag. Koster, R. (2013). Theory of Fun for Game Design. Sebastopol: O\u0026rsquo;Reilly. Popper, K. R. (1972). The logic of scientific discovery. London: Hutchinson. Salen, K., \u0026amp; Zimmerman, E. (2007). Rules of play: Game design fundamentals. Cambridge, Mass. [u.a.: The MIT Press. Schnädelbach, H. (2002). Erkenntnistheorie zur Einführung. Zur Einführung, 268. Hamburg: Junius. Westermann, R. (2000). Wissenschaftstheorie und Experimentalmethodik: Ein Lehrbuch zur psychologischen Methodenlehre. Göttingen [u.a.]: Hogrefe, Verl. für Psychologie. Zweig, K. A., In Neuser, W., In Pipek, V., In Rohde, M., \u0026amp; In Scholtes, I. (2014). Socioinformatics: The social impact of interactions between humans and IT.  ","tags":null,"title":"Social Computing","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_vertiefung_socialcomputing/"},{"categories":null,"content":" Kurzbeschreibung Prinzipien, Methoden und Techniken der modellbasierten methodischen objektorientierten Softwareentwicklung\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nmax. 15 Studierende/Praktikumsgruppe;\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen befähigt werden, - zu abstrahieren, Modelle zu entwickeln, Unterschiede zwischen Modell und Realität zu beurteilen sowie - gegebene Modelle zu interpretieren, zu analysieren und zu bewerten, - um komplexe Systeme zu analysieren, im Team zu entwerfen und dabei im Rahmen methodischer Vorgehensweisen Techniken und Werkzeuge der objektorientierten Modellierung und Softwareentwicklung in den Aktivitäten Anforderungsermittlung, Softwarespezifizierung und Entwurf einzusetzen.\nInhalt Die Vorlesung skizziert zunächst das Gesamtgebiet Softwaretechnik und behandelt dann ausschließlich grundlegende „Informatikaspekte” der objektorientierten Softwareentwicklung. Als wesentliche Grundlage werden die wichtigsten Elemente der Unified Modelling Language (UML) vorgestellt und anhand kleinerer Beispiele erläutert. Danach werden typische Aktivitäten der Softwareentwicklung besprochen, wobei die UML als Modellierungssprache benutzt wird. Im Praktikum werden die Anwendung der Modellierungselemente und die Durchführung der Aktivitäten in Gruppenarbeit vertieft.\nDas Modul gliedert sich in folgende Inhalte: - (10%) Softwareentwicklung im Überblick (Komplexität großer Software, Kernaktivitäten und unterstützende Aktivitäten); - (30%) Die Modellierungssprache UML (Strukturmodellierung mit Objekt- und Klassendiagrammen, Funktionsmodellierung mit Anwendungsfalldiagrammen, Verhaltensmodellierung mit Sequenz-, Kommunikations- und Zustandsdiagrammen); - (50%) Modellbasierte Softwareentwicklung (Anforderungsermittlung, Softwarespezifizierung und Architekturkonzeption, Entwurfskonzepte und Grobentwurf, Feinentwurf); - (10%) Zusammenfassung und Ausblick (Modellgetriebene Softwareentwicklung);\nStudien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Flipped-Classroom mit Diskussion und Übungen als Einzel- und Kleinstgrupen e-Vorlesungen (Video-Clips und Folien in elektronischer Form zum Selbststudium); Vertiefende Materialien in elektronischer Form (z.B. SWEBOK) Praktika in Kleingruppen, um die erlernten Modelle und Methoden einzuüben und zu vertiefen (Seminarraum, Rechnerlabor); In den Praktika werden Modellierungs- und Entwicklungswerkzeuge eingesetzt.  Literatur  Helmut Balzert: Lehrbuch der Software-Technik Bd. I: Basiskonzepte und Requirements Engineering; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2009 Helmut Balzert: Lehrbuch der Software-Technik Bd. II: Entwurf, Implementierung, Installation und Betrieb; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2012 Helmut Balzert: Lehrbuch der Software-Technik Bd. III: Software Management; Spektrum Akademischer Verlag, Heidelberg, 2. Aufl. 2008 Martina Seidl et al.: UML@Classroom; dpunkt.Verlag, Heidelberg, 2012 Unterlagen/Videos: http://www.uml.ac.at/lernen Winter, M.: Methodische objektorientierte Softwareentwicklung. dpunkt.verlag, Heidelberg, 2005; Chris Rupp et al.: UML 2 Glasklar. 4. Aufl., Carl Hanser Verlag, München, 2012 Jochen Ludewig, Horst Lichter: Software Engineering – Grundlagen, Menschen, Prozesse, Techniken. 2. Aufl., dPunkt Verlag, Heidelberg, 2011  ","tags":null,"title":"Softwaretechnik","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_softwaretechnik/"},{"categories":null,"content":" Kurzbeschreibung Prinzipien, Methoden und Techniken der modellbasierten methodischen objektorientierten Softwareentwicklung\nLehrform/SWS 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nmax. 15 Studierende/Praktikumsgruppe;\nArbeitsaufwand Gesamtaufwand 150h, davon\n 36h Vorlesung 36h Praktikum 78h Selbststudium  Angestrebte Lernergebnisse Die Studierenden sollen befähigt werden, - zu abstrahieren, Modelle zu entwickeln, Unterschiede zwischen Modell und Realität zu beurteilen sowie - gegebene Modelle zu interpretieren, zu analysieren und zu bewerten, - um komplexe Systeme zu analysieren, im Team zu entwerfen und dabei im Rahmen methodischer Vorgehensweisen Techniken und Werkzeuge der objektorientierten Modellierung und Softwareentwicklung in den Aktivitäten Anforderungsermittlung, Softwarespezifizierung und Entwurf einzusetzen.\nInhalt Die Vorlesung skizziert zunächst das Gesamtgebiet Softwaretechnik und behandelt dann ausschließlich grundlegende „Informatikaspekte” der objektorientierten Softwareentwicklung. Als wesentliche Grundlage werden die wichtigsten Elemente der Unified Modelling Language (UML) vorgestellt und anhand kleinerer Beispiele erläutert. Danach werden typische Aktivitäten der Softwareentwicklung besprochen, wobei die UML als Modellierungssprache benutzt wird. Im Praktikum werden die Anwendung der Modellierungselemente und die Durchführung der Aktivitäten in Gruppenarbeit vertieft.\nDas Modul gliedert sich in folgende Inhalte: - (10%) Softwareentwicklung im Überblick (Komplexität großer Software, Kernaktivitäten und unterstützende Aktivitäten); - (30%) Die Modellierungssprache UML (Strukturmodellierung mit Objekt- und Klassendiagrammen, Funktionsmodellierung mit Anwendungsfalldiagrammen, Verhaltensmodellierung mit Sequenz-, Kommunikations- und Zustandsdiagrammen); - (50%) Modellbasierte Softwareentwicklung (Anforderungsermittlung, Softwarespezifizierung und Architekturkonzeption, Entwurfskonzepte und Grobentwurf, Feinentwurf); - (10%) Zusammenfassung und Ausblick (Modellgetriebene Softwareentwicklung);\nStudien-/Prüfungsleistungen Schriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nMedienformen  Flipped-Classroom mit Diskussion und Übungen als Einzel- und Kleinstgrupen e-Vorlesungen (Video-Clips und Folien in elektronischer Form zum Selbststudium); Vertiefende Materialien in elektronischer Form (z.B. SWEBOK) Praktika in Kleingruppen, um die erlernten Modelle und Methoden einzuüben und zu vertiefen (Seminarraum, Rechnerlabor); In den Praktika werden Modellierungs- und Entwicklungswerkzeuge eingesetzt.  Literatur  Helmut Balzert: Lehrbuch der Software-Technik Bd. I: Basiskonzepte und Requirements Engineering; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2009 Helmut Balzert: Lehrbuch der Software-Technik Bd. II: Entwurf, Implementierung, Installation und Betrieb; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2012 Helmut Balzert: Lehrbuch der Software-Technik Bd. III: Software Management; Spektrum Akademischer Verlag, Heidelberg, 2. Aufl. 2008 Martina Seidl et al.: UML@Classroom; dpunkt.Verlag, Heidelberg, 2012 Unterlagen/Videos: http://www.uml.ac.at/lernen Winter, M.: Methodische objektorientierte Softwareentwicklung. dpunkt.verlag, Heidelberg, 2005; Chris Rupp et al.: UML 2 Glasklar. 4. Aufl., Carl Hanser Verlag, München, 2012 Jochen Ludewig, Horst Lichter: Software Engineering – Grundlagen, Menschen, Prozesse, Techniken. 2. Aufl., dPunkt Verlag, Heidelberg, 2011  ","tags":null,"title":"Softwaretechnik","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_softwaretechnik/"},{"categories":null,"content":"","tags":null,"title":"Sophie Marleen Stelzer","uri":"https://www.medieninformatik.th-koeln.de/autoren/sophie-marleen-stelzer/"},{"categories":null,"content":"","tags":null,"title":"Sven Hendrik Schebitz","uri":"https://www.medieninformatik.th-koeln.de/autoren/sven-hendrik-schebitz/"},{"categories":null,"content":"","tags":null,"title":"Tags","uri":"https://www.medieninformatik.th-koeln.de/tags/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Übung - 78h Selbstlernphase\nAngestrebte Lernergebnisse  Grundsätzliches Ziel des Kurses ist eine Einführung in die Begriffe, Methoden, Modelle und Arbeitsweise der Theoretischen Informatik anhand der ausgewählten Teilgebiete. Dabei lernen die Studierenden Probleme und Sachverhalte zu abstrahieren und zu modellieren (etwa logische und algebraische Kalküle, graphentheoretische Notationen, formale Sprachen und Automaten sowie spezielle Kalküle wie Petri-Netze) Die Studierenden erwerben fundierte Kenntnisse der grundlegenden Themengebiete und eine wesentliche Basis und Vorbereitung für Veranstaltungen in höheren Semestern des Studiums. In verschiedenen Grundlagengebieten der Informatik lernen die Studierenden Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können passende Algorithmen entwerfen (Automaten, Turing Maschinen, Logik). Dabei können Sie bekannte Problemstellungen im Anwendungskontext erkennen und sind mit den zugehörigen Lösungsmustern vertraut (Modellierung mittels Automaten, Petri-Netzen, Boolescher Algebra, etc.). Aufgaben zu den Lehrinhalten (s.u.) werden in kleinen Gruppen (Teamarbeit) selbständig gelöst. Die Lösungen sollen in den Übungsstunden vorgetragen und der Lösungsweg den Kommilitonen hierbei erläutert werden.  Inhalt  Mengen Relationen Graphen Zahlensysteme Zahlendarstellung Numerische Aspekte Codierung, Informationstheorie Boolesche Algebra Schaltnetze und Schaltwerke Aussagenlogik Prädikatenlogik  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Hoffmann, D. (2011): Theoretische Informatik, 2. Auflage Hedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München. Kelly, J. ( 2003 ): Logik. Pearson Studium, München. Ehrig, H. et al. (1999): Mathematisch-strukturelle Grundlagen der Informatik. Springer, Heidelberg. Beuth, K. (1992): Digitaltechnik. 9.Aufl.Vogel, Würzburg.  ","tags":null,"title":"Theoretische Informatik 1","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_theoretischeinformatik1/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Übung - 78h Selbstlernphase\nAngestrebte Lernergebnisse  Grundsätzliches Ziel des Kurses ist eine Einführung in die Begriffe, Methoden, Modelle und Arbeitsweise der Theoretischen Informatik anhand der ausgewählten Teilgebiete. Dabei lernen die Studierenden Probleme und Sachverhalte zu abstrahieren und zu modellieren (etwa logische und algebraische Kalküle, graphentheoretische Notationen, formale Sprachen und Automaten sowie spezielle Kalküle wie Petri-Netze) Die Studierenden erwerben fundierte Kenntnisse der grundlegenden Themengebiete und eine wesentliche Basis und Vorbereitung für Veranstaltungen in höheren Semestern des Studiums. In verschiedenen Grundlagengebieten der Informatik lernen die Studierenden Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können passende Algorithmen entwerfen (Automaten, Turing Maschinen, Logik). Dabei können Sie bekannte Problemstellungen im Anwendungskontext erkennen und sind mit den zugehörigen Lösungsmustern vertraut (Modellierung mittels Automaten, Petri-Netzen, Boolescher Algebra, etc.). Aufgaben zu den Lehrinhalten (s.u.) werden in kleinen Gruppen (Teamarbeit) selbständig gelöst. Die Lösungen sollen in den Übungsstunden vorgetragen und der Lösungsweg den Kommilitonen hierbei erläutert werden.  Inhalt  Mengen Relationen Graphen Zahlensysteme Zahlendarstellung Numerische Aspekte Codierung, Informationstheorie Boolesche Algebra Schaltnetze und Schaltwerke Aussagenlogik Prädikatenlogik  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Hoffmann, D. (2011): Theoretische Informatik, 2. Auflage Hedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München. Kelly, J. ( 2003 ): Logik. Pearson Studium, München. Ehrig, H. et al. (1999): Mathematisch-strukturelle Grundlagen der Informatik. Springer, Heidelberg. Beuth, K. (1992): Digitaltechnik. 9.Aufl.Vogel, Würzburg.  ","tags":null,"title":"Theoretische Informatik 1","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_theoretischeinformatik1/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Übung - 78h Selbstlernphase\nAngestrebte Lernergebnisse siehe Theoretische Informatik 1.\nInhalt  Reguläre (Typ-3) Sprachen: Endliche Automaten, Reguläre Ausdrücke; Typ3-Grammatiken, Syntaxdiagramme; Chomsky-Hierarchie Modellierung sequentieller und paralleler (Ausgabe-) Prozesse: Endliche Maschinen, Berechnungen; Automatennetze, Petri-Netze, Zelluläre Automaten Kontextfreie (Typ-2) Sprachen: Kontextfreie Grammatiken, Chomsky- und Greibach-Normalform; Kellerautomaten; Anwendungen (Ableitungs- und Syntaxbäume, Syntax von Programmiersprachen, Backus-Naur-Form) Kontextsensitive (Typ-1) und rekursiv aufzählende (Typ-0) Sprachen: Grammatiken, Monotonie, Normalform; Turingautomaten; Einführung in die Begriffe: Berechenbarkeit, Entscheidbarkeit und Komplexität  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Hoffmann, D. (2011): Theoretische Informatik, 2. Auflage Vossen, G., Witt K. (2004): Grundlagen der Theoretischen Informatik mit Anwendungen. 3. Aufl. Vieweg \u0026amp; Sohn, Braunschweig. Hedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München. Asteroth, A., Baier, C. (2002) Theoretische Informatik. Pearson Studium München Hopcroft, J. E. et al. (2002): Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Pearson Studium, München. Schöning, U. (1997): Theoretische Informatik - kurzgefaßt. 3. Aufl. Spektrum Akademischer Verlag, Heidelberg.  ","tags":null,"title":"Theoretische Informatik 2","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_theoretischeinformatik2/"},{"categories":null,"content":" Lehrform/SWS 4 SWS: Vorlesung 2 SWS; Übung 2 SWS\nArbeitsaufwand Gesamtaufwand 150h, davon - 36h Vorlesung - 36h Übung - 78h Selbstlernphase\nAngestrebte Lernergebnisse siehe Theoretische Informatik 1.\nInhalt  Reguläre (Typ-3) Sprachen: Endliche Automaten, Reguläre Ausdrücke; Typ3-Grammatiken, Syntaxdiagramme; Chomsky-Hierarchie Modellierung sequentieller und paralleler (Ausgabe-) Prozesse: Endliche Maschinen, Berechnungen; Automatennetze, Petri-Netze, Zelluläre Automaten Kontextfreie (Typ-2) Sprachen: Kontextfreie Grammatiken, Chomsky- und Greibach-Normalform; Kellerautomaten; Anwendungen (Ableitungs- und Syntaxbäume, Syntax von Programmiersprachen, Backus-Naur-Form) Kontextsensitive (Typ-1) und rekursiv aufzählende (Typ-0) Sprachen: Grammatiken, Monotonie, Normalform; Turingautomaten; Einführung in die Begriffe: Berechenbarkeit, Entscheidbarkeit und Komplexität  Studien-/Prüfungsleistungen Schriftliche Prüfung.\nLiteratur  Hoffmann, D. (2011): Theoretische Informatik, 2. Auflage Vossen, G., Witt K. (2004): Grundlagen der Theoretischen Informatik mit Anwendungen. 3. Aufl. Vieweg \u0026amp; Sohn, Braunschweig. Hedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München. Asteroth, A., Baier, C. (2002) Theoretische Informatik. Pearson Studium München Hopcroft, J. E. et al. (2002): Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Pearson Studium, München. Schöning, U. (1997): Theoretische Informatik - kurzgefaßt. 3. Aufl. Spektrum Akademischer Verlag, Heidelberg.  ","tags":null,"title":"Theoretische Informatik 2","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_theoretischeinformatik2/"},{"categories":null,"content":"","tags":null,"title":"Thomas Friesen","uri":"https://www.medieninformatik.th-koeln.de/autoren/thomas-friesen/"},{"categories":null,"content":"","tags":null,"title":"Todos","uri":"https://www.medieninformatik.th-koeln.de/todos/"},{"categories":null,"content":" Kurzbeschreibung Das Modul „Visual Computing” im Medieninformatik Bachelor beschäftigt sich mit der Erzeugung und Verarbeitung visueller Informationen, sowohl in realen als auch computergenerierten Szenarien.\nZiel dieses Moduls ist es den Studierenden eine fachlich fundierte, praktische, sowie theoretische Grundlage im Umgang mit audiovisuellen Medien zu geben. Dabei wird sowohl auf die technische Seite (technischen Grundlagen der Video- und Fernsehtechnik) eingegangen als auch auf die algorithmische (computergenerierte Bildsynthese, Gameentwicklung).\nDas Modul ist aus vier Teilbereichen aufgebaut, von denen zwei verpflichtend sind und zwei weitere aus einem Wahlkatalog gewählt werden können. Die beiden Pflichtkurse schaffen ein Fundament, was es erlaubt innerhalb der beiden verbliebenen Kurse, im Gesamtumfang von 10 CP, tiefer in die jeweilige Spezialisierung einzutauchen. Dabei gibt es grundsätzlich die Möglichkeit sich in Richtung Fernseh- und Videoproduktion oder Gameentwicklung zu vertiefen. Die Kurse werden nach Verfügbarkeit angeboten.\nDie Kurse sind in der Regel projektbasiert aufgebaut, so dass sowohl theoretischer Hintergrund als auch praxisnahes Wissen vermittelt wird und zur Anwendung kommt.\nLehrform/SWS Vorlesung, Praktikum / Projekt, Übung mit kursabhängigen Schwerpunkten 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nLehrveranstaltungen Pflichtmovule im Gesamtumfang von 10CP  Audiovisuelle Medientechnik Computergrafik und Animation  Aus den folgenden Wahlkatalogen sind zwei weitere Kurse zu jeweils 5CP zu belegen, welche nach Verfügbarkeit angeboten werden.\nWahlkatalog Film/Video  Audiovisuelles Medienprojekt 2 Visuelle Effekte und Animation  Wahlkatalog Game Development  Crossplatform Game Development mit Unity3D Prozedurale Generierung virtueller Welten  Arbeitsaufwand 600h Gesamtaufwand\nAudiovisuelle Medientechnik 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nComputergrafik und Animation 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nAudiovisuelles Medienprojekt 2 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nVisuelle Effekte und Animation 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nCrossplatform Game Development mit Unity3D 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nProzedurale Generierung virtueller Welten 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nAngestrebte Lernergebnisse Je nach gewählten Vertiefungskursen entwickeln die Studierenden Fähigkeiten zur selbstverantwortlichen Durchführung von Projekten im Bereich Gamedevelopment, dreidimensionaler Darstellung virtueller Szenen, Film- und Fernsehtechnik, sowie Visueller Effekte.\nAudiovisuelle Medientechnik Die Studierenden sollen durch dieses Modul dazu befähigt werden, auf Basis der technischen Grundlagen der Video- und Fernsehtechnik weitergehende Fragestellungen selbstständig zu erarbeiten und sich so auch zukünftige technische Entwicklungen autonom erschließen zu können. Neben der Entwicklung und Förderung dieser Fachkompetenz ist die Initiierung der Methodenkompetenz eine wichtige Säule des Vorlesungsmoduls. Unter Methodenkompetenz ist hier die Selbstorganisation im Sinne von wissenschaftlicher Fragestellung an einen Themenkomplex und ein strukturiertes Vorgehen in der Erarbeitung eines Lösungsansatzes zu verstehen. Ziel ist es, das Wissen aus verschiedenen Bereichen, wie Kerninformatik, Internet- und Webtechnologien und benachbarten Wissenschaften mit der in diesem Modul unterrichteten Medientechnologien zu kombinieren und in die Medienproduktion zu integrieren. Gerade der Umgang mit Technologien und Methoden aus der Film- und Fernsehproduktion erweitert den Erfahrungshorizont der Studierenden über den bekannten Themenbereich der Kerninformatik hinaus und legt ihnen eine Einarbeitung in informatikfremde Sachverhalte und technologische Problemstellungen und deren Lösungsmethoden nahe. Pragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern audiovisueller Medien die Entwicklung und den Einsatz digitaler Medientechnik zu beraten, zu planen, durchzuführen oder zu verantworten.\nComputergrafik und Animation Die Grundlagen der zwei- und insbesondere der dreidimensionalen Computergraphik und Animation stellen ein hervorragendes Paradigma zur Vermittlung zentraler Inhalte und Kompetenzen der Medieninformatik dar.\nDen Studierenden wird deutlich, wie der Bogen von den abstrakten, geometrischen und algorithmischen Fakten zu den pragmatischen Gegebenheiten der Computergraphik-Hardware gespannt ist. Sie erkennen die Zusammenhänge zwischen Grundlagenvorlesungen (Mathematik, Algorithmen, Programmierung) und der Gestaltung von Schnittstellen und Oberflächen und werden so für die jeweiligen Inhalte zusätzlich motiviert. Dabei lernen Sie, im Kontext der Computergrafik, Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können Algorithmen entwerfen, verifizieren und bzgl. ihres Ressourcenbedarfs bewerten. Sie erwerben die Fähigkeit, aktuelle technologische Entwicklungen im Medieninformatik-Kontext zu bewerten und Trends einzuordnen.\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über Architektur und Programmierung moderner Graphikhardware, sowie deren Anwendung in konkreten Problemstellungen und Anwendungskontexten. Am Beispiel von OpenGL und der Rendering-Pipeline lernen die Studierenden Problemstellungen im Anwendungskontext zu erkennen und sind mit den zugehörigen Lösungsmustern durch praktische Programmierung vertraut.\nDas erlernte Wissen und die erlernten Kenntnisse in der Soft- und Grafikhardware-Architektur ermöglicht es erfolgreichen Teilnehmern, anschließend Echtzeit-Visualisierungen mit OpenGL zu implementieren und somit mit einer modernen, plattformunabhängigen API umzugehen, die flexibel an bestehende Anforderungen angepasst werden kann. Zudem haben Sie die Fähigkeit hochparallele Algorithmen auf der Graphikkarte zu entwerfen und auszuführen.\nDabei beherrschen die Studierenden nach Abschluss des Moduls die Fähigkeit abstrakte Szenen- und Objektbeschreibungen zu erstellen und darzustellen, sowie sich in vorhandenen Quelltext einzuarbeiten und diesen sinnvoll weiter zu entwickeln. Die Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergraphik zu beherrschen. Die Studierenden können ihr erworbenes Können und Wissen zur Implementierung einer eigenen Game/Visualisierungs-Engine einsetzen. Dies zeigen Sie durch Umsetzung eines eigenen Projektes in Kleingruppen, wo sie zusätzlich lernen mündlich überzeugend zu präsentieren, abweichende Positionen zu erkennen und in eine sach- und interessengerechte Lösung zu integrieren. Sie zeigen dadurch, dass Sie in der Lage sind sich selbstständig neues Wissen anzueigenen und zu erkennen, welches Wissen relevant ist, können mediengestalterische Grundkompetenzen anwenden und besitzen aktive Vokabularien zur Beschreibung und Realisierung angemessener Konzeptionen. Zudem können sie die Realisationen bezüglich der Zielsetzungen kritisch diskutieren.\nAudiovisuelles Medienprojekt 2 Die praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team über Themenbereiche dieses Faches und die Präsentation von eigenen Projekten und Untersuchungsergebnissen sind die Lernziele des Moduls Audiovisuelles Medienprojekt 2. Neben dieser formulierten Fachkompetenz, Methodenkompetenz und Kommunikationskompetenz stehen gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus der Ausbildung in diesem Modul.\nDie Studierenden kennen über die grundlegenden Erzählformen audiovisueller Medien hinaus spezielle Formate wie Spielfilm, Imagefilm und Studioproduktion und haben dabei folgende Fertigkeiten: Sie können eigene audiovisuelle Erzählformen auf der Basis dieser Erzählmuster entwickeln und sind befähigt zur Analyse, zur Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\nPragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content zu beraten, zu planen, durchzuführen oder zu verantworten.\nVisuelle Effekte und Animation Die Studierenden kennen die grundlegenden Produktionsschritte und Abläufe einer Film- und TV-Produktion mit visuellen Effekten sowie die in diesem Zusammenhang eingesetzten Softwaretools.\nSie haben die Fertigkeit, spezifische Fragestellungen der Umsetzung visueller, computerbasierter Effekte und der damit zusammenhängenden Bildbearbeitung zu bearbeiten und fallbezogene individuelle Lösungen zu entwickeln.\nUnter Entwicklungs- und Methodenkompetenz auf dem Gebiet der Visual Effects ist die Fähigkeit zu verstehen, eigene und für den jeweiligen Anwendungsfall auch eventuell neue Lösungsansätze zu entwickeln, bei denen die unterschiedlichen Methoden der Visual Effects-Ausführung und -Bearbeitung zum Einsatz kommen. Nachdem die Planung, Durchführung und die Bearbeitung von Projekten auf dem Gebiet der Film- und TV-Produktion mit visuellen Effekten in der Regel im kleinen Team erfolgt sind gerade die Softskills der Teamkompetenz und der Organisationskompetenz von großer Wichtigkeit in diesem Modul.\nBerufsbilder, die von diesem Modul angesprochen werden, sind zum einen in der Visual-Effects-spezifischen Softwareentwicklung, als auch im Anwendungskontext zu finden: So zum Beispiel in der Planung, Organisation, Durchführung und Verantwortung von VFX-Projekten.\nCross-Platform Game Development mit Unity 3D Die Studierenden kennen wesentliche Konzepte und Technologien des Game Developments mit Unity 3D und können diese anwenden, um eigenständig im Team Interaktive Applikationen zu konzipieren, realisieren und optimieren.\nDie Studierenden kennen die grundlegenden Möglichkeiten von Game Engine Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts die Umsetzungsmöglichkeiten und Vorgehen zu evaluieren und entsprechende Strategien zu entwickeln, sowie kritisch die benötigten Bibliotheken und Komponenten auszuwählen und diese Wahl zu begründen.\nDie Kursteilnehmer sammeln im Rahmen ihres eigenständig entwickelten Projektes Erfahrungen in der Entwicklung von Kleinprojekten bis mindestens zum Grad einer spielbaren Alphaversion oder eines Prototypen.\nProzedurale Generierung virtueller Welten Die Studierenden haben die Möglichkeit ihr Wissen über 3D-Computergrafik, 3D-Geometrie und Programmierung zu vertiefen und praktisch anzuwenden. Durch den Einsatz von Unity als Crossplatform-Game-Development-Tool können die Studierenden ihre Erfahrung mit einer aktuellen Game-Engine und der dazugehörigen Entwicklungsumgebung vertiefen und werden befähigt diese um Funktionalitäten zu erweitern.\nDie Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergrafik mit der Game-Engine Unity zu beherrschen. Das Modul ist daher geeignet das Wissen aus den Modulen „Computergrafik und Animation“, sowie ”Cross-Platform Game Development mit Unity 3D” zu vertiefen und zu erweitern.\nKonzepte aus der 3D-Computergrafik und der prozeduralen Generierung werden in diesem sehr praktisch ausgelegten Kurs implementiert und die relevanten Grundlagen vermittelt, die es den Studierenden ermöglichen eigenständig Anforderungen für Projekte mit prozeduralen Techniken zu entwickeln und diese praktisch umzusetzen und kritisch zu evaluieren.\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über verschiedene Techniken der prozeduralen Generierung zur Erstellung von 3D Content für Visualisierungen, Simulationen und Spiele, sowie die Fähigkeiten diese einzusetzen, sowie selbst zu entwickeln.\nInhalt Audiovisuelle Medientechnik  Grundlagen der Fernsehtechnik Digitale Fernsehtechnik HD-Technik Videodatenreduktion Bildwandler Das optische System der Videokamera Signalverarbeitung in der Videokamera Signalaufzeichnung Elektroakustik Bildwiedergabesysteme Lichttechnik und Beleuchtung  Computergrafik und Animation  Graphikhardware, OpenGL Transformationen und homogene Koordinaten Interpolation Kameramodelle Clipping Shaderprogrammierung Animation Texturierung Fortgeschrittene Algorithmen (Schatten, Reflexionen, Bump-, Normal-, Parallax-, Relief-Mapping, Globale Beleuchtung, Deferred Shading) Perzeption Grundlagen des Ray Tracings  Audiovisuelles Medienprojekt 2  Vertiefung der Video- und Audioaufnahmetechnik Verschiedene Dramaturgiemodelle Drehbuch, Auflösung, Storyboard Schnitt und Montage Liveproduktion im Studio Medienproduktion in den Formaten Spielfilm, Imagefilm und Studioproduktion  Visuelle Effekte und Animation  Storyboard Kalkulation Produktionabläufe Keyverfahren mit Green- und Bluescreen Compositing Umgang mit Bild-/Videobearbeitungswerkzeugen  Cross-Platform Game Development mit Unity 3D  Aufbau einer Game Engine Gameobjects Game Physics Interaktion Spielmechaniken  Prozedurale Generierung virtueller Welten  Einführung in die Game-Engine Unity Primitive und Mesh-Datenstrukturen UV-Mapping und Texturierungstechniken/Materialien Prozedurale Texturgenerierung Parametrisierung von 3D-Modellen Kurven und Flächen Height-Maps L-Systeme und „Turtle“-Grafik-Renderer Triangulations-Algorithmen für Polygone Voxel-Terrain-Generierung Grundlagen 3D-Geometrie Erweiterung des Unity-Editors  Studien-/Prüfungsleistungen Teilprüfungen in den jeweiligen Kursen. Die Benotung ergibt sich als Mittel aus den jeweiligen Teilnoten.\nAudiovisuelle Medientechnik Schriftliche Prüfung.\nComputergrafik und Animation Die erfolgreiche Teilnahme an den Praktika ist Voraussetzung für die Klausur oder mündliche Prüfung\nAudiovisuelles Medienprojekt 2 Projektarbeit\nVisuelle Effekte und Animation Projektarbeit(50%) und schriftliche Ausarbeitung(50%)\nCross-Platform Game Development mit Unity 3D Präsentation und Dokumentation eines eigenständig entwickelten Projekts\nProzedurale Generierung virtueller Welten Die erfolgreiche Teilnahme am Abschlussprojekt (eigenständiges Projekt, auch in Kleingruppen möglich) und Fachgespräch\nMedienformen  Beamer-gestützte Vorlesungen Rechnergestützte Workshops Beispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos Audiovisuelle Aufnahme- und Wiedergabegeräte  Literatur Audiovisuelle Medientechnik  Schmidt Ulrich, Professionelle Videotechnik, Springer-Verlag Berlin Heidelberg New York 2013, ISBN 978-3-642-38992-4 Johannes Webers, Film- und Fernsehtechnik, Franzis Verlag, Poing 2000, ISBN 3-7723-7116-7 Möllering, Slansky, Handbuch der professionellen Videoaufnahme Edition Filmwerkstatt, Essen, 1993, ISBN 3 - 9 802 581 - 3 - 0  Computergrafik und Animation  Peter Shirley, Fundamentals of Computer Graphics, Peters, Wellesley Andrew Woo, et al., OpenGL Programming Guide, Version 4.3, Addison-Wesley, Tomas Akenine-Möller, Eric Haines, und Naty Hoffman, Real-Time Rendering, 3. Ausgabe, Peters, Wellesley Randi J. Rost, John M. Kessenich, Barthold Lichtenbelt, OpenGL Shading Language, 2. Ausgabe, Addison-Wesley Alan Watt, 3D Computer Graphics, Addison-Wesley Frank Nielsen, Visual Computing, Charles River Media, 2005 James Foley, Andries Van Dam, et al., Computer Graphics : Principles and Practice, 2. Ausgabe, Addison-Wesley  Audiovisuelles Medienprojekt 2  James Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717 Syd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X Steven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1 David Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9 Hans Kornacher \u0026amp; Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2 Hans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6 Karel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1 Chris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins Wolfgang Lanzenberger, Michael Müller, Unternehmensfilme drehen: Business Movies im digitalen Zeitalter, ISBN 978-386764367  Visuelle Effekte und Animation  Flückiger Barbara, Visual Effects: Filmbilder aus dem Computer (Zürcher Filmstudien), Schüren Verlag GmbH, 2008, ISBN 978-3894725181 Bertram Sascha, VFX (Praxis Film), UVK, 2005, ISBN 978-3896695154  Cross-Platform Game Development mit Unity 3D  Unity 3D API (https://docs.unity3d.com/ScriptReference/) Unity 3D Manual (https://docs.unity3d.com/Manual/index.html) Unity Tutorials (https://unity3d.com/de/learn/tutorials) Ian Millington, John Funge, Artificial Intelligence For Games, Second Edition, CRC Press, 2009 Mat Buckland, Programming Game AI by Example, Wordware Game Developers Library, 2004 Steve Rabin et al., AI Game Programming Wisdom 1-4, Cengage Learning  Prozedurale Generierung virtueller Welten  Peter Shirley, Steve Marschner, “Fundamentals of Computer Graphics“, CRC Press David Salomon, “Curves and Surfaces for Computer Graphics”, Springer Carsten Seifert, “Spiele entwickeln mit Unity 5”, Hanser Noor Shaker, Julian Togelius, Mark J. Nelson, \u0026ldquo;Procedural Content Generation in Games (Computational Synthesis and Creative Systems)\u0026rdquo;, Springer Ryan Watkins, \u0026ldquo;Procedural Content Generation for Unity Game Development\u0026rdquo;, Packt Publishing Dale Green, \u0026ldquo;Procedural Content Generation for C++ Game Development\u0026rdquo;, Packt Publishing  ","tags":null,"title":"Visual Computing","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_vertiefung-visual-computing/"},{"categories":null,"content":" Kurzbeschreibung Das Modul „Visual Computing” im Medieninformatik Bachelor beschäftigt sich mit der Erzeugung und Verarbeitung visueller Informationen, sowohl in realen als auch computergenerierten Szenarien.\nZiel dieses Moduls ist es den Studierenden eine fachlich fundierte, praktische, sowie theoretische Grundlage im Umgang mit audiovisuellen Medien zu geben. Dabei wird sowohl auf die technische Seite (technischen Grundlagen der Video- und Fernsehtechnik) eingegangen als auch auf die algorithmische (computergenerierte Bildsynthese, Gameentwicklung).\nDas Modul ist aus vier Teilbereichen aufgebaut, von denen zwei verpflichtend sind und zwei weitere aus einem Wahlkatalog gewählt werden können. Die beiden Pflichtkurse schaffen ein Fundament, was es erlaubt innerhalb der beiden verbliebenen Kurse, im Gesamtumfang von 10 CP, tiefer in die jeweilige Spezialisierung einzutauchen. Dabei gibt es grundsätzlich die Möglichkeit sich in Richtung Fernseh- und Videoproduktion oder Gameentwicklung zu vertiefen. Die Kurse werden nach Verfügbarkeit angeboten.\nDie Kurse sind in der Regel projektbasiert aufgebaut, so dass sowohl theoretischer Hintergrund als auch praxisnahes Wissen vermittelt wird und zur Anwendung kommt.\nLehrform/SWS Vorlesung, Praktikum / Projekt, Übung mit kursabhängigen Schwerpunkten 4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\nLehrveranstaltungen Pflichtmovule im Gesamtumfang von 10CP  Audiovisuelle Medientechnik Computergrafik und Animation  Aus den folgenden Wahlkatalogen sind zwei weitere Kurse zu jeweils 5CP zu belegen, welche nach Verfügbarkeit angeboten werden.\nWahlkatalog Film/Video  Audiovisuelles Medienprojekt 2 Visuelle Effekte und Animation  Wahlkatalog Game Development  Crossplatform Game Development mit Unity3D Prozedurale Generierung virtueller Welten  Arbeitsaufwand 600h Gesamtaufwand\nAudiovisuelle Medientechnik 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nComputergrafik und Animation 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nAudiovisuelles Medienprojekt 2 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nVisuelle Effekte und Animation 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nCrossplatform Game Development mit Unity3D 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nProzedurale Generierung virtueller Welten 36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\nAngestrebte Lernergebnisse Je nach gewählten Vertiefungskursen entwickeln die Studierenden Fähigkeiten zur selbstverantwortlichen Durchführung von Projekten im Bereich Gamedevelopment, dreidimensionaler Darstellung virtueller Szenen, Film- und Fernsehtechnik, sowie Visueller Effekte.\nAudiovisuelle Medientechnik Die Studierenden sollen durch dieses Modul dazu befähigt werden, auf Basis der technischen Grundlagen der Video- und Fernsehtechnik weitergehende Fragestellungen selbstständig zu erarbeiten und sich so auch zukünftige technische Entwicklungen autonom erschließen zu können. Neben der Entwicklung und Förderung dieser Fachkompetenz ist die Initiierung der Methodenkompetenz eine wichtige Säule des Vorlesungsmoduls. Unter Methodenkompetenz ist hier die Selbstorganisation im Sinne von wissenschaftlicher Fragestellung an einen Themenkomplex und ein strukturiertes Vorgehen in der Erarbeitung eines Lösungsansatzes zu verstehen. Ziel ist es, das Wissen aus verschiedenen Bereichen, wie Kerninformatik, Internet- und Webtechnologien und benachbarten Wissenschaften mit der in diesem Modul unterrichteten Medientechnologien zu kombinieren und in die Medienproduktion zu integrieren. Gerade der Umgang mit Technologien und Methoden aus der Film- und Fernsehproduktion erweitert den Erfahrungshorizont der Studierenden über den bekannten Themenbereich der Kerninformatik hinaus und legt ihnen eine Einarbeitung in informatikfremde Sachverhalte und technologische Problemstellungen und deren Lösungsmethoden nahe. Pragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern audiovisueller Medien die Entwicklung und den Einsatz digitaler Medientechnik zu beraten, zu planen, durchzuführen oder zu verantworten.\nComputergrafik und Animation Die Grundlagen der zwei- und insbesondere der dreidimensionalen Computergraphik und Animation stellen ein hervorragendes Paradigma zur Vermittlung zentraler Inhalte und Kompetenzen der Medieninformatik dar.\nDen Studierenden wird deutlich, wie der Bogen von den abstrakten, geometrischen und algorithmischen Fakten zu den pragmatischen Gegebenheiten der Computergraphik-Hardware gespannt ist. Sie erkennen die Zusammenhänge zwischen Grundlagenvorlesungen (Mathematik, Algorithmen, Programmierung) und der Gestaltung von Schnittstellen und Oberflächen und werden so für die jeweiligen Inhalte zusätzlich motiviert. Dabei lernen Sie, im Kontext der Computergrafik, Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können Algorithmen entwerfen, verifizieren und bzgl. ihres Ressourcenbedarfs bewerten. Sie erwerben die Fähigkeit, aktuelle technologische Entwicklungen im Medieninformatik-Kontext zu bewerten und Trends einzuordnen.\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über Architektur und Programmierung moderner Graphikhardware, sowie deren Anwendung in konkreten Problemstellungen und Anwendungskontexten. Am Beispiel von OpenGL und der Rendering-Pipeline lernen die Studierenden Problemstellungen im Anwendungskontext zu erkennen und sind mit den zugehörigen Lösungsmustern durch praktische Programmierung vertraut.\nDas erlernte Wissen und die erlernten Kenntnisse in der Soft- und Grafikhardware-Architektur ermöglicht es erfolgreichen Teilnehmern, anschließend Echtzeit-Visualisierungen mit OpenGL zu implementieren und somit mit einer modernen, plattformunabhängigen API umzugehen, die flexibel an bestehende Anforderungen angepasst werden kann. Zudem haben Sie die Fähigkeit hochparallele Algorithmen auf der Graphikkarte zu entwerfen und auszuführen.\nDabei beherrschen die Studierenden nach Abschluss des Moduls die Fähigkeit abstrakte Szenen- und Objektbeschreibungen zu erstellen und darzustellen, sowie sich in vorhandenen Quelltext einzuarbeiten und diesen sinnvoll weiter zu entwickeln. Die Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergraphik zu beherrschen. Die Studierenden können ihr erworbenes Können und Wissen zur Implementierung einer eigenen Game/Visualisierungs-Engine einsetzen. Dies zeigen Sie durch Umsetzung eines eigenen Projektes in Kleingruppen, wo sie zusätzlich lernen mündlich überzeugend zu präsentieren, abweichende Positionen zu erkennen und in eine sach- und interessengerechte Lösung zu integrieren. Sie zeigen dadurch, dass Sie in der Lage sind sich selbstständig neues Wissen anzueigenen und zu erkennen, welches Wissen relevant ist, können mediengestalterische Grundkompetenzen anwenden und besitzen aktive Vokabularien zur Beschreibung und Realisierung angemessener Konzeptionen. Zudem können sie die Realisationen bezüglich der Zielsetzungen kritisch diskutieren.\nAudiovisuelles Medienprojekt 2 Die praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team über Themenbereiche dieses Faches und die Präsentation von eigenen Projekten und Untersuchungsergebnissen sind die Lernziele des Moduls Audiovisuelles Medienprojekt 2. Neben dieser formulierten Fachkompetenz, Methodenkompetenz und Kommunikationskompetenz stehen gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus der Ausbildung in diesem Modul.\nDie Studierenden kennen über die grundlegenden Erzählformen audiovisueller Medien hinaus spezielle Formate wie Spielfilm, Imagefilm und Studioproduktion und haben dabei folgende Fertigkeiten: Sie können eigene audiovisuelle Erzählformen auf der Basis dieser Erzählmuster entwickeln und sind befähigt zur Analyse, zur Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\nPragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content zu beraten, zu planen, durchzuführen oder zu verantworten.\nVisuelle Effekte und Animation Die Studierenden kennen die grundlegenden Produktionsschritte und Abläufe einer Film- und TV-Produktion mit visuellen Effekten sowie die in diesem Zusammenhang eingesetzten Softwaretools.\nSie haben die Fertigkeit, spezifische Fragestellungen der Umsetzung visueller, computerbasierter Effekte und der damit zusammenhängenden Bildbearbeitung zu bearbeiten und fallbezogene individuelle Lösungen zu entwickeln.\nUnter Entwicklungs- und Methodenkompetenz auf dem Gebiet der Visual Effects ist die Fähigkeit zu verstehen, eigene und für den jeweiligen Anwendungsfall auch eventuell neue Lösungsansätze zu entwickeln, bei denen die unterschiedlichen Methoden der Visual Effects-Ausführung und -Bearbeitung zum Einsatz kommen. Nachdem die Planung, Durchführung und die Bearbeitung von Projekten auf dem Gebiet der Film- und TV-Produktion mit visuellen Effekten in der Regel im kleinen Team erfolgt sind gerade die Softskills der Teamkompetenz und der Organisationskompetenz von großer Wichtigkeit in diesem Modul.\nBerufsbilder, die von diesem Modul angesprochen werden, sind zum einen in der Visual-Effects-spezifischen Softwareentwicklung, als auch im Anwendungskontext zu finden: So zum Beispiel in der Planung, Organisation, Durchführung und Verantwortung von VFX-Projekten.\nCross-Platform Game Development mit Unity 3D Die Studierenden kennen wesentliche Konzepte und Technologien des Game Developments mit Unity 3D und können diese anwenden, um eigenständig im Team Interaktive Applikationen zu konzipieren, realisieren und optimieren.\nDie Studierenden kennen die grundlegenden Möglichkeiten von Game Engine Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts die Umsetzungsmöglichkeiten und Vorgehen zu evaluieren und entsprechende Strategien zu entwickeln, sowie kritisch die benötigten Bibliotheken und Komponenten auszuwählen und diese Wahl zu begründen.\nDie Kursteilnehmer sammeln im Rahmen ihres eigenständig entwickelten Projektes Erfahrungen in der Entwicklung von Kleinprojekten bis mindestens zum Grad einer spielbaren Alphaversion oder eines Prototypen.\nProzedurale Generierung virtueller Welten Die Studierenden haben die Möglichkeit ihr Wissen über 3D-Computergrafik, 3D-Geometrie und Programmierung zu vertiefen und praktisch anzuwenden. Durch den Einsatz von Unity als Crossplatform-Game-Development-Tool können die Studierenden ihre Erfahrung mit einer aktuellen Game-Engine und der dazugehörigen Entwicklungsumgebung vertiefen und werden befähigt diese um Funktionalitäten zu erweitern.\nDie Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergrafik mit der Game-Engine Unity zu beherrschen. Das Modul ist daher geeignet das Wissen aus den Modulen „Computergrafik und Animation“, sowie ”Cross-Platform Game Development mit Unity 3D” zu vertiefen und zu erweitern.\nKonzepte aus der 3D-Computergrafik und der prozeduralen Generierung werden in diesem sehr praktisch ausgelegten Kurs implementiert und die relevanten Grundlagen vermittelt, die es den Studierenden ermöglichen eigenständig Anforderungen für Projekte mit prozeduralen Techniken zu entwickeln und diese praktisch umzusetzen und kritisch zu evaluieren.\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über verschiedene Techniken der prozeduralen Generierung zur Erstellung von 3D Content für Visualisierungen, Simulationen und Spiele, sowie die Fähigkeiten diese einzusetzen, sowie selbst zu entwickeln.\nInhalt Audiovisuelle Medientechnik  Grundlagen der Fernsehtechnik Digitale Fernsehtechnik HD-Technik Videodatenreduktion Bildwandler Das optische System der Videokamera Signalverarbeitung in der Videokamera Signalaufzeichnung Elektroakustik Bildwiedergabesysteme Lichttechnik und Beleuchtung  Computergrafik und Animation  Graphikhardware, OpenGL Transformationen und homogene Koordinaten Interpolation Kameramodelle Clipping Shaderprogrammierung Animation Texturierung Fortgeschrittene Algorithmen (Schatten, Reflexionen, Bump-, Normal-, Parallax-, Relief-Mapping, Globale Beleuchtung, Deferred Shading) Perzeption Grundlagen des Ray Tracings  Audiovisuelles Medienprojekt 2  Vertiefung der Video- und Audioaufnahmetechnik Verschiedene Dramaturgiemodelle Drehbuch, Auflösung, Storyboard Schnitt und Montage Liveproduktion im Studio Medienproduktion in den Formaten Spielfilm, Imagefilm und Studioproduktion  Visuelle Effekte und Animation  Storyboard Kalkulation Produktionabläufe Keyverfahren mit Green- und Bluescreen Compositing Umgang mit Bild-/Videobearbeitungswerkzeugen  Cross-Platform Game Development mit Unity 3D  Aufbau einer Game Engine Gameobjects Game Physics Interaktion Spielmechaniken  Prozedurale Generierung virtueller Welten  Einführung in die Game-Engine Unity Primitive und Mesh-Datenstrukturen UV-Mapping und Texturierungstechniken/Materialien Prozedurale Texturgenerierung Parametrisierung von 3D-Modellen Kurven und Flächen Height-Maps L-Systeme und „Turtle“-Grafik-Renderer Triangulations-Algorithmen für Polygone Voxel-Terrain-Generierung Grundlagen 3D-Geometrie Erweiterung des Unity-Editors  Studien-/Prüfungsleistungen Teilprüfungen in den jeweiligen Kursen. Die Benotung ergibt sich als Mittel aus den jeweiligen Teilnoten.\nAudiovisuelle Medientechnik Schriftliche Prüfung.\nComputergrafik und Animation Die erfolgreiche Teilnahme an den Praktika ist Voraussetzung für die Klausur oder mündliche Prüfung\nAudiovisuelles Medienprojekt 2 Projektarbeit\nVisuelle Effekte und Animation Projektarbeit(50%) und schriftliche Ausarbeitung(50%)\nCross-Platform Game Development mit Unity 3D Präsentation und Dokumentation eines eigenständig entwickelten Projekts\nProzedurale Generierung virtueller Welten Die erfolgreiche Teilnahme am Abschlussprojekt (eigenständiges Projekt, auch in Kleingruppen möglich) und Fachgespräch\nMedienformen  Beamer-gestützte Vorlesungen Rechnergestützte Workshops Beispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos Audiovisuelle Aufnahme- und Wiedergabegeräte  Literatur Audiovisuelle Medientechnik  Schmidt Ulrich, Professionelle Videotechnik, Springer-Verlag Berlin Heidelberg New York 2013, ISBN 978-3-642-38992-4 Johannes Webers, Film- und Fernsehtechnik, Franzis Verlag, Poing 2000, ISBN 3-7723-7116-7 Möllering, Slansky, Handbuch der professionellen Videoaufnahme Edition Filmwerkstatt, Essen, 1993, ISBN 3 - 9 802 581 - 3 - 0  Computergrafik und Animation  Peter Shirley, Fundamentals of Computer Graphics, Peters, Wellesley Andrew Woo, et al., OpenGL Programming Guide, Version 4.3, Addison-Wesley, Tomas Akenine-Möller, Eric Haines, und Naty Hoffman, Real-Time Rendering, 3. Ausgabe, Peters, Wellesley Randi J. Rost, John M. Kessenich, Barthold Lichtenbelt, OpenGL Shading Language, 2. Ausgabe, Addison-Wesley Alan Watt, 3D Computer Graphics, Addison-Wesley Frank Nielsen, Visual Computing, Charles River Media, 2005 James Foley, Andries Van Dam, et al., Computer Graphics : Principles and Practice, 2. Ausgabe, Addison-Wesley  Audiovisuelles Medienprojekt 2  James Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717 Syd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X Steven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1 David Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9 Hans Kornacher \u0026amp; Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2 Hans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6 Karel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1 Chris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins Wolfgang Lanzenberger, Michael Müller, Unternehmensfilme drehen: Business Movies im digitalen Zeitalter, ISBN 978-386764367  Visuelle Effekte und Animation  Flückiger Barbara, Visual Effects: Filmbilder aus dem Computer (Zürcher Filmstudien), Schüren Verlag GmbH, 2008, ISBN 978-3894725181 Bertram Sascha, VFX (Praxis Film), UVK, 2005, ISBN 978-3896695154  Cross-Platform Game Development mit Unity 3D  Unity 3D API (https://docs.unity3d.com/ScriptReference/) Unity 3D Manual (https://docs.unity3d.com/Manual/index.html) Unity Tutorials (https://unity3d.com/de/learn/tutorials) Ian Millington, John Funge, Artificial Intelligence For Games, Second Edition, CRC Press, 2009 Mat Buckland, Programming Game AI by Example, Wordware Game Developers Library, 2004 Steve Rabin et al., AI Game Programming Wisdom 1-4, Cengage Learning  Prozedurale Generierung virtueller Welten  Peter Shirley, Steve Marschner, “Fundamentals of Computer Graphics“, CRC Press David Salomon, “Curves and Surfaces for Computer Graphics”, Springer Carsten Seifert, “Spiele entwickeln mit Unity 5”, Hanser Noor Shaker, Julian Togelius, Mark J. Nelson, \u0026ldquo;Procedural Content Generation in Games (Computational Synthesis and Creative Systems)\u0026rdquo;, Springer Ryan Watkins, \u0026ldquo;Procedural Content Generation for Unity Game Development\u0026rdquo;, Packt Publishing Dale Green, \u0026ldquo;Procedural Content Generation for C++ Game Development\u0026rdquo;, Packt Publishing  ","tags":null,"title":"Visual Computing","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_vertiefung-visual-computing/"},{"categories":null,"content":"","tags":null,"title":"Visualistik","uri":"https://www.medieninformatik.th-koeln.de/keywords/visualistik/"},{"categories":null,"content":"","tags":null,"title":"Vsevolod Küppers","uri":"https://www.medieninformatik.th-koeln.de/autoren/vsevolod-k%C3%BCppers/"},{"categories":null,"content":" Arbeitsaufwand 150 Stunden\nAngestrebte Lernergebnisse Fachliche Vertiefung oder Verbreiterung, nach persönlichem Interesse. Es kann eines der Module aus dem Katalog aller Module der Informatik Bachelorstudiengänge gewählt werden. Auch Pflichtmodule anderer Informatik Studiengänge am Campus können als Wahlpflichtmodule in der Medieninformatik belegt werden.\n","tags":null,"title":"Wahlpflichtmodul","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_wpf/"},{"categories":null,"content":" Arbeitsaufwand 150 Stunden\nAngestrebte Lernergebnisse Fachliche Vertiefung oder Verbreiterung, nach persönlichem Interesse. Es kann eines der Module aus dem Katalog aller Module der Informatik Bachelorstudiengänge gewählt werden. Auch Pflichtmodule anderer Informatik Studiengänge am Campus können als Wahlpflichtmodule in der Medieninformatik belegt werden.\n","tags":null,"title":"Wahlpflichtmodul","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_wpf/"},{"categories":null,"content":" Kurzbeschreibung Einführungen in Konzepte, Techniken und Arbeitsweisen der Web Entwicklung.\nLehrform/SWS 16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\nLehrveranstaltungen  Web Frontend Entwicklung Serverseitige Frameworks und Dienste Internet of Things Web Development Projekt  Arbeitsaufwand 600h Gesamtaufwand\nWeb-Frontend Entwicklung 50h Vorlesung, Seminar; 100h Selbstlernphase\nServerseitige Frameworks und Dienste 50h Vorlesung, Seminar; 100h Selbstlernphase\nInternet of Things 50h Vorlesung, Seminar; 100h Selbstlernphase\nWeb Development Projekt 150h Projekt\nAngestrebte Lernergebnisse Die Studierenden - kennen ausgewählte Methoden und Frameworks für die Web Entwicklung im Front-End, im Back-End und in vernetzten Geräten (IoT), - können eine Methoden und Technologiewahl für einen Projektkontext fachlich begründen, - können Frameworks und Methoden zur Realisierung von Proof-of-Concepts in einem Projektkontext einsetzen und - können die erzielten Ergebnisse fachlich, kritisch einordnen und diskutieren, - um kompetent in Web Entwicklungs Teams mitwirken zu können.\nWeb Frontend Entwicklung Die Studierenden kennen wesentliche Konzepte und Technologien des Web-Frontend Developments und können diese anwenden, um eigenständig im Team Web-Frontends zu konzipieren, realisieren und optimieren.\nDie Studierenden sind in der Lage ein gegebenes Gestaltungskonzept zu verstehen und zu erweitern, um dies als Web-Frontend umzusetzen.\nDie Studierenden kennen Web-Frontend Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts das optimale Framework Set zu konfektionieren und die Auswahl zu begründen.\nDie Studierenden kennen das Zusammenspiel von server- und clientseitigen Komponenten im Bereich des Webs und können Web-Frontends konzipieren und realisieren, die mit serverseitigen Komponenten und Diensten möglichst optimal zusammen arbeiten. Sie können außerdem, bezogen auf eine konkrete Aufgabenstellung, abwägen, welche Funktionalitäten clientseitig und welche serverseitig gelöst werden sollten.\nServerseitige Frameworks und Dienste Die Studentinnen und Studenten kennen - wesentliche Frameworks, Dienste und Werkzeuge für die serverseitige Entwicklung von Web Anwendungen - können ausgewählte Frameworks, Dienste und Tools in einem Projektkontext anwenden.\nDie Kompetenz zur systematischen Entwicklung von Systemen in einem arbeitsteiligen Team wird eingeübt und vertieft. Kenntnisse aus den anderen Modulen der Vertiefung werden vertieft und verknüpft und im Rahmen eines konkreten Projektauftrags angewendet.\nDie Studierenden sind in der Lage ein Projektbriefing zu durchdringen und daraus einen Projektauftrag abzuleiten und diesen im Team abzuarbeiten.\nDen Teilnehmern steht eine Auswahl an Techniken und Frameworks zur Verfügung, aus dem sie die passenden Ansätze begründet auswählen und anwenden können.\nDie StudentenInnen sind in der Lage eine komplexe Anwendung im Web über mehrere Endgeräte hinweg zu planen, zu realisieren und zu dokumentieren.\nInternet of Things In diesem Modul lernen die Teilnehmer das Gebiet Internet of Things kennen. Dabei liegt ein besonderer Fokus auf der Bedeutung des Web für Applikationen jenseits eines Browsers. Immer mehr Alltagsgegenstände werden mit Technologien angereichert, die eine Dienste-Bereitstellung oder Dienst-Nutzung über das Web ermöglichen (beispielsweise das Steuern von Gegenständen oder das Erfassen von Sensordaten). In diesem Modul werden relevante Konzepte und aktuelle Technologien für das Internet der Dinge diskutiert und in prototypischen Anwendungen erprobt.\nStudierende können nach diesem Modul selbstständig Anwendungen für das Internet of Things konzipieren und realisieren, indem Sie - hardware-nahe Aspekte im Design der Applikation berücksichtigen, - eine System-Architektur entwerfen, - kriterien-basiert geeignete Technologien zur Realisierung auswählen, - eine prototypische Anwendung implementieren, - inkrementell-iterativ vorgehen und Projektentscheidungen auf der Grundlage vorliegender Zwischenstände treffen.\nInhalt Web Frontend Entwicklung  Web Basics: HTML, CSS, Javascript CSS: Komplexe Layouts \u0026amp; Responsivität Javascript: Dynamische Anwendungen Media Types CSS Frameworks CSS Preprozessoren Javascript Frameworks Performance Microdata, Internationalisierung, SEO, Barrierefreiheit  Serverseitige Frameworks und Dienste  NodeJS Services im Web: Amazon WS (AWS), Google Firebase NoSQL Datenbanken Web Analyse: Piwik,  Ausgewählte Tools sollen tiefgreifend erarbeitet werden und in einem Projektkontext angewendet werden. Dies erfolgt in der Regel in dem begleitenden Projekt\nInternet of Things  Physical Computing Prototyping und Retrofitting Hardware (bspw. RaspberryPi und Arduino) Sensoren und Aktoren Frameworks (bspw. NodeRed und Johnny Five) Architekturen und Protokolle (bspw. event-basierte Architekturen und MQTT) Mobile Web- und Smartphone-Sensoren (bspw. GPS, Beacons)  Studien-/Prüfungsleistungen Projektarbeit mit Projektpräsentationsprüfung und Fachgespräch.\nMedienformen Beamergestützte Vorträge, Rechnergestützte Workshops\nLiteratur  Randy Connolly, Ricardo Hoar: Fundamentals of Web Development Andy Clark: Hardboiled Web-Design Tilkov et al.: REST und HTTP- Entwicklung und Integration nach dem Architekturstil des Web, dpunkt.verlag 2015 Watkin: Practical XMPP, Packt Publishing 2016 Saint-Andre: XMPP: THe Definitive Guide, OReilly 2009 Roy: RabbitMQ in Depth, Manning 2016 Newman: Building Microservices: Designing fine-grained systems, OReilly 2015  ","tags":null,"title":"Web Development","uri":"https://www.medieninformatik.th-koeln.de/study/bachelor/moduls/ba_vertiefung-web_development/"},{"categories":null,"content":" Kurzbeschreibung Einführungen in Konzepte, Techniken und Arbeitsweisen der Web Entwicklung.\nLehrform/SWS 16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\nLehrveranstaltungen  Web Frontend Entwicklung Serverseitige Frameworks und Dienste Internet of Things Web Development Projekt  Arbeitsaufwand 600h Gesamtaufwand\nWeb-Frontend Entwicklung 50h Vorlesung, Seminar; 100h Selbstlernphase\nServerseitige Frameworks und Dienste 50h Vorlesung, Seminar; 100h Selbstlernphase\nInternet of Things 50h Vorlesung, Seminar; 100h Selbstlernphase\nWeb Development Projekt 150h Projekt\nAngestrebte Lernergebnisse Die Studierenden - kennen ausgewählte Methoden und Frameworks für die Web Entwicklung im Front-End, im Back-End und in vernetzten Geräten (IoT), - können eine Methoden und Technologiewahl für einen Projektkontext fachlich begründen, - können Frameworks und Methoden zur Realisierung von Proof-of-Concepts in einem Projektkontext einsetzen und - können die erzielten Ergebnisse fachlich, kritisch einordnen und diskutieren, - um kompetent in Web Entwicklungs Teams mitwirken zu können.\nWeb Frontend Entwicklung Die Studierenden kennen wesentliche Konzepte und Technologien des Web-Frontend Developments und können diese anwenden, um eigenständig im Team Web-Frontends zu konzipieren, realisieren und optimieren.\nDie Studierenden sind in der Lage ein gegebenes Gestaltungskonzept zu verstehen und zu erweitern, um dies als Web-Frontend umzusetzen.\nDie Studierenden kennen Web-Frontend Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts das optimale Framework Set zu konfektionieren und die Auswahl zu begründen.\nDie Studierenden kennen das Zusammenspiel von server- und clientseitigen Komponenten im Bereich des Webs und können Web-Frontends konzipieren und realisieren, die mit serverseitigen Komponenten und Diensten möglichst optimal zusammen arbeiten. Sie können außerdem, bezogen auf eine konkrete Aufgabenstellung, abwägen, welche Funktionalitäten clientseitig und welche serverseitig gelöst werden sollten.\nServerseitige Frameworks und Dienste Die Studentinnen und Studenten kennen - wesentliche Frameworks, Dienste und Werkzeuge für die serverseitige Entwicklung von Web Anwendungen - können ausgewählte Frameworks, Dienste und Tools in einem Projektkontext anwenden.\nDie Kompetenz zur systematischen Entwicklung von Systemen in einem arbeitsteiligen Team wird eingeübt und vertieft. Kenntnisse aus den anderen Modulen der Vertiefung werden vertieft und verknüpft und im Rahmen eines konkreten Projektauftrags angewendet.\nDie Studierenden sind in der Lage ein Projektbriefing zu durchdringen und daraus einen Projektauftrag abzuleiten und diesen im Team abzuarbeiten.\nDen Teilnehmern steht eine Auswahl an Techniken und Frameworks zur Verfügung, aus dem sie die passenden Ansätze begründet auswählen und anwenden können.\nDie StudentenInnen sind in der Lage eine komplexe Anwendung im Web über mehrere Endgeräte hinweg zu planen, zu realisieren und zu dokumentieren.\nInternet of Things In diesem Modul lernen die Teilnehmer das Gebiet Internet of Things kennen. Dabei liegt ein besonderer Fokus auf der Bedeutung des Web für Applikationen jenseits eines Browsers. Immer mehr Alltagsgegenstände werden mit Technologien angereichert, die eine Dienste-Bereitstellung oder Dienst-Nutzung über das Web ermöglichen (beispielsweise das Steuern von Gegenständen oder das Erfassen von Sensordaten). In diesem Modul werden relevante Konzepte und aktuelle Technologien für das Internet der Dinge diskutiert und in prototypischen Anwendungen erprobt.\nStudierende können nach diesem Modul selbstständig Anwendungen für das Internet of Things konzipieren und realisieren, indem Sie - hardware-nahe Aspekte im Design der Applikation berücksichtigen, - eine System-Architektur entwerfen, - kriterien-basiert geeignete Technologien zur Realisierung auswählen, - eine prototypische Anwendung implementieren, - inkrementell-iterativ vorgehen und Projektentscheidungen auf der Grundlage vorliegender Zwischenstände treffen.\nInhalt Web Frontend Entwicklung  Web Basics: HTML, CSS, Javascript CSS: Komplexe Layouts \u0026amp; Responsivität Javascript: Dynamische Anwendungen Media Types CSS Frameworks CSS Preprozessoren Javascript Frameworks Performance Microdata, Internationalisierung, SEO, Barrierefreiheit  Serverseitige Frameworks und Dienste  NodeJS Services im Web: Amazon WS (AWS), Google Firebase NoSQL Datenbanken Web Analyse: Piwik,  Ausgewählte Tools sollen tiefgreifend erarbeitet werden und in einem Projektkontext angewendet werden. Dies erfolgt in der Regel in dem begleitenden Projekt\nInternet of Things  Physical Computing Prototyping und Retrofitting Hardware (bspw. RaspberryPi und Arduino) Sensoren und Aktoren Frameworks (bspw. NodeRed und Johnny Five) Architekturen und Protokolle (bspw. event-basierte Architekturen und MQTT) Mobile Web- und Smartphone-Sensoren (bspw. GPS, Beacons)  Studien-/Prüfungsleistungen Projektarbeit mit Projektpräsentationsprüfung und Fachgespräch.\nMedienformen Beamergestützte Vorträge, Rechnergestützte Workshops\nLiteratur  Randy Connolly, Ricardo Hoar: Fundamentals of Web Development Andy Clark: Hardboiled Web-Design Tilkov et al.: REST und HTTP- Entwicklung und Integration nach dem Architekturstil des Web, dpunkt.verlag 2015 Watkin: Practical XMPP, Packt Publishing 2016 Saint-Andre: XMPP: THe Definitive Guide, OReilly 2009 Roy: RabbitMQ in Depth, Manning 2016 Newman: Building Microservices: Designing fine-grained systems, OReilly 2015  ","tags":null,"title":"Web Development","uri":"https://www.medieninformatik.th-koeln.de/study/master/moduls/ba_vertiefung-web_development/"},{"categories":null,"content":"","tags":null,"title":"Years","uri":"https://www.medieninformatik.th-koeln.de/years/"}]